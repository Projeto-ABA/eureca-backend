/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 05 23:54:00 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.api.http.response.enrollment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.enrollment.EnrollmentsMetricsPerTerm;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.enrollment.EnrollmentsMetricsPerTermSummary;
import java.util.Collection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EnrollmentsMetricsPerTermSummary_ESTest extends EnrollmentsMetricsPerTermSummary_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary0 = new EnrollmentsMetricsPerTermSummary((String) null, "", "", (String) null, (Collection<EnrollmentsMetricsPerTerm>) null);
      String string0 = enrollmentsMetricsPerTermSummary0.getSubjectName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary0 = new EnrollmentsMetricsPerTermSummary("", "", "", "", (Collection<EnrollmentsMetricsPerTerm>) null);
      String string0 = enrollmentsMetricsPerTermSummary0.getSubjectName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary0 = new EnrollmentsMetricsPerTermSummary("$Hh<K{", (String) null, "", (String) null, (Collection<EnrollmentsMetricsPerTerm>) null);
      enrollmentsMetricsPerTermSummary0.setSubjectCode((String) null);
      String string0 = enrollmentsMetricsPerTermSummary0.getSubjectCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary0 = new EnrollmentsMetricsPerTermSummary("", "hlds~p;en", "hlds~p;en", "hlds~p;en", (Collection<EnrollmentsMetricsPerTerm>) null);
      enrollmentsMetricsPerTermSummary0.getSubjectCode();
      assertEquals("hlds~p;en", enrollmentsMetricsPerTermSummary0.getSubjectName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary0 = new EnrollmentsMetricsPerTermSummary("", "", "", "21qmJ", (Collection<EnrollmentsMetricsPerTerm>) null);
      assertEquals("", enrollmentsMetricsPerTermSummary0.getSubjectCode());
      
      enrollmentsMetricsPerTermSummary0.setSubjectCode("21qmJ");
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary1 = new EnrollmentsMetricsPerTermSummary("", "", "", (String) null, (Collection<EnrollmentsMetricsPerTerm>) null);
      int int0 = enrollmentsMetricsPerTermSummary0.compareTo(enrollmentsMetricsPerTermSummary1);
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary0 = new EnrollmentsMetricsPerTermSummary(", enrollmentsCount=", ", enrollmentsCount=", (String) null, ", enrollmentsCount=", (Collection<EnrollmentsMetricsPerTerm>) null);
      enrollmentsMetricsPerTermSummary0.setSubjectCode("$ok)U)5Lx@E1Y ");
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary1 = new EnrollmentsMetricsPerTermSummary((String) null, "", "Ej!u$[.i@U", "*%3}mR0A+0", (Collection<EnrollmentsMetricsPerTerm>) null);
      int int0 = enrollmentsMetricsPerTermSummary0.compareTo(enrollmentsMetricsPerTermSummary1);
      assertEquals("*%3}mR0A+0", enrollmentsMetricsPerTermSummary1.getSubjectName());
      assertEquals((-33), int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary0 = new EnrollmentsMetricsPerTermSummary("PS2vn5jq:%\"8iU", "PS2vn5jq:%\"8iU", "PS2vn5jq:%\"8iU", "", (Collection<EnrollmentsMetricsPerTerm>) null);
      // Undeclared exception!
      try { 
        enrollmentsMetricsPerTermSummary0.compareTo((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.api.http.response.enrollment.EnrollmentsMetricsPerTermSummary", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary0 = new EnrollmentsMetricsPerTermSummary(", enrollmentsCount=", ", enrollmentsCount=", ", enrollmentsCount=", ", enrollmentsCount=", (Collection<EnrollmentsMetricsPerTerm>) null);
      // Undeclared exception!
      try { 
        enrollmentsMetricsPerTermSummary0.compareTo(", subjectName='");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to br.edu.ufcg.computacao.eureca.backend.api.http.response.enrollment.EnrollmentsMetricsPerTermSummary
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.api.http.response.enrollment.EnrollmentsMetricsPerTermSummary", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary0 = new EnrollmentsMetricsPerTermSummary("", "", "", "21qmJ", (Collection<EnrollmentsMetricsPerTerm>) null);
      String string0 = enrollmentsMetricsPerTermSummary0.getSubjectCode();
      assertEquals("21qmJ", enrollmentsMetricsPerTermSummary0.getSubjectName());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary0 = new EnrollmentsMetricsPerTermSummary("%fRosJ>YOqoV", "%fRosJ>YOqoV", "%fRosJ>YOqoV", "%fRosJ>YOqoV", (Collection<EnrollmentsMetricsPerTerm>) null);
      Collection<EnrollmentsMetricsPerTerm> collection0 = enrollmentsMetricsPerTermSummary0.getTerms();
      assertNull(collection0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary0 = new EnrollmentsMetricsPerTermSummary("%fRosJ>YOqoV", "%fRosJ>YOqoV", "%fRosJ>YOqoV", "%fRosJ>YOqoV", (Collection<EnrollmentsMetricsPerTerm>) null);
      enrollmentsMetricsPerTermSummary0.setSubjectName("%fRosJ>YOqoV");
      assertEquals("%fRosJ>YOqoV", enrollmentsMetricsPerTermSummary0.getFrom());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary0 = new EnrollmentsMetricsPerTermSummary("%fRosJ>YOqoV", "%fRosJ>YOqoV", "%fRosJ>YOqoV", "%fRosJ>YOqoV", (Collection<EnrollmentsMetricsPerTerm>) null);
      String string0 = enrollmentsMetricsPerTermSummary0.getSubjectName();
      assertEquals("%fRosJ>YOqoV", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary0 = new EnrollmentsMetricsPerTermSummary("%fRosJ>YOqoV", "%fRosJ>YOqoV", "%fRosJ>YOqoV", "%fRosJ>YOqoV", (Collection<EnrollmentsMetricsPerTerm>) null);
      int int0 = enrollmentsMetricsPerTermSummary0.compareTo(enrollmentsMetricsPerTermSummary0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary0 = new EnrollmentsMetricsPerTermSummary("%fRosJ>YOqoV", "%fRosJ>YOqoV", "%fRosJ>YOqoV", "%fRosJ>YOqoV", (Collection<EnrollmentsMetricsPerTerm>) null);
      String string0 = enrollmentsMetricsPerTermSummary0.toString();
      assertEquals("EnrollmentsMetricsPerTermSummary{subjectCode='%fRosJ>YOqoV', subjectName='%fRosJ>YOqoV', terms=null}", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EnrollmentsMetricsPerTermSummary enrollmentsMetricsPerTermSummary0 = new EnrollmentsMetricsPerTermSummary("%fRosJ>YOqoV", "%fRosJ>YOqoV", "%fRosJ>YOqoV", "%fRosJ>YOqoV", (Collection<EnrollmentsMetricsPerTerm>) null);
      enrollmentsMetricsPerTermSummary0.setTerms((Collection<EnrollmentsMetricsPerTerm>) null);
      assertEquals("%fRosJ>YOqoV", enrollmentsMetricsPerTermSummary0.getTo());
  }
}
