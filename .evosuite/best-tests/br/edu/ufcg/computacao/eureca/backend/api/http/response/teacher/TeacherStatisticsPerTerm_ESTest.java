/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 05 23:15:21 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.api.http.response.teacher;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.teacher.TeacherStatisticsPerTerm;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.teacher.TeacherStatisticsSummary;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TeacherStatisticsPerTerm_ESTest extends TeacherStatisticsPerTerm_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TeacherStatisticsPerTerm teacherStatisticsPerTerm0 = new TeacherStatisticsPerTerm((String) null, (TeacherStatisticsSummary) null);
      String string0 = teacherStatisticsPerTerm0.getTerm();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TeacherStatisticsPerTerm teacherStatisticsPerTerm0 = new TeacherStatisticsPerTerm("", (TeacherStatisticsSummary) null);
      String string0 = teacherStatisticsPerTerm0.getTerm();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = mock(TeacherStatisticsSummary.class, new ViolatedAssumptionAnswer());
      TeacherStatisticsPerTerm teacherStatisticsPerTerm0 = new TeacherStatisticsPerTerm((String) null, teacherStatisticsSummary0);
      teacherStatisticsPerTerm0.setTerm("w0qjK57!hC.#jXN~,");
      int int0 = teacherStatisticsPerTerm0.compareTo(teacherStatisticsPerTerm0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TeacherStatisticsPerTerm teacherStatisticsPerTerm0 = new TeacherStatisticsPerTerm("XQ ,8NOgg0`", (TeacherStatisticsSummary) null);
      TeacherStatisticsPerTerm teacherStatisticsPerTerm1 = new TeacherStatisticsPerTerm("XQ ,8NOgg0`", (TeacherStatisticsSummary) null);
      teacherStatisticsPerTerm1.setTerm(" HoBv!#[U>Do~B\"w");
      int int0 = teacherStatisticsPerTerm0.compareTo(teacherStatisticsPerTerm1);
      assertEquals(56, int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TeacherStatisticsPerTerm teacherStatisticsPerTerm0 = new TeacherStatisticsPerTerm("bzzRGyh)8F-ZM]", (TeacherStatisticsSummary) null);
      TeacherStatisticsPerTerm teacherStatisticsPerTerm1 = new TeacherStatisticsPerTerm("^eu", (TeacherStatisticsSummary) null);
      teacherStatisticsPerTerm0.setTerm("^eu");
      teacherStatisticsPerTerm1.setTerm("bzzRGyh)8F-ZM]");
      int int0 = teacherStatisticsPerTerm0.compareTo(teacherStatisticsPerTerm1);
      assertEquals((-4), int0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = mock(TeacherStatisticsSummary.class, new ViolatedAssumptionAnswer());
      TeacherStatisticsPerTerm teacherStatisticsPerTerm0 = new TeacherStatisticsPerTerm("}vk|", teacherStatisticsSummary0);
      // Undeclared exception!
      try { 
        teacherStatisticsPerTerm0.compareTo("}vk|");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to br.edu.ufcg.computacao.eureca.backend.api.http.response.teacher.TeacherStatisticsPerTerm
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.api.http.response.teacher.TeacherStatisticsPerTerm", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TeacherStatisticsPerTerm teacherStatisticsPerTerm0 = new TeacherStatisticsPerTerm("br.edu.ufcg.computacao.eureca.backend.api.http.response.teacher.TeacherStatisticsPerTerm", (TeacherStatisticsSummary) null);
      teacherStatisticsPerTerm0.setTermSummary((TeacherStatisticsSummary) null);
      assertEquals("br.edu.ufcg.computacao.eureca.backend.api.http.response.teacher.TeacherStatisticsPerTerm", teacherStatisticsPerTerm0.getTerm());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TeacherStatisticsPerTerm teacherStatisticsPerTerm0 = new TeacherStatisticsPerTerm("br.edu.ufcg.computacao.eureca.backend.api.http.response.teacher.TeacherStatisticsPerTerm", (TeacherStatisticsSummary) null);
      // Undeclared exception!
      try { 
        teacherStatisticsPerTerm0.compareTo((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.api.http.response.teacher.TeacherStatisticsPerTerm", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      TeacherStatisticsPerTerm teacherStatisticsPerTerm0 = new TeacherStatisticsPerTerm("br.edu.ufcg.computacao.eureca.backend.api.http.response.teacher.TeacherStatisticsPerTerm", (TeacherStatisticsSummary) null);
      String string0 = teacherStatisticsPerTerm0.getTerm();
      assertEquals("br.edu.ufcg.computacao.eureca.backend.api.http.response.teacher.TeacherStatisticsPerTerm", string0);
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      TeacherStatisticsPerTerm teacherStatisticsPerTerm0 = new TeacherStatisticsPerTerm("br.edu.ufcg.computacao.eureca.backend.api.http.response.teacher.TeacherStatisticsPerTerm", (TeacherStatisticsSummary) null);
      TeacherStatisticsSummary teacherStatisticsSummary0 = teacherStatisticsPerTerm0.getTermSummary();
      assertNull(teacherStatisticsSummary0);
  }
}
