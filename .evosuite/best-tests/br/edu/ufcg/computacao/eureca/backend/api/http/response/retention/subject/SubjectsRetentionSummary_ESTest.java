/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 05 23:17:43 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.api.http.response.retention.subject;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.retention.subject.SubjectsRetentionSummary;
import br.edu.ufcg.computacao.eureca.backend.core.models.MetricStatistics;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SubjectsRetentionSummary_ESTest extends SubjectsRetentionSummary_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SubjectsRetentionSummary subjectsRetentionSummary0 = new SubjectsRetentionSummary((String) null, (String) null, (MetricStatistics) null, (MetricStatistics) null);
      String string0 = subjectsRetentionSummary0.getTo();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SubjectsRetentionSummary subjectsRetentionSummary0 = new SubjectsRetentionSummary("D~?J[T/jZ", "D~?J[T/jZ", (MetricStatistics) null, (MetricStatistics) null);
      String string0 = subjectsRetentionSummary0.getTo();
      assertEquals("D~?J[T/jZ", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MetricStatistics metricStatistics0 = mock(MetricStatistics.class, new ViolatedAssumptionAnswer());
      SubjectsRetentionSummary subjectsRetentionSummary0 = new SubjectsRetentionSummary((String) null, "br.edu.ufcg.computacao.eureca.backend.api.http.response.retention.subject.SubjectsRetentionSummary", metricStatistics0, metricStatistics0);
      String string0 = subjectsRetentionSummary0.getFrom();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SubjectsRetentionSummary subjectsRetentionSummary0 = new SubjectsRetentionSummary((String) null, (String) null, (MetricStatistics) null, (MetricStatistics) null);
      subjectsRetentionSummary0.setFrom("");
      String string0 = subjectsRetentionSummary0.getFrom();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SubjectsRetentionSummary subjectsRetentionSummary0 = new SubjectsRetentionSummary("", "", (MetricStatistics) null, (MetricStatistics) null);
      String string0 = subjectsRetentionSummary0.getTo();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SubjectsRetentionSummary subjectsRetentionSummary0 = new SubjectsRetentionSummary("br.edu.ufcg.computacao.eureca.backend.core.models.MetricStatistics", "", (MetricStatistics) null, (MetricStatistics) null);
      String string0 = subjectsRetentionSummary0.getFrom();
      assertEquals("br.edu.ufcg.computacao.eureca.backend.core.models.MetricStatistics", string0);
      assertEquals("", subjectsRetentionSummary0.getTo());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SubjectsRetentionSummary subjectsRetentionSummary0 = new SubjectsRetentionSummary("", "", (MetricStatistics) null, (MetricStatistics) null);
      subjectsRetentionSummary0.setTo("");
      assertEquals("", subjectsRetentionSummary0.getFrom());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SubjectsRetentionSummary subjectsRetentionSummary0 = new SubjectsRetentionSummary("", "", (MetricStatistics) null, (MetricStatistics) null);
      subjectsRetentionSummary0.setPossible((MetricStatistics) null);
      assertEquals("", subjectsRetentionSummary0.getFrom());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SubjectsRetentionSummary subjectsRetentionSummary0 = new SubjectsRetentionSummary("", "", (MetricStatistics) null, (MetricStatistics) null);
      MetricStatistics metricStatistics0 = subjectsRetentionSummary0.getPossible();
      assertNull(metricStatistics0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SubjectsRetentionSummary subjectsRetentionSummary0 = new SubjectsRetentionSummary("", "", (MetricStatistics) null, (MetricStatistics) null);
      MetricStatistics metricStatistics0 = subjectsRetentionSummary0.getAdequate();
      assertNull(metricStatistics0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SubjectsRetentionSummary subjectsRetentionSummary0 = new SubjectsRetentionSummary("", "", (MetricStatistics) null, (MetricStatistics) null);
      subjectsRetentionSummary0.setAdequate((MetricStatistics) null);
      assertEquals("", subjectsRetentionSummary0.getTo());
  }
}
