/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 05 22:46:40 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.api.http.response.students;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV;
import br.edu.ufcg.computacao.eureca.backend.core.models.CostClass;
import br.edu.ufcg.computacao.eureca.backend.core.models.Curriculum;
import br.edu.ufcg.computacao.eureca.backend.core.models.RiskClass;
import br.edu.ufcg.computacao.eureca.backend.core.models.Student;
import br.edu.ufcg.computacao.eureca.backend.core.models.StudentStatus;
import java.time.ZoneId;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.PriorityQueue;
import java.util.Set;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class StudentCSV_ESTest extends StudentCSV_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Curriculum curriculum0 = new Curriculum("", "", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-1285), (-1285), (-1285), (-1285), (-1285), (-1285), (-1285), (-1285), 2498, 2498, linkedList0, linkedList0, linkedList0, linkedList0, linkedList0);
      Student student0 = new Student("", "", (String) null, (String) null, "", (String) null, (String) null, (String) null, (String) null, "", "A-XNY", "", studentStatus0, "", "", "A-XNY", (String) null, "!P%5l1VXh", "", "!P%5l1VXh", "A-XNY", "", curriculum0, (-1285), 2498, (-1285), (-1285), 2498, (-1285), 2498, (-1285), (-1285), (-1285), (-1285), (-1285), 2498, 799, (-19), 799);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      int int0 = studentCSV0.computeCompletedCredits();
      assertEquals((-72), int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) stack0, (Collection<String>) treeSet0, locale_FilteringMode0);
      Curriculum curriculum0 = new Curriculum("O", "", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 8, 2158, 291, 2158, 291, 2158, 8, 8, (-2748), 0, list0, treeSet0, list0, list0, treeSet0);
      Student student0 = new Student("O", "8L5,xR]/a^)'Ym9", "O", "8L5,xR]/a^)'Ym9", "@yj`$uBY6h*BQfD", "@yj`$uBY6h*BQfD", "@yj`$uBY6h*BQfD", "8L5,xR]/a^)'Ym9", "8L5,xR]/a^)'Ym9", "@yj`$uBY6h*BQfD", "8L5,xR]/a^)'Ym9", "O", studentStatus0, "", "@yj`$uBY6h*BQfD", "~vwsDnsR[w", "U", "Jk}mb>t7+K9(oP6e=E", "Jk}mb>t7+K9(oP6e=E", "~vwsDnsR[w", "U", "", curriculum0, (-1), 2045, 291, 2045, (-1), (-2748), 2540, 0, 2045, 0, 3, 0, 291, (-1375), 2540, 2540);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      int int0 = studentCSV0.getSuspendedTerms();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      PriorityQueue<String> priorityQueue0 = new PriorityQueue<String>();
      Curriculum curriculum0 = new Curriculum(".reverse()", "", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 2524, 12288, 12288, 12288, 12288, (-3230), 12288, (-3230), 0, (-381), priorityQueue0, priorityQueue0, priorityQueue0, priorityQueue0, priorityQueue0);
      Student student0 = new Student("%;sKDh", "%;sKDh", "%;sKDh", "%;sKDh", "%;sKDh", ".reverse()", "%;sKDh", ".reverse()", "", "", "%;sKDh", "%;sKDh", studentStatus0, ".reverse()", "", ".reverse()", "", "", "", "", "Q!4Xz?Ajk,yBg", "", curriculum0, (-381), (-3230), (-1889), 2524, 0, (-3230), 11, (-381), (-1889), 12288, 8233, (-442), (-2019), (-1889), (-1), (-1));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      int int0 = studentCSV0.getSuspendedTerms();
      assertEquals((-442), int0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum("6$.U0[.xo", (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 2272, 0, 0, 2272, 2272, 0, 0, 0, (-1), (-2264), set0, set0, set0, (Collection<String>) null, set0);
      Student student0 = new Student("j66|", "j66|", "BloomFilters must have the sam size underlying bit arrays (%s != %s)", "6$.U0[.xo", "BloomFilters must have the sam size underlying bit arrays (%s != %s)", "BloomFilters must have the sam size underlying bit arrays (%s != %s)", "BloomFilters must have the sam size underlying bit arrays (%s != %s)", "6$.U0[.xo", "j66|", "BloomFilters must have the sam size underlying bit arrays (%s != %s)", "6$.U0[.xo", (String) null, studentStatus0, "j66|", "(ThT9", "(ThT9", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "6$.U0[.xo", "", "j66|", (String) null, "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", curriculum0, (-2264), 0, 32, 0, (-1), 0, 32, 136.68729199, 0.0, (-2264), 307, (-1), 0, (-1), 0, 0.0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getSuccessRate();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      PriorityQueue<String> priorityQueue0 = new PriorityQueue<String>();
      Curriculum curriculum0 = new Curriculum(".reverse()", "", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 2524, 12288, 12288, 12288, 12288, (-3230), 12288, (-3230), 0, (-381), priorityQueue0, priorityQueue0, priorityQueue0, priorityQueue0, priorityQueue0);
      Student student0 = new Student("%;sKDh", "%;sKDh", "%;sKDh", "%;sKDh", "%;sKDh", ".reverse()", "%;sKDh", ".reverse()", "", "", "%;sKDh", "%;sKDh", studentStatus0, ".reverse()", "", ".reverse()", "", "", "", "", "Q!4Xz?Ajk,yBg", "", curriculum0, (-381), (-3230), (-1889), 2524, 0, (-3230), 11, (-381), (-1889), 12288, 8233, (-442), (-2019), (-1889), (-1), (-1));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getSuccessRate();
      assertEquals((-357.8181818181818), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      PriorityQueue<String> priorityQueue0 = new PriorityQueue<String>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Curriculum curriculum0 = new Curriculum("=9KZ?u7nd*}2", (String) null, arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, (-4083), (-4083), 2768, 1073741823, 2768, 1073741823, (-4083), (-4083), (-1891), 1073741823, priorityQueue0, priorityQueue0, linkedList0, priorityQueue0, linkedList0);
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("(r[SctlL5k-s", "", (String) null, "DyJynp[V(ui^OZI", (String) null, "M3Sr2x<z`wrL`", (String) null, "", "", "", "^*", "BitArrays must be of equal length (%s != %s)", studentStatus0, (String) null, "", (String) null, (String) null, "z/o%", "", "", "z/o%", "", curriculum0, 32, 2628, 32, 6, 6, (-4083), (-1163), 0.0, 32, 0.0, 6, 2628, (-1163), 32, 2802, 3780.908);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getStatusTerm();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Curriculum curriculum0 = new Curriculum("br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "CharMatcher.forPredicate(", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 1, 1, 1, 0, 0, 0, 0, 1385, 1385, 1, treeSet0, treeSet0, treeSet0, treeSet0, treeSet0);
      Student student0 = new Student((String) null, (String) null, (String) null, "CharMatcher.isNot('", "CharMatcher.forPredicate(", "<8tT", "kXUzVW]WV5\"UI3{$C-", "kXUzVW]WV5\"UI3{$C-", "CharMatcher.isNot('", "CharMatcher.forPredicate(", (String) null, "<8tT", studentStatus0, "", "", "<8tT", "KqQh=]2nuPx5", "kXUzVW]WV5\"UI3{$C-", "", (String) null, "", (String) null, curriculum0, 1, 1385, 1385, 11, (-1295), 1385, 3449, 0, 3449, (-1174.824099), 415, 0, 0, (-1502), 0, 0.0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getStatusTerm();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum("6$.U0[.xo", (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 2272, 0, 0, (-326), 2272, 0, 0, 0, 18, (-2289), set0, set0, set0, (Collection<String>) null, set0);
      Student student0 = new Student("", "", "BloomFilters must have the sam size underlying bit arrays (%s != %s)", "6$.U0[.xo", "BloomFilters must have the sam size underlying bit arrays (%s != %s)", "BloomFilters must have the sam size underlying bit arrays (%s != %s)", "", "6$.U0[.xo", "", "BloomFilters must have the sam size underlying bit arrays (%s != %s)", "6$.U0[.xo", (String) null, studentStatus0, "", "(ThT9", "(ThT9", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "6$.U0[.xo", "", "", (String) null, "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", curriculum0, (-2289), (-326), 32, 0, 18, 0, 32, 136.68729199, 0.0, (-2289), (-310), 18, 0, 1455, 0, 0.0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getStatusStr();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Curriculum curriculum0 = new Curriculum("z+eL", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", (ArrayList<Integer>) null, (ArrayList<Integer>) null, arrayList0, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-928), (-1903), (-1903), 0, (-1903), (-1903), 1099, 0, 1721, 0, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      Student student0 = new Student("", "", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "", "", "z+eL", "", "z+eL", "z+eL", "j.1$(}rxA", "He\"", studentStatus0, "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "z+eL", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "j.1$(}rxA", "j.1$(}rxA", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", curriculum0, 0, 1099, 1099, 1, 972, 0, 1, 852.9, 0.0, (-1903), (-928), 0, (-1975), 0, 0, (-1903));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getStatusStr();
      assertEquals("He\"", string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      Curriculum curriculum0 = new Curriculum("6^Gf$+/oSk~^Z>?", "br.edu.ufcg.computacao.eureca.backend.core.models.StudentStatus", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 0, 0, 0, 0, 8, (-515), 0, (-1526), 2432, (-1), stack0, stack0, stack0, stack0, arrayDeque0);
      Student student0 = new Student("br.edu.ufcg.computacao.eureca.backend.core.models.StudentStatus", "br.edu.ufcg.computacao.eureca.backend.core.models.StudentStatus", "br.edu.ufcg.computacao.eureca.backend.core.models.StudentStatus", "br.edu.ufcg.computacao.eureca.backend.core.models.StudentStatus", "br.edu.ufcg.computacao.eureca.backend.core.models.StudentStatus", "j<", "br.edu.ufcg.computacao.eureca.backend.core.models.StudentStatus", "numHashFunctions (%s) must be > 0", "*SsFE]@mu2s", "", "numHashFunctions (%s) must be > 0", ", courseCode='", studentStatus0, "", ", optionalSubjectsList=", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "*SsFE]@mu2s", "", "6^Gf$+/oSk~^Z>?", ", courseCode='", "", curriculum0, 503, 503, 361, 2432, (-1255), 121, 0, (-1255), 0, 0.0, 125, 2432, 52, 121, 121, 0.0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getRisk();
      assertEquals(-0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) stack0, (Collection<String>) treeSet0, locale_FilteringMode0);
      Curriculum curriculum0 = new Curriculum("O", "", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 8, 2158, 291, 2158, 291, 2158, 8, 8, (-2748), 0, list0, treeSet0, list0, list0, treeSet0);
      Student student0 = new Student("O", "8L5,xR]/a^)'Ym9", "O", "8L5,xR]/a^)'Ym9", "@yj`$uBY6h*BQfD", "@yj`$uBY6h*BQfD", "@yj`$uBY6h*BQfD", "8L5,xR]/a^)'Ym9", "8L5,xR]/a^)'Ym9", "@yj`$uBY6h*BQfD", "8L5,xR]/a^)'Ym9", "O", studentStatus0, "", "@yj`$uBY6h*BQfD", "~vwsDnsR[w", "U", "Jk}mb>t7+K9(oP6e=E", "Jk}mb>t7+K9(oP6e=E", "~vwsDnsR[w", "U", "", curriculum0, (-1), 2045, 291, 2045, (-1), (-2748), 2540, 0, 2045, 0, 3, 0, 291, (-1375), 2540, 2540);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getRisk();
      assertEquals(1.2415921012033324, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Vector<String> vector0 = new Vector<String>();
      Stack<String> stack0 = new Stack<String>();
      Curriculum curriculum0 = new Curriculum(">~rK_*XV$ rMRJ%*", "", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 8, 8, 861, 8, 8, 0, 0, 861, 12, 8, vector0, vector0, vector0, vector0, stack0);
      Student student0 = new Student((String) null, (String) null, "", "", "com.google.common.base.CharMatcher$Any", "C>0m+XV4", "!Lh&=;f9Wn}", "", "!Lh&=;f9Wn}", "!Lh&=;f9Wn}", (String) null, (String) null, studentStatus0, "", "com.google.common.base.CharMatcher$Any", ">~rK_*XV$ rMRJ%*", "", ".converterTo(", "C>0m+XV4", "mHx1cC<v]", "!Lh&=;f9Wn}", "!Lh&=;f9Wn}", curriculum0, 8, 0, 12, 2332, 1737, 0, 2332, 0, (-2960.14015226), 1026.4600330476912, 861, 12, 8, 8, 0, 0.0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getRegistration();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      ArrayList<String> arrayList0 = new ArrayList<String>();
      Curriculum curriculum0 = new Curriculum("Y.`|iyNjnJtD[<H", "", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 125, (-1), 1136, 0, (-503), (-1), 0, 1, 4043, 0, arrayList0, arrayList0, arrayList0, arrayList0, arrayList0);
      Student student0 = new Student("", "", "", "", "", "4fl`Ig@5J.", "4fl`Ig@5J.", "", "", "*V.b_/%F2v", "Y.`|iyNjnJtD[<H", "*V.b_/%F2v", studentStatus0, "", "", "", "i?4D;>", "i?4D;>", "4fl`Ig@5J.", " ", "`Gh?!", "", curriculum0, (-1), 125, 1, 0, 0, 1024, 1, 1024, 2658.1037641978, 4043, (-1), (-1), 1024, (-1), 0, 0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getRegistration();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Vector<Integer> vector0 = new Vector<Integer>();
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>(vector0);
      PriorityQueue<String> priorityQueue0 = new PriorityQueue<String>();
      Curriculum curriculum0 = new Curriculum("", "", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 0, 8192, 0, 0, 133, (-320), 0, 1275, 0, 0, priorityQueue0, priorityQueue0, priorityQueue0, priorityQueue0, priorityQueue0);
      Student student0 = new Student("y\"j", "y\"j", "", "y\"j", "", "", "y\"j", "", "", "y\"j", "", "d0|", studentStatus0, "d0|", "", "m*PAJ\"", "", "", (String) null, "", "", "", curriculum0, (-911), 0, 0, (-320), 1073741824, 1073741824, 0, 0.0, (-911), 4.0, 608, (-1), 133, (-1), 608, 0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getPace();
      assertEquals(1228537.18993135, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) set0, locale_FilteringMode0);
      Curriculum curriculum0 = new Curriculum("w~ l1mq-", "T'^X`C:", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 3, 0, 3, 1365, 0, 1716, 0, 1716, 1365, 1365, list0, list0, set0, list0, set0);
      Student student0 = new Student("br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", (String) null, (String) null, "'-DJK!-#Rmx", "'-DJK!-#Rmx", (String) null, "'-DJK!-#Rmx", "'-DJK!-#Rmx", "'-DJK!-#Rmx", "w~ l1mq-", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", studentStatus0, "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "'-DJK!-#Rmx", "", "", "com.google.common.base.CharMatcher$NamedFastMatcher", "w~ l1mq-", curriculum0, 814, 1311, 1311, 0, 0, 65535, 1311, 814, (-1320.3350756461), 1716, Integer.MIN_VALUE, (-2396), (-1724), 1365, (-4684), 3012.19314);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Curriculum curriculum0 = new Curriculum("", "", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, (-1992), 1, 1, 3386, 0, 0, (-799), 0, (-799), 0, arrayList1, arrayList1, arrayList1, arrayList1, arrayList1);
      Student student0 = new Student("", "YoFqju\"ah0[)oih$S", "", "", "INSTANCE", ":F)%;SH}eg", "INSTANCE", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", ";YQ^v", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "YoFqju\"ah0[)oih$S", studentStatus0, "", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "", "x('Q?p>??K[", "iXKNWp6+{}S/*y/YJi", "fwZ4LsgWUx6|KT|;g,\"", "YoFqju\"ah0[)oih$S", "", curriculum0, (-1861), (-2736), (-1861), 3386, 0, 0, 0, (-799), 0, 2486.88786917, 0, 3386, 0, 3052, 0, 0.0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      ArrayList<String> arrayList0 = new ArrayList<String>(arrayDeque0);
      Curriculum curriculum0 = new Curriculum("", "", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 0, (-48), (-48), 8287, (-2047), (-12931), (-48), (-1), (-1723), 1, arrayList0, arrayList0, arrayList0, arrayList0, arrayList0);
      Student student0 = new Student("2RL G", "2RL G", "", "", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "", "", "2RL G", "\"BM'Z[U", "\"BM'Z[U", "", studentStatus0, "TRANSFERIDO PARA OUTRA IES", "", "", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", (String) null, ">|Vc|", curriculum0, (-1), (-1966), 0, (-3222), (-1723), 0, (-48), 0.0, 0.0, (-185.8008), 0, 0, (-12931), 0, 257, (-2047));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      int int0 = studentCSV0.getMobilityTerms();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Locale locale0 = Locale.ENGLISH;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      Curriculum curriculum0 = new Curriculum("", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-261), (-1), (-261), (-1), (-261), (-1), (-261), (-261), (-1), (-1364), set0, set0, set0, set0, set0);
      Student student0 = new Student("", "", "Z,1bg-z!'Ep", "", "i_", "Z,1bg-z!'Ep", "i_", "", "", "", "", "", studentStatus0, "i_", "Key '%s' not present in map", "", "", "Z,1bg-z!'Ep", "", "", "", "i_", curriculum0, 0, (-1364), 1, (-1), (-1), 503, (-261), (-261), 503, (-261), 1096, (-1364), 1230, (-2095), (-1), (-1739.86));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      int int0 = studentCSV0.getMobilityTerms();
      assertEquals((-2095), int0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Vector<String> vector0 = new Vector<String>();
      HashSet<String> hashSet0 = new HashSet<String>(vector0);
      Curriculum curriculum0 = new Curriculum("", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 2431, 2431, 2431, 2431, 2431, 2431, 1, 1, 1, 1, hashSet0, hashSet0, vector0, vector0, hashSet0);
      Student student0 = new Student("", "", "", "", ",H|UEJg7$7Qp_D]H", "rSeckBoE+lT~", "rSeckBoE+lT~", "", "com.google.common.hash.Funnels$StringCharsetFunnel", "", "_4UmgZ/]QqEi*RD$RFz", "vB!A:56 6]jjmxyR", studentStatus0, ",H|UEJg7$7Qp_D]H", (String) null, "", "", (String) null, "", "com.google.common.hash.Funnels$StringCharsetFunnel", "NThG8]dE^Y@*2", "Pa", curriculum0, 1, 2785, (-2442), 2044, 2431, 2785, 2785, 1, 2044, (-2442), (-102), 2785, 2431, 1, 2785, (-102));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getMc();
      assertEquals(2044.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum("6$.U0[.xo", (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 2272, 0, 0, (-326), 2272, 0, 0, 0, (-1), (-2264), set0, set0, set0, (Collection<String>) null, set0);
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student("BloomFilters must have the sam size underlying bit arrays (%s != %s)", "", "5{", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "j66|", "BloomFilters must have the sam size underlying bit arrays (%s != %s)", "CharMatcher.invisible()", "6$.U0[.xo", "", (String) null, "", studentStatus0, "", "8{X^c]1X7j.rjh)1\"", "Q_ikw%4Tuglr", (String) null, "OUk0Z5", "", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "CharMatcher.invisible()", "BloomFilters must have the sam size underlying bit arrays (%s != %s)", curriculum0, 4360, (-326), (-1540), 2272, 2272, 4360, 4360, 307, (-487.293680529726), (-317.667951), (-5131), (-3443), 2272, 0, (-934), 4360);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getMc();
      assertEquals((-487.293680529726), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Curriculum curriculum0 = new Curriculum("}xW~ AP(", "", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 224, 224, 224, 224, (-2166), 1, 3109, 1, 224, 1619, treeSet0, treeSet0, treeSet0, treeSet0, treeSet0);
      Student student0 = new Student("Nl", "Nl", "5c@NJ", "R%", "", "Nl", (String) null, "", "Nl", "Nl", "", "", studentStatus0, (String) null, "R%", "R%", "", "", "Nl", "", "Nl", "R%", curriculum0, 224, 8, 1059, 1349, 224, 57343, 8, 3109, 1, 3109, (-2166), 1059, 1619, 2312, 8, (-988.54385917565));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getMaritalStatus();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Curriculum curriculum0 = new Curriculum(", idealElectiveCreditsList=", "d~B,.T", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 8, 0, 8, (-2201), 0, 2213, 1, 0, 1, 8, arrayList1, arrayList1, arrayList1, arrayList1, arrayList1);
      Student student0 = new Student("", "", "szn$^l}Ge>Ps ", "szn$^l}Ge>Ps ", "", "", ", idealElectiveCreditsList=", "", ", idealElectiveCreditsList=", "!M8S:-9.", "", "", studentStatus0, "d~B,.T", ", idealElectiveCreditsList=", "!M8S:-9.", "ia5Rf0)zP`", "!M8S:-9.", "8&.bKQUi$", (String) null, (String) null, (String) null, curriculum0, 8, 2213, (-282), 0, (-2201), (-282), 1658, (-2784.641939725856), (-282), 1983.8561079341428, 0, (-282), 1, 1, 2662, 8);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getMaritalStatus();
      assertEquals(", idealElectiveCreditsList=", string0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      ArrayList<Locale.LanguageRange> arrayList0 = new ArrayList<Locale.LanguageRange>();
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) arrayList0, (Collection<String>) set0, locale_FilteringMode0);
      Curriculum curriculum0 = new Curriculum("w~ l1mq-", "T'^X`C:", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 3, 0, 3, 1365, 0, 1716, 0, 1716, 1365, 1365, list0, list0, set0, list0, set0);
      Student student0 = new Student("br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", (String) null, (String) null, "'-DJK!-#Rmx", "'-DJK!-#Rmx", (String) null, "'-DJK!-#Rmx", "'-DJK!-#Rmx", "'-DJK!-#Rmx", "w~ l1mq-", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", studentStatus0, "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "'-DJK!-#Rmx", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "'-DJK!-#Rmx", "", "'-DJK!-#Rmx", "com.google.common.base.CharMatcher$NamedFastMatcher", "w~ l1mq-", curriculum0, 814, 1311, 1311, 0, 0, 65535, 1311, 814, (-1320.3350756461), 1716, Integer.MIN_VALUE, (-2396), 814, 1365, (-4684), 3012.19314);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      int int0 = studentCSV0.getMandatoryCredits();
      assertEquals(1311, int0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      Set<String> set0 = locale0.getUnicodeLocaleKeys();
      Curriculum curriculum0 = new Curriculum("", "", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 1, 1, 1, 1, 1, (-1745), (-1745), 0, 41, (-1745), set0, set0, set0, set0, set0);
      Student student0 = new Student("4SwU_", "4SwU_", "lBSK|Rzcx} o", "", "lBSK|Rzcx} o", ", affirmativePolicy='", "", ",[Ss(QAY2Nu", ", affirmativePolicy='", "", "lBSK|Rzcx} o", "", studentStatus0, "#;G[F934r@Eh*p9.H=", "O2Ax<?", "", "", ",[Ss(QAY2Nu", "", "", "", (String) null, curriculum0, 2391, (-1745), 41, Integer.MAX_VALUE, 1, 2044, 0, 0.0, (-26.0), 0.5, 4513, 1, 2391, 6, 101, (-1.0));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      int int0 = studentCSV0.getMandatoryCredits();
      assertEquals((-1745), int0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Curriculum curriculum0 = new Curriculum("", "vV',]=D3;0i8\"`$m", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, (-1555), 306654252, 133, 1149, 943, (-1555), (-1786), 0, 735, 735, arrayList1, arrayList1, arrayList1, arrayList1, arrayList1);
      Student student0 = new Student("8~F\"*rz' 7u", "ecozo[+", "vV',]=D3;0i8\"`$m", "*IQ^cyv", "vV',]=D3;0i8\"`$m", "com.google.common.base.Enums$StringConverter", (String) null, "ecozo[+", "*IQ^cyv", "8~F\"*rz' 7u", "'|Wd=l", "", studentStatus0, "", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "8RXxl!4fK)3}#", "", "!=pO7s$qK$GD9[?n<", "!=pO7s$qK$GD9[?n<", "-op!m9Snn/fp", "!=pO7s$qK$GD9[?n<", curriculum0, (-1490), 615, 0, (-1490), 0, 1333, 133, 0.0, 0.0, (-1490), 1876, 39, 0, 1149, 0, 735);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      int int0 = studentCSV0.getInstitutionalEnrollments();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum("2^.6@4Xr", ".class)", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 2434, (-1), 1398, 2434, 1, (-302), 1, (-302), (-532), 1398, set0, set0, set0, set0, set0);
      Student student0 = new Student((String) null, "", "lw,-**WZV\"\"", "LO&;%-2t'uz6bfz8+", (String) null, "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "@{ b;FqfZ52|C=ulE^", "zQ'C&*LyH.", "@{ b;FqfZ52|C=ulE^", "", (String) null, ".negate()", studentStatus0, "p@F2R", (String) null, "lHpu]C5qt?Qs%.R", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "com.google.common.base.CharMatcher$Is", "", "Suppliers.supplierFunction()", "", "", curriculum0, (-466), 8, 2434, 8, 2785, 894, (-532), 1, (-1), (-532), 65535, 300, (-540), 1, 0, 4.0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      int int0 = studentCSV0.getInstitutionalEnrollments();
      assertEquals((-540), int0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Vector<String> vector0 = new Vector<String>();
      Curriculum curriculum0 = new Curriculum("", "YQ?zc2S^ZL", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 0, 0, (-1227), 0, (-1157), 0, (-341), (-1157), 1, 1, vector0, vector0, vector0, vector0, vector0);
      Student student0 = new Student("YQ?zc2S^ZL", "YQ?zc2S^ZL", "33U fI.=nxW7=F2", "_P5T2]).tG#^ ", (String) null, "_P5T2]).tG#^ ", "_P5T2]).tG#^ ", "KT", "D", "CANCELAMENTO P/ DECISAO JUDICIAL", "aO(WK;u'U|L", (String) null, studentStatus0, "aO(WK;u'U|L", "&KiGaQ!2)Y,Z", "", (String) null, "YQ?zc2S^ZL", "", "CANCELAMENTO P/ DECISAO JUDICIAL", "]s?6+FF3-", "R.Sz?4C/bvv[", curriculum0, 0, 0, 0, 0, (-341), (-1227), (-1157), 1450.8022, 0, 0, (-795), 0, 1, 1, 0, 361.3);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getIea();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>(0);
      Stack<String> stack0 = new Stack<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      Curriculum curriculum0 = new Curriculum("tZ\"{kl", "Vl2sv6u;Wxn", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 0, 0, 0, 0, 0, 244, 0, 244, 0, 0, stack0, stack0, stack0, arrayDeque0, arrayDeque0);
      Student student0 = new Student("\u2002\u3000\r\u0085\u200A\u2005\u2000\u3000\u2029\u000B\u3000\u2008\u2003\u205F\u3000\u1680\t \u2006\u2001\u202F\u00A0\f\u2009\u3000\u2004\u3000\u3000\u2028\n\u2007\u3000", "\u2002\u3000\r\u0085\u200A\u2005\u2000\u3000\u2029\u000B\u3000\u2008\u2003\u205F\u3000\u1680\t \u2006\u2001\u202F\u00A0\f\u2009\u3000\u2004\u3000\u3000\u2028\n\u2007\u3000", "Vl2sv6u;Wxn", "Vl2sv6u;Wxn", "\u2002\u3000\r\u0085\u200A\u2005\u2000\u3000\u2029\u000B\u3000\u2008\u2003\u205F\u3000\u1680\t \u2006\u2001\u202F\u00A0\f\u2009\u3000\u2004\u3000\u3000\u2028\n\u2007\u3000", "\u2002\u3000\r\u0085\u200A\u2005\u2000\u3000\u2029\u000B\u3000\u2008\u2003\u205F\u3000\u1680\t \u2006\u2001\u202F\u00A0\f\u2009\u3000\u2004\u3000\u3000\u2028\n\u2007\u3000", "\u2002\u3000\r\u0085\u200A\u2005\u2000\u3000\u2029\u000B\u3000\u2008\u2003\u205F\u3000\u1680\t \u2006\u2001\u202F\u00A0\f\u2009\u3000\u2004\u3000\u3000\u2028\n\u2007\u3000", (String) null, (String) null, (String) null, (String) null, "Vl2sv6u;Wxn", studentStatus0, "", (String) null, "org.apache.commons.io.filefilter.WildcardFilter", "Vl2sv6u;Wxn", ".VEA", (String) null, "\u2002\u3000\r\u0085\u200A\u2005\u2000\u3000\u2029\u000B\u3000\u2008\u2003\u205F\u3000\u1680\t \u2006\u2001\u202F\u00A0\f\u2009\u3000\u2004\u3000\u3000\u2028\n\u2007\u3000", (String) null, "azK3s:%5`N=$O", curriculum0, 0, (-1), 0, (-774), 255, (-2052), 0, 255, (-774), (-51.87178663), 1316, 1316, 255, (-2052), 244, 882.7872);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getIea();
      assertEquals((-51.87178663), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      PriorityQueue<String> priorityQueue0 = new PriorityQueue<String>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Curriculum curriculum0 = new Curriculum("=9KZ?u7nd*}2", (String) null, arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, (-4083), (-4083), 2768, 1073741823, 2768, 1073741823, (-4083), (-4083), (-1891), 3501, priorityQueue0, priorityQueue0, linkedList0, priorityQueue0, linkedList0);
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student("+@C7t{p#", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "kSq^", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", " 9c$q]S\"Mm4WviYvT@", "", "com.google.common.collect.FilteredEntryMultimap", "b1:%/2V]A[W'o", "^*", (String) null, "", "", studentStatus0, "com.google.common.collect.FilteredEntryMultimap", "", "", "", "com.google.common.collect.FilteredEntryMultimap", "", "kSq^", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", curriculum0, (-4083), (-4083), 1647, 32, 32, 584, 2785, 0.0, 0.0, 1647, (-4083), 2785, 32, 6, (-1891), (-152.0));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getGpa();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Curriculum curriculum0 = new Curriculum("com.google.common.base.CharMatcher$AnyOf", ":T5`J", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 0, 8, 0, (-1851), 0, 0, 8, 8, 8, 1264, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      Student student0 = new Student("cT?", "com.google.common.base.CharMatcher$SingleWidth", "cT?", "", "cT?", "", "com.google.common.base.CharMatcher$SingleWidth", "", "cT?", "com.google.common.base.CharMatcher$SingleWidth", "", "", studentStatus0, "", "", "com.google.common.base.CharMatcher$Digit", "", "com.google.common.base.CharMatcher$Digit", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "~,0$zc@eBK<n[>\"1", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "Q6'=0d/", curriculum0, (-1851), 0, 0, 0, (-1955), 4746, 0, (-551.365982792094), 2082.98, 4.9E-324, 251, 0, 8, 251, 32, 1264);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getGpa();
      assertEquals((-551.365982792094), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Curriculum curriculum0 = new Curriculum(", complementaryHours=", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-1285), (-1285), 1423, (-1285), 0, 0, 2353, 2531, 2498, 2498, linkedList0, linkedList0, linkedList0, linkedList0, linkedList0);
      Student student0 = new Student("", "", (String) null, (String) null, ", complementaryCredits=", (String) null, (String) null, (String) null, (String) null, "", "A-XNY", ", complementaryCredits=", studentStatus0, "", "", "{.5", (String) null, (String) null, "", (String) null, "{.5", "", curriculum0, 1423, 2498, 1423, 8, 2498, 117, 2498, 2531, 1423, 0, 0, 2353, 2498, (-1818), (-19), 656.997768633);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getGender();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Curriculum curriculum0 = new Curriculum("z+eL", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", (ArrayList<Integer>) null, (ArrayList<Integer>) null, arrayList0, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-928), (-1903), (-1903), 0, (-1903), (-1903), 1099, 0, 1721, 0, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      Student student0 = new Student("", "", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "", "", "z+eL", "", "z+eL", "z+eL", "j.1$(}rxA", "He\"", studentStatus0, "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "z+eL", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "j.1$(}rxA", "j.1$(}rxA", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", curriculum0, 0, 1099, 1099, 1, 972, 0, 1, 852.9, 0.0, (-1903), (-928), 0, (-1975), 0, 0, (-1903));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getGender();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) stack0, (Collection<String>) treeSet0, locale_FilteringMode0);
      Curriculum curriculum0 = new Curriculum("O", "", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 8, 2158, 291, 2158, 291, 2158, 8, 8, (-2748), 0, list0, treeSet0, list0, list0, treeSet0);
      Student student0 = new Student("O", "8L5,xR]/a^)'Ym9", "O", "8L5,xR]/a^)'Ym9", "@yj`$uBY6h*BQfD", "@yj`$uBY6h*BQfD", "@yj`$uBY6h*BQfD", "8L5,xR]/a^)'Ym9", "8L5,xR]/a^)'Ym9", "@yj`$uBY6h*BQfD", "8L5,xR]/a^)'Ym9", "O", studentStatus0, "", "@yj`$uBY6h*BQfD", "~vwsDnsR[w", "U", "Jk}mb>t7+K9(oP6e=E", "Jk}mb>t7+K9(oP6e=E", "~vwsDnsR[w", "U", "", curriculum0, (-1), 2045, 291, 2045, (-1), (-2748), 2540, 0, 2045, 0, 3, 0, 291, (-1375), 2540, 2540);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getFeasibility();
      assertEquals(0.0020642080328154206, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Curriculum curriculum0 = new Curriculum("BloomFilters must have equal strategies (%s != %s)", ";ZAhJ[DRQXCP:`", (ArrayList<Integer>) null, arrayList0, arrayList0, (ArrayList<Integer>) null, arrayList0, (-4434), 338, (-4434), 2785, 338, 0, 2785, 338, 0, 337, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      Student student0 = new Student("C{79T6vZu", "C{79T6vZu", "C{79T6vZu", "C{79T6vZu", "C{79T6vZu", "C{79T6vZu", "C{79T6vZu", "", "", "C{79T6vZu", "BloomFilters must have equal strategies (%s != %s)", "C{79T6vZu", studentStatus0, "BloomFilters must have equal strategies (%s != %s)", (String) null, "BloomFilters must have equal strategies (%s != %s)", "", (String) null, "", "BloomFilters must have equal strategies (%s != %s)", "C{79T6vZu", "C{79T6vZu", curriculum0, (-4434), 0, 337, (-1), (-4434), 2785, (-4434), 2854.02, 0, 530.0, (-4434), 2053, (-3895), 0, 2053, (-381.11524613572));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getFeasibility();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Curriculum curriculum0 = new Curriculum((String) null, (String) null, arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, (-968), (-968), (-968), (-968), 0, (-968), 64, 58, 58, 1, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null);
      Student student0 = new Student("|c", "G>o'X{^,\"d&|-l$", "", "", "HGU?s", "CANCELAMENTO P/ MUDANCA CURSO", (String) null, "", "HGU?s", "|c", "com.google.common.base.Predicates$ContainsPatternFromStringPredicate", "X=<i}}'O={tAbA", studentStatus0, "|c", "", "", "ABWXA=&C", "", "fkn", "", "ABWXA=&C", "CANCELAMENTO P/ MUDANCA CURSO", curriculum0, 1, 58, 58, 386, 1, (-968), 92, 2.0, (-2079.7), 92, 386, (-2007), 64, 0, (-115), 0.0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getEntryGrade();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Curriculum curriculum0 = new Curriculum(", complementaryHours=", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-1285), (-1285), 1423, (-1285), 0, 0, 2353, 2531, 2498, 2498, linkedList0, linkedList0, linkedList0, linkedList0, linkedList0);
      Student student0 = new Student("", "", (String) null, (String) null, ", complementaryCredits=", (String) null, (String) null, (String) null, (String) null, "", "A-XNY", ", complementaryCredits=", studentStatus0, "", "", "{.5", (String) null, (String) null, "", (String) null, "{.5", "", curriculum0, 1423, 2498, 1423, 8, 2498, 117, 2498, 2531, 1423, 0, 0, 2353, 2498, (-1818), (-19), 656.997768633);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getEntryGrade();
      assertEquals(656.997768633, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Vector<String> vector0 = new Vector<String>();
      Curriculum curriculum0 = new Curriculum("", "YQ?zc2S^ZL", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 0, 0, (-1227), 0, (-1157), 0, (-341), (-1157), 1, 1, vector0, vector0, vector0, vector0, vector0);
      Student student0 = new Student("YQ?zc2S^ZL", "YQ?zc2S^ZL", "33U fI.=nxW7=F2", "_P5T2]).tG#^ ", (String) null, "_P5T2]).tG#^ ", "_P5T2]).tG#^ ", "KT", "D", "CANCELAMENTO P/ DECISAO JUDICIAL", "aO(WK;u'U|L", (String) null, studentStatus0, "aO(WK;u'U|L", "&KiGaQ!2)Y,Z", "", (String) null, "YQ?zc2S^ZL", "", "CANCELAMENTO P/ DECISAO JUDICIAL", "]s?6+FF3-", "R.Sz?4C/bvv[", curriculum0, 0, 0, 0, 0, (-341), (-1227), (-1157), 1450.8022, 0, 0, (-795), 0, 1, 1, 0, 361.3);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      int int0 = studentCSV0.getElectiveCredits();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      PriorityQueue<String> priorityQueue0 = new PriorityQueue<String>();
      Curriculum curriculum0 = new Curriculum(".reverse()", "", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 2524, 12288, 12288, 12288, 12288, (-3230), 12288, (-3230), 0, (-381), priorityQueue0, priorityQueue0, priorityQueue0, priorityQueue0, priorityQueue0);
      Student student0 = new Student("%;sKDh", "%;sKDh", "%;sKDh", "%;sKDh", "%;sKDh", ".reverse()", "%;sKDh", ".reverse()", "", "", "%;sKDh", "%;sKDh", studentStatus0, ".reverse()", "", ".reverse()", "", "", "", "", "Q!4Xz?Ajk,yBg", "", curriculum0, (-381), (-3230), (-1889), 2524, 0, (-3230), 11, (-381), (-1889), 12288, 8233, (-442), (-2019), (-1889), (-1), (-1));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      int int0 = studentCSV0.getElectiveCredits();
      assertEquals(2524, int0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Curriculum curriculum0 = new Curriculum("M", "M", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-1285), (-1285), 1423, (-1285), (-349), 0, 2320, 2531, 2498, 2498, linkedList0, linkedList0, linkedList0, linkedList0, linkedList0);
      Student student0 = new Student("M", "M", (String) null, (String) null, ", complementaryCredits=", "M", (String) null, (String) null, (String) null, "M", "A-XNY", ", complementaryCredits=", studentStatus0, "M", "/%oOmKSLs. Gs", (String) null, (String) null, "M", "M", "M", (String) null, "M", curriculum0, 1423, 2498, 1423, 8, 2498, 117, 2498, 2531, 1423, 0, (-349), 2320, 2498, 72, (-19), 656.997768633);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getCurriculumCode();
      assertEquals("M", string0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Curriculum curriculum0 = new Curriculum("", "g%C2R7&Tn", arrayList0, arrayList0, (ArrayList<Integer>) null, arrayList0, arrayList0, (-824), (-824), 0, 1, 0, 1, 0, (-1), (-1131), 0, arrayList1, arrayList1, arrayList1, arrayList1, arrayList1);
      Student student0 = new Student("", "", "", "", "", "g%C2R7&Tn", "", "(L`", "", "", "", "", studentStatus0, "", "nXi`hrB20RGSqC1@_", "", "(L`", "sr!3;AUO$[$G", "l];h(C%4R60N", "nXi`hrB20RGSqC1@_", "~0&IR5Ex;1", "", curriculum0, (-1), 133, 2107, (-1131), 0, 133, 3112, 4.0, 867.8785, 4.0, 0, 0, 829, 1, 0, 829);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getCurriculumCode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Vector<String> vector0 = new Vector<String>();
      Curriculum curriculum0 = new Curriculum("'JU;I9>$|7jNo", "'JU;I9>$|7jNo", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 0, 0, 0, 0, 0, 0, 957, 957, (-1), 0, vector0, vector0, vector0, vector0, vector0);
      Student student0 = new Student((String) null, "", " ", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "", "", "", "", "", "4Y)(", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", studentStatus0, "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "%4_ ", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "GfT/l_", "GfT/l_", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", curriculum0, 210, 1, 590, 0, 1486, 210, 1486, 0.0, 0, (-1), 957, 0, 1486, (-68), 2802, (-1));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getCourseDurationPrediction();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Curriculum curriculum0 = new Curriculum(", complementaryHours=", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-1285), (-1285), 1423, 0, 0, 0, 2353, 2531, 2498, 2498, linkedList0, linkedList0, linkedList0, linkedList0, linkedList0);
      Student student0 = new Student("", "", (String) null, (String) null, ", complementaryCredits=", (String) null, (String) null, (String) null, (String) null, "", "A-XNY", ", complementaryCredits=", studentStatus0, "", "", "{.5", (String) null, "!P%5l1VXh", "", "!P%5l1VXh", "{.5", "", curriculum0, 1423, 2498, 0, 8, 2498, 117, 2498, 2531, 1423, 0, 0, 2353, 2498, (-1818), 10, 656.997768633);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getCourseDurationPrediction();
      assertEquals((-2184.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Curriculum curriculum0 = new Curriculum("", "9`9", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-349), (-349), (-349), (-349), (-1056), (-1056), 0, 0, (-349), (-349), (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null);
      Student student0 = new Student("", "", "9~", "EJ\"Hxpn=", "~' 4ZV1iZ+!", "9`9", (String) null, "", "ZEe#L(1x", "U9Q)ZeA", (String) null, (String) null, studentStatus0, "", "", (String) null, (String) null, "com.google.common.collect.DiscreteDomain$1", "l9mzt3)7L", "", (String) null, "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", curriculum0, 3066, (-334), 0, (-334), (-211), 3066, 0, (-1056), 0.0, (-2933.186415113), (-686), 1966, (-1056), 0, 1, 3130.581);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getCourseCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      PriorityQueue<String> priorityQueue0 = new PriorityQueue<String>();
      Curriculum curriculum0 = new Curriculum("", (String) null, arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 92, (-2123), 92, 0, 0, 92, (-2123), 0, 92, 0, priorityQueue0, priorityQueue0, priorityQueue0, priorityQueue0, priorityQueue0);
      Student student0 = new Student("", "OA", "-aS`Pj^($d*c}` n", "", "$+v)@p1j;OJ:R&EZu?W", "", "$+v)@p1j;OJ:R&EZu?W", "$+v)@p1j;OJ:R&EZu?W", (String) null, (String) null, "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", studentStatus0, "N{BSa", "", "=Z]8r", "wW^/;,p?QXu>Qh$", "N{BSa", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "/iTnnAoSCXPWK2?W,r", "y6p@iy", curriculum0, 2538, (-858), 92, 0, 0, 0, 2538, 4.0, 0.0, 2.0, (-4075), 0, 0, (-858), (-297), 0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getCourseCode();
      assertEquals("/iTnnAoSCXPWK2?W,r", string0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Curriculum curriculum0 = new Curriculum("bs+g}+~CdNVU_Y6", (String) null, arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 1807, 0, 0, 0, 0, 1807, 1807, 0, 1807, 1807, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null);
      Student student0 = new Student("", "", ")s=(&]S:Us^!Fq<", "", ")s=(&]S:Us^!Fq<", "", ")s=(&]S:Us^!Fq<", "", "", "", "P", "4_\"M+TnQ]V'+`n]K9w", studentStatus0, "bs+g}+~CdNVU_Y6", "", "^d-vX{.4z]", "4_\"M+TnQ]V'+`n]K9w", "", "", "", "^d-vX{.4z]", "", curriculum0, 0, 0, 1807, 886, 255, 0, 255, 0.0, (-3307.9766356750897), (-49.0), 0, 0, 0, 886, 2241, (-191.5324598));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getCost();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Curriculum curriculum0 = new Curriculum("", "", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 8, 8, (-630), 0, (-267), 1526, 1526, (-769), 15, (-3149), treeSet0, treeSet0, treeSet0, treeSet0, treeSet0);
      Student student0 = new Student("", "", "<C0T= M*/", "<C0T= M*/", "", "", "<C0T= M*/", "u_m/,;aOAaw#|xRf", "", "<C0T= M*/", "<C0T= M*/", "6aB/dY]%L{", studentStatus0, "", "\"v", "com.google.common.hash.Funnels$StringCharsetFunnel", "1sD", "\"v", "5B@@0xy", "\"v", "", "u_m/,;aOAaw#|xRf", curriculum0, 15, (-769), 8, 14, (-267), 350, 350, (-3548.5), 1476.8426, 0.0, 350, 8, (-630), (-769), 31, 427.6793745900572);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      int int0 = studentCSV0.getCompletedTerms();
      assertEquals(350, int0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Curriculum curriculum0 = new Curriculum("OxW)z<J", "h%Gcolf/", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, (-1), 0, 2711, 460, 0, 460, 460, (-1), 0, (-2538), treeSet0, treeSet0, treeSet0, treeSet0, treeSet0);
      Student student0 = new Student("", (String) null, "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "@:S", "~+_uz$s", "", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", (String) null, "", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "@:S", "OxW)z<J", studentStatus0, "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "mqWfMGGS&t+dH", "", "", "", "", "", "", curriculum0, 0, 2851, (-1), (-1143), 1377, 460, (-1143), (-964.844105753649), (-1400.669103), 1377, (-1974), 0, (-968), 2951, (-321), 0.0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      int int0 = studentCSV0.getCompletedTerms();
      assertEquals((-1974), int0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      PriorityQueue<String> priorityQueue0 = new PriorityQueue<String>();
      Curriculum curriculum0 = new Curriculum("br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "5A*6~x|REsjG", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 8232, 2145, 8232, 0, 8232, 0, 2145, 1, 0, 1, priorityQueue0, priorityQueue0, priorityQueue0, priorityQueue0, priorityQueue0);
      Student student0 = new Student("", "", "", ", admissionTerm='", "", "", "", "", "", "missCount", "", "missCount", studentStatus0, "", ", admissionTerm='", "", "wh", "", "", (String) null, "W\"f7-L|@z^i", "", curriculum0, 8232, 8232, 2145, 8232, (-12931), 8232, 1, (-1.0), 0, 1.0, 1, 8232, 312, (-286), 1, (-1361.67));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      int int0 = studentCSV0.getComplementaryCredits();
      assertEquals(8232, int0);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Curriculum curriculum0 = new Curriculum("Expected insertions (%s) must be >= 0", (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 1, 1, (-1463), 1, 0, (-1467), 1, 0, 0, 0, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      Student student0 = new Student("w!", "kR/ 1:#y4%(", "w!", "", "Ky<F", "", "", "GjaU3.bCTkN+:>", "GjaU3.bCTkN+:>", "VHn0}kZEV1v]", "Ky<F", "r[g;OiY9", studentStatus0, "", "", "GjaU3.bCTkN+:>", "D", "Expected insertions (%s) must be >= 0", ".!V;h", (String) null, "})q1`fs)h", ".!V;h", curriculum0, (-1382), 0, (-197), (-1467), (-728), (-1483), (-728), (-1467), (-2596.25092642), (-1467), (-1483), 644, (-1382), 0, (-1348), 0.0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      int int0 = studentCSV0.getComplementaryCredits();
      assertEquals((-1483), int0);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Curriculum curriculum0 = new Curriculum("com.google.common.base.CharMatcher$AnyOf", ":T5`J", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 0, 8, 0, (-1851), 0, 0, 8, 8, 8, 1264, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      Student student0 = new Student("cT?", "com.google.common.base.CharMatcher$SingleWidth", "cT?", "", "cT?", "", "com.google.common.base.CharMatcher$SingleWidth", "", "cT?", "com.google.common.base.CharMatcher$SingleWidth", "", "", studentStatus0, "", "", "com.google.common.base.CharMatcher$Digit", "", "com.google.common.base.CharMatcher$Digit", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "~,0$zc@eBK<n[>\"1", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "Q6'=0d/", curriculum0, (-1851), 0, 0, 0, (-1955), 4746, 0, (-551.365982792094), 2082.98, 4.9E-324, 251, 0, 8, 251, 32, 1264);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getAverageLoad();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Curriculum curriculum0 = new Curriculum((String) null, (String) null, arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, (-968), (-968), (-968), (-968), 0, (-968), 64, 58, 58, 1, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null);
      Student student0 = new Student("|c", "G>o'X{^,\"d&|-l$", "", "", "HGU?s", "CANCELAMENTO P/ MUDANCA CURSO", (String) null, "", "HGU?s", "|c", "com.google.common.base.Predicates$ContainsPatternFromStringPredicate", "X=<i}}'O={tAbA", studentStatus0, "|c", "", "", "ABWXA=&C", "", "fkn", "", "ABWXA=&C", "CANCELAMENTO P/ MUDANCA CURSO", curriculum0, 1, 58, 58, 386, 1, (-968), 92, 2.0, (-2079.7), 92, 386, (-2007), 64, 0, (-115), 0.0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getAverageLoad();
      assertEquals(0.17898832684824903, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Curriculum curriculum0 = new Curriculum("", "QP", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, (-1), (-1), (-1), (-1), (-1), (-1), 4441, 971, 4441, (-1), treeSet0, treeSet0, treeSet0, treeSet0, treeSet0);
      Student student0 = new Student("", "", "", "QB3rt~9pM\"x,m", (String) null, "", "", "QB3rt~9pM\"x,m", "p*Hjrkpyoj$aT", "", "", "e&y7\"b#pWb#q^Ixye", studentStatus0, "[rd}pk@B$|", "", "-K[xd2LDNd\"5_<&weG-", "[rd}pk@B$|", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "", "", (String) null, curriculum0, (-1), 4441, (-1), 12, (-1), (-827), 0, 12, 4579.0, 971, (-1), 0, (-1208), (-827), 6, 0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getAttemptedCredits();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Curriculum curriculum0 = new Curriculum("BloomFilters must have equal strategies (%s != %s)", ";ZAhJ[DRQXCP:`", (ArrayList<Integer>) null, arrayList0, arrayList0, (ArrayList<Integer>) null, arrayList0, (-4434), 338, (-4434), 2785, 338, 0, 2785, 338, 0, 337, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      Student student0 = new Student("C{79T6vZu", "C{79T6vZu", "C{79T6vZu", "C{79T6vZu", "C{79T6vZu", "C{79T6vZu", "C{79T6vZu", "", "", "C{79T6vZu", "BloomFilters must have equal strategies (%s != %s)", "C{79T6vZu", studentStatus0, "BloomFilters must have equal strategies (%s != %s)", (String) null, "BloomFilters must have equal strategies (%s != %s)", "", (String) null, "", "BloomFilters must have equal strategies (%s != %s)", "C{79T6vZu", "C{79T6vZu", curriculum0, (-4434), 0, 337, (-1), (-4434), 2785, (-4434), 2854.02, 0, 530.0, (-4434), 2053, (-3895), 0, 2053, (-381.11524613572));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getAttemptedCredits();
      assertEquals((-4434.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Curriculum curriculum0 = new Curriculum(", complementaryHours=", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-1285), (-1285), 1423, (-1285), 0, 0, 2353, 2531, 2498, 2498, linkedList0, linkedList0, linkedList0, linkedList0, linkedList0);
      Student student0 = new Student("", "", (String) null, (String) null, ", complementaryCredits=", (String) null, (String) null, (String) null, (String) null, "", "A-XNY", ", complementaryCredits=", studentStatus0, "", "", "{.5", (String) null, (String) null, "", (String) null, "{.5", "", curriculum0, 1423, 2498, 1423, 8, 2498, 117, 2498, 2531, 1423, 0, 0, 2353, 2498, (-1818), (-19), 656.997768633);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getAffirmativePolicy();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      Curriculum curriculum0 = new Curriculum(", admissionStr='", "L!eHklkd", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-639), (-639), 2542, 16, 2542, 2542, (-639), (-639), (-639), 1, arrayDeque0, arrayDeque0, arrayDeque0, arrayDeque0, arrayDeque0);
      Student student0 = new Student("", "", "", "nzG)h.e/?'l\"!I hY", "nzG)h.e/?'l\"!I hY", "", ", admissionStr='", "", "6k0", ", admissionStr='", "", "", studentStatus0, "6k0", "", "nzG)h.e/?'l\"!I hY", "", "", "", "nzG)h.e/?'l\"!I hY", "", "", curriculum0, 1, 1, (-1), 2542, 5, 673, 5, 0.0, 3134.736, (-639), 5, (-1), 1, 5, 2542, (-3938.1077402294));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getAffirmativePolicy();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Vector<String> vector0 = new Vector<String>();
      Curriculum curriculum0 = new Curriculum("rL~X0!:^~p`lpC=$YV", (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 0, 0, 0, 0, 0, 0, 0, 0, (-641), 8233, vector0, vector0, vector0, vector0, vector0);
      Student student0 = new Student("'G5-m8*/[w~", "'G5-m8*/[w~", ">49esI(UXx", ">49esI(UXx", ">49esI(UXx", ">49esI(UXx", (String) null, "ku:IKyv}O9D#ydDn", (String) null, "The magic number cannot be null", "ku:IKyv}O9D#ydDn", "asw65j8M'uR30ekhZ4", studentStatus0, "", (String) null, (String) null, "", "", "pattern", "'G5-m8*/[w~", (String) null, "ttPi~[ji7<p%", curriculum0, (-287), 0, 1594, 1594, 0, 92, 1629, 0.0, 1629, 0.0, 0, 0, (-287), 2242, 1629, 0.0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getAdmissionType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Curriculum curriculum0 = new Curriculum("", "gC2R7Tn", arrayList0, arrayList0, (ArrayList<Integer>) null, arrayList0, arrayList0, (-824), (-824), 0, 1, 0, 1, 0, 677, (-1131), 0, arrayList1, arrayList1, arrayList1, arrayList1, arrayList1);
      Student student0 = new Student("", "", "", "", "", "gC2R7Tn", "", "(L`", "", "", "", "", studentStatus0, "", "nXi`hrB20RGSqC1@_", "", "(L`", "sr!3;AUO$[$G", "l];h(C%4R60N", "nXi`hrB20RGSqC1@_", "~0&IR5Ex;1", "", curriculum0, (-1), 133, 2107, (-1131), 0, 133, 3112, 4.0, 867.8785, 4.0, 0, 0, 829, 1, 0, 829);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getAdmissionType();
      assertEquals("nXi`hrB20RGSqC1@_", string0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum("6$.U0[.xo", "BloomFilters must have the sam size underlying bit arrays (%s != %s)", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 2272, (-19), (-19), (-326), 2272, (-19), (-19), (-19), (-1), (-2264), set0, set0, set0, (Collection<String>) null, set0);
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student("CharMatcher.none()", (String) null, (String) null, "BloomFilters must have the sam size underlying bit arrays (%s != %s)", "", "", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "CharMatcher.none()", "", "6$.U0[.xo", "", "", studentStatus0, "BloomFilters must have the sam size underlying bit arrays (%s != %s)", " dataLength: ", (String) null, "@;BP7Yw]", "BloomFilters must have the sam size underlying bit arrays (%s != %s)", "9]LtKiyBm/i%e", (String) null, "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "CharMatcher.none()", curriculum0, 542, 1705, 0, 542, (-4434), (-326), 0, (-4434), (-326), 1982.977936062, (-1), Integer.MAX_VALUE, Integer.MAX_VALUE, 2896, 2896, 0.0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getAdmissionTerm();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>(75);
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Curriculum curriculum0 = new Curriculum("br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 75, 75, 75, (-1991), (-1991), 786, (-1), 1857, 75, 8, arrayList1, arrayList1, arrayList1, arrayList1, arrayList1);
      Student student0 = new Student("jCK*^poI", "jCK*^poI", "jCK*^poI", "jCK*^poI", "", (String) null, "", "jCK*^poI", (String) null, "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", (String) null, "G", studentStatus0, "-`[OYg", "", "", (String) null, "", "6;J.,", (String) null, "I)=", "3<(V~:B[", curriculum0, 1857, 1857, (-885), 0, 8, 75, 2771, (-2493.57952159), 8, 2775.3584466178604, 181, (-862048943), (-1991), 9, 2771, 3.0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getAdmissionTerm();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Curriculum curriculum0 = new Curriculum((String) null, "", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 3248, 3248, 8, 3248, 3248, 3248, 5240, 1960, 5370, 5240, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null);
      Student student0 = new Student(".equivalentTo(", "(e8:0", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", (String) null, "", (String) null, "(e8:0", ".equivalentTo(", (String) null, ".equivalentTo(", "(e8:0", "", studentStatus0, "(e8:0", "", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", (String) null, "+Y5A(y}X->At#`)g", "ETk[I%0w&SHM1", (String) null, ".equivalentTo(", "ETk[I%0w&SHM1", curriculum0, 91, (-3754), 5370, 1960, 8, 1960, 5240, (-1678.3617565015456), 1.0, 1960, (-2397), 8, 948, 1960, 4340, (-254.467940738373));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      int int0 = studentCSV0.compareTo(studentCSV0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Curriculum curriculum0 = new Curriculum("com.google.common.base.CharMatcher$AnyOf", ":T5`J", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 0, 8, 0, (-1851), 0, 0, 8, 8, 8, 1264, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      Student student0 = new Student("cT?", "com.google.common.base.CharMatcher$SingleWidth", "cT?", "", "cT?", "", "com.google.common.base.CharMatcher$SingleWidth", "", "cT?", "com.google.common.base.CharMatcher$SingleWidth", "", "", studentStatus0, "", "", "com.google.common.base.CharMatcher$Digit", "", "com.google.common.base.CharMatcher$Digit", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "~,0$zc@eBK<n[>\"1", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "Q6'=0d/", curriculum0, (-1851), 0, 0, 0, (-1955), 4746, 0, (-551.365982792094), 2082.98, 4.9E-324, 251, 0, 8, 251, 32, 1264);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      // Undeclared exception!
      try { 
        studentCSV0.compareTo(studentCSV0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      Curriculum curriculum0 = new Curriculum(", admissionStr='", "L!eHklkd", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-639), (-639), 2542, 16, 2542, 2542, (-639), (-639), (-639), 1, arrayDeque0, arrayDeque0, arrayDeque0, arrayDeque0, arrayDeque0);
      Student student0 = new Student("", "", "", "nzG)h.e/?'l\"!I hY", "nzG)h.e/?'l\"!I hY", "", ", admissionStr='", "", "6k0", ", admissionStr='", "", "", studentStatus0, "6k0", "", "nzG)h.e/?'l\"!I hY", "", "", "", "nzG)h.e/?'l\"!I hY", "", "", curriculum0, 1, 1, (-1), 2542, 5, 673, 5, 0.0, 3134.736, (-639), 5, (-1), 1, 5, 2542, (-3938.1077402294));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      // Undeclared exception!
      try { 
        studentCSV0.compareTo("");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StudentCSV studentCSV0 = null;
      try {
        studentCSV0 = new StudentCSV((Student) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Curriculum curriculum0 = new Curriculum("z+eL", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", (ArrayList<Integer>) null, (ArrayList<Integer>) null, arrayList0, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-928), (-1903), (-1903), 0, (-1903), (-1903), 1099, 0, 1721, 43, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      Student student0 = new Student("", "", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "", "", "z+eL", "", "z+eL", "z+eL", "j.1$(}rxA", "He\"", studentStatus0, "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "z+eL", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "j.1$(}rxA", "j.1$(}rxA", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", curriculum0, 0, 1099, 1099, 1, 972, 0, 1, 852.9, 0.0, (-1903), (-928), 0, (-1975), 0, 0, (-1903));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      int int0 = studentCSV0.getComplementaryCredits();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Curriculum curriculum0 = new Curriculum("BloomFilters must have equal strategies (%s != %s)", ";ZAhJ[DRQXCP:`", (ArrayList<Integer>) null, arrayList0, arrayList0, (ArrayList<Integer>) null, arrayList0, (-4434), 338, (-4434), 2785, 338, 0, 2785, 338, 0, 337, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      Student student0 = new Student("C{79T6vZu", "C{79T6vZu", "C{79T6vZu", "C{79T6vZu", "C{79T6vZu", "C{79T6vZu", "C{79T6vZu", "", "", "C{79T6vZu", "BloomFilters must have equal strategies (%s != %s)", "C{79T6vZu", studentStatus0, "BloomFilters must have equal strategies (%s != %s)", (String) null, "BloomFilters must have equal strategies (%s != %s)", "", (String) null, "", "BloomFilters must have equal strategies (%s != %s)", "C{79T6vZu", "C{79T6vZu", curriculum0, (-4434), 0, 337, (-1), (-4434), 2785, (-4434), 2854.02, 0, 530.0, (-4434), 2053, (-3895), 0, 2053, (-381.11524613572));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      int int0 = studentCSV0.getMandatoryCredits();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Curriculum curriculum0 = new Curriculum("", "gC2R7Tn", arrayList0, arrayList0, (ArrayList<Integer>) null, arrayList0, arrayList0, (-824), (-824), 0, 1, 0, 1, 0, 677, (-1131), 0, arrayList1, arrayList1, arrayList1, arrayList1, arrayList1);
      Student student0 = new Student("", "", "", "", "", "gC2R7Tn", "", "(L`", "", "", "", "", studentStatus0, "", "nXi`hrB20RGSqC1@_", "", "(L`", "sr!3;AUO$[$G", "l];h(C%4R60N", "nXi`hrB20RGSqC1@_", "~0&IR5Ex;1", "", curriculum0, (-1), 133, 2107, (-1131), 0, 133, 3112, 4.0, 867.8785, 4.0, 0, 0, 829, 1, 0, 829);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      int int0 = studentCSV0.getElectiveCredits();
      assertEquals((-1131), int0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      ArrayList<String> arrayList0 = new ArrayList<String>(arrayDeque0);
      Curriculum curriculum0 = new Curriculum("", "", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 0, (-48), (-48), 8287, (-2047), (-12931), (-48), (-1), (-1723), 1, arrayList0, arrayList0, arrayList0, arrayList0, arrayList0);
      Student student0 = new Student("2RL G", "2RL G", "", "", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "", "", "2RL G", "\"BM'Z[U", "\"BM'Z[U", "", studentStatus0, "TRANSFERIDO PARA OUTRA IES", "", "", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", (String) null, ">|Vc|", curriculum0, (-1), (-1966), 0, (-3222), (-1723), 0, (-48), 0.0, 0.0, (-185.8008), 0, 0, (-12931), 0, 257, (-2047));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getRegistration();
      assertEquals("2RL G", string0);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Curriculum curriculum0 = new Curriculum("", "", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-349), (-349), (-349), (-349), (-1056), (-1056), (-349), (-349), (-349), (-349), (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null);
      Student student0 = new Student("", "", "", "", "", "", "", "", "", "", "", "", studentStatus0, "", "", "", (String) null, "com.google.common.collect.DiscreteDomain$1", "", "", "", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", curriculum0, 3079, (-334), (-1056), (-334), (-349), 3079, (-334), (-1056), 0.0, 0.0, (-686), 1966, (-1056), (-1056), 1, (-1056));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      int int0 = studentCSV0.computeCompletedCredits();
      assertEquals((-660), int0);
      assertEquals(3079, studentCSV0.getComplementaryCredits());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Stack<String> stack0 = new Stack<String>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Curriculum curriculum0 = new Curriculum("$gRq7 5MQ?B4*", "", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, (-855), (-855), (-855), (-855), 5760, 1, (-855), 1, (-855), (-855), stack0, stack0, linkedList0, stack0, stack0);
      Student student0 = new Student("br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", (String) null, "", "(.`^ec", "$gRq7 5MQ?B4*", studentStatus0, "", "$gRq7 5MQ?B4*", "$gRq7 5MQ?B4*", (String) null, "", "(.`^ec", "", "", "w?x w5-", curriculum0, (-855), 0, 1, 1, 1, 1935, 8, 1, 0, 1, 0, 1935, (-855), 65535, 65535, 1);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      studentCSV0.setRisk(65535);
      assertEquals(65535.0, studentCSV0.getRisk(), 0.01);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum("H^se^YyAKA", (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-2485), (-2485), (-2485), (-2485), (-2485), (-2485), (-219), (-2485), (-219), 0, set0, set0, set0, set0, set0);
      Student student0 = new Student("H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "", "", "", "", studentStatus0, "b", "H^se^YyAKA", (String) null, "", "H^se^YyAKA", "", "H^se^YyAKA", "!Ucn1f.^C", (String) null, curriculum0, 1200, (-219), 38, (-2485), (-219), (-219), 1200, 38, (-219), 38, (-1947), 38, (-219), 0, (-219), 0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getStatusTerm();
      assertEquals("b", string0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Vector<String> vector0 = new Vector<String>();
      Curriculum curriculum0 = new Curriculum("<G", "DQw9a", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 58, 2158, 58, 2158, 58, 2158, 58, 58, 2158, 58, vector0, treeSet0, vector0, vector0, treeSet0);
      Student student0 = new Student("<G", "<G", "<G", "<G", "@yj`$uBY6h*BQfD", "@yj`$uBY6h*BQfD", "@yj`$uBY6h*BQfD", "<G", "<G", "@yj`$uBY6h*BQfD", "<G", "<G", studentStatus0, "DQw9a", "@yj`$uBY6h*BQfD", "~vwsDnsR[w", "", "Jk}mb>t7+K9(oP6e=E", "Jk}mb>t7+K9(oP6e=E", "~vwsDnsR[w", "", "DQw9a", curriculum0, 58, 2054, 58, 2054, 58, 2158, 2158, 58, 2054, 58, 2158, 58, 58, 2054, 2158, 2158);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      studentCSV0.setSuccessRate(58);
      assertEquals(58.0, studentCSV0.getSuccessRate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Curriculum curriculum0 = new Curriculum("h#BGTznNL*~>Rjy", "&C;hv_A?8Z4X", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, arrayList0, (ArrayList<Integer>) null, (-1), 81, (-1), (-1), 81, (-1), (-1), (-1), (-1), 1834, treeSet0, treeSet0, treeSet0, treeSet0, treeSet0);
      Student student0 = new Student("K", "", "K", "acr1/so*U}db+Vf#s", "K", "K", "", "Vq3JHJ*/", "K", "W", "W", "acr1/so*U}db+Vf#s", studentStatus0, "", "7", "K", "", "7", "W", "h#BGTznNL*~>Rjy", "Vq3JHJ*/", "com.google.commonbase.Enums$StringConverter", curriculum0, 2896, 1834, 1834, (-1), 1834, 2896, 81, 81, 81, (-1), 81, 3771, (-1), (-1), (-1), 1834);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getCourseDurationPrediction();
      assertEquals(2.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Curriculum curriculum0 = new Curriculum("~,0$zc@eBK<n[>\"1", ":T5`J", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 0, 8, 1866, 1866, 0, 1866, 8, 8, 8, 1866, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      Student student0 = new Student("cT?", "cT?", "cT?", "", "cT?", "", "cT?", "", "cT?", "cT?", "", "", studentStatus0, "", "", "", "", "", "", "~,0$zc@eBK<n[>\"1", "cT?", "Q6'=0d/", curriculum0, 0, 0, 1866, 0, (-1955), (-1955), 1866, (-551.365982792094), 2082.98, 2082.98, (-1955), 0, 0, (-1955), (-1955), 1866);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getAverageLoad();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Curriculum curriculum0 = new Curriculum("", "", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 3226, 3226, 3226, 3226, 3226, 3226, 4441, 3226, 4441, (-1), treeSet0, treeSet0, treeSet0, treeSet0, treeSet0);
      Student student0 = new Student("", "", "", "QB3rt~9pM\"x,m", "", "", "", "QB3rt~9pM\"x,m", "", "", "", "", studentStatus0, "", "", "QB3rt~9pM\"x,m", "", "", "", "", "", (String) null, curriculum0, 3226, 4441, (-1), 3226, 3226, (-1), 0, 3226, 4441, 4441, (-1), 0, 3226, 0, 3226, 0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      int int0 = studentCSV0.getInstitutionalEnrollments();
      assertEquals(3226, int0);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Vector<String> vector0 = new Vector<String>();
      Curriculum curriculum0 = new Curriculum("<G", "DQw9a", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 58, 2158, 58, 2158, 58, 2158, 58, 58, 2158, 58, vector0, treeSet0, vector0, vector0, treeSet0);
      Student student0 = new Student("<G", "<G", "<G", "<G", "@yj`$uBY6h*BQfD", "@yj`$uBY6h*BQfD", "@yj`$uBY6h*BQfD", "<G", "<G", "@yj`$uBY6h*BQfD", "<G", "<G", studentStatus0, "DQw9a", "@yj`$uBY6h*BQfD", "~vwsDnsR[w", "", "Jk}mb>t7+K9(oP6e=E", "Jk}mb>t7+K9(oP6e=E", "~vwsDnsR[w", "", "DQw9a", curriculum0, 58, 2054, 58, 2054, 58, 2158, 2158, 58, 2054, 58, 2158, 58, 58, 2054, 2158, 2158);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getCost();
      assertEquals(0.7453296206752419, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum("6$.U0[.xo", (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 2272, 0, 0, (-326), 2272, 0, 0, 0, (-1), (-2264), set0, set0, set0, (Collection<String>) null, set0);
      Student student0 = new Student("j66|", "j66|", "j66|", "6$.U0[.xo", "j66|", "j66|", "j66|", "6$.U0[.xo", "j66|", "j66|", "6$.U0[.xo", (String) null, studentStatus0, "j66|", "(ThT9", "(ThT9", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "6$.U0[.xo", (String) null, "j66|", (String) null, "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", curriculum0, (-2264), (-326), 32, 0, (-1), 0, 32, (-1), 0.0, (-2264), 307, (-1), 0, 1455, 0, 0.0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      studentCSV0.setMaritalStatus("j66|");
      assertEquals(0, studentCSV0.getElectiveCredits());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Curriculum curriculum0 = new Curriculum("BloomFilters must have equal strategies (%s != %s)", "C{79T6vZu", (ArrayList<Integer>) null, arrayList0, arrayList0, (ArrayList<Integer>) null, arrayList0, (-4434), (-4434), (-4434), (-4434), (-4434), 0, (-4434), (-4434), 0, 3566, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      Student student0 = new Student("C{79T6vZu", "C{79T6vZu", "C{79T6vZu", "C{79T6vZu", "C{79T6vZu", "C{79T6vZu", "C{79T6vZu", "C{79T6vZu", "C{79T6vZu", "C{79T6vZu", "BloomFilters must have equal strategies (%s != %s)", "C{79T6vZu", studentStatus0, "BloomFilters must have equal strategies (%s != %s)", "BloomFilters must have equal strategies (%s != %s)", "BloomFilters must have equal strategies (%s != %s)", "BloomFilters must have equal strategies (%s != %s)", "BloomFilters must have equal strategies (%s != %s)", "BloomFilters must have equal strategies (%s != %s)", "BloomFilters must have equal strategies (%s != %s)", "C{79T6vZu", "C{79T6vZu", curriculum0, (-4434), (-4434), 3566, (-1), (-4434), (-4434), (-4434), (-1), (-4434), 3566, (-4434), 2053, (-3895), (-4434), 2053, 3566);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      studentCSV0.setSuspendedTerms((-17));
      assertEquals((-17), studentCSV0.getSuspendedTerms());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Curriculum curriculum0 = new Curriculum("", "", (ArrayList<Integer>) null, (ArrayList<Integer>) null, arrayList0, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-928), (-928), (-928), (-928), (-928), (-928), (-928), (-928), (-928), (-928), linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      Student student0 = new Student("", "", "", "", "", "", "", "", "", "", "", "", studentStatus0, "", "", "", "", "", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "", "", curriculum0, (-928), (-928), (-928), 1, 972, (-928), 1, 853.261288014376, 0.0, (-928), (-928), (-928), (-1975), 0, (-928), (-928));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      studentCSV0.setAdmissionTerm("");
      assertEquals("", studentCSV0.getMaritalStatus());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Curriculum curriculum0 = new Curriculum(", complementaryHours=", (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-1285), (-1285), 1423, (-1285), 0, 0, 2353, 2531, 2498, 2498, linkedList0, linkedList0, linkedList0, linkedList0, linkedList0);
      Student student0 = new Student("", "", (String) null, (String) null, ", complementaryCredits=", (String) null, (String) null, (String) null, (String) null, "", (String) null, ", complementaryCredits=", studentStatus0, "", "", "{.5", (String) null, "!P%5l1VXh", "", "!P%5l1VXh", "{.5", "", curriculum0, 1423, 2498, 1423, 8, 2498, 8, 2498, 2531, 1423, 0, 0, 2353, 2498, (-1818), (-19), (-1818));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getRisk();
      assertEquals((-8.215894602634934), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Curriculum curriculum0 = new Curriculum("", "", (ArrayList<Integer>) null, (ArrayList<Integer>) null, arrayList0, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-928), (-928), (-928), (-928), (-928), (-928), (-928), (-928), (-928), (-928), linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      Student student0 = new Student("", "", "", "", "", "", "", "", "", "", "", "", studentStatus0, "", "", "", "", "", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "", "", curriculum0, (-928), (-928), (-928), 1, 972, (-928), 1, 853.261288014376, 0.0, (-928), (-928), (-928), (-1975), 0, (-928), (-928));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getStatusStr();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      PriorityQueue<String> priorityQueue0 = new PriorityQueue<String>();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Curriculum curriculum0 = new Curriculum("WX", "0mhFN", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 65536, 65536, 65536, 65536, 65536, 65536, 65536, 65536, 65536, 65536, priorityQueue0, priorityQueue0, treeSet0, priorityQueue0, priorityQueue0);
      Student student0 = new Student("", "", "", "", "WX", "WX", "", "", "1ToNsZ[\"", "", "WX", "", studentStatus0, "", "", " 5AAu6f2", "", "", "TeA{W' %MCBdr6_+", "", "1ToNsZ[\"", "", curriculum0, 65536, 65536, 0, 0, 65536, 65536, (-1218), 65536, (-1605.19142), (-1605.19142), 65536, 65536, 0, 65536, 65536, 0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      int int0 = studentCSV0.getSuspendedTerms();
      assertEquals(65536, int0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum("6$.U0[.xo", (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 2272, 0, 0, (-326), 2272, 0, 0, 0, (-1), (-2264), set0, set0, set0, (Collection<String>) null, set0);
      Student student0 = new Student("j66|", "j66|", "j66|", "6$.U0[.xo", "j66|", "j66|", "j66|", "6$.U0[.xo", "j66|", "j66|", "6$.U0[.xo", (String) null, studentStatus0, "j66|", "(ThT9", "(ThT9", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "6$.U0[.xo", (String) null, "j66|", (String) null, "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", curriculum0, (-2264), (-326), 32, 0, (-1), 0, 32, (-1), 0.0, (-2264), 307, (-1), 0, 1455, 0, 0.0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      studentCSV0.setMobilityTerms(32);
      assertEquals(32, studentCSV0.getMobilityTerms());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Curriculum curriculum0 = new Curriculum("", "", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-349), (-349), (-349), (-349), (-1056), (-1056), (-349), (-349), (-349), (-349), (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null);
      Student student0 = new Student("", "", "", "", "", "", "", "", "", "", "", "", studentStatus0, "", "", "", (String) null, "com.google.common.collect.DiscreteDomain$1", "", "", "", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", curriculum0, 3079, (-334), (-1056), (-334), (-349), 3079, (-334), (-1056), 0.0, 0.0, (-686), 1966, (-1056), (-1056), 1, (-1056));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getCourseCode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Curriculum curriculum0 = new Curriculum("", "", (ArrayList<Integer>) null, (ArrayList<Integer>) null, arrayList0, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-928), (-928), (-928), (-928), (-928), (-928), (-928), (-928), (-928), (-928), linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      Student student0 = new Student("", "", "", "", "", "", "", "", "", "", "", "", studentStatus0, "", "", "", "", "", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "", "", curriculum0, (-928), (-928), (-928), 1, 972, (-928), 1, 853.261288014376, 0.0, (-928), (-928), (-928), (-1975), 0, (-928), (-928));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      studentCSV0.setMandatoryCredits(75);
      assertEquals((-852), studentCSV0.computeCompletedCredits());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Locale locale0 = Locale.ENGLISH;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      Curriculum curriculum0 = new Curriculum("", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-261), (-1), (-261), (-1), (-261), (-1), (-261), (-261), (-1), (-1364), set0, set0, set0, set0, set0);
      Student student0 = new Student("", "", "Z,1bg-z!'Ep", "", "i_", "Z,1bg-z!'Ep", "i_", "", "", "", "", "", studentStatus0, "i_", "Key '%s' not present in map", "", "", "Z,1bg-z!'Ep", "", "", "", "i_", curriculum0, 0, (-1364), 1, (-1), (-1), 503, (-261), (-261), 503, (-261), 1096, (-1364), 1230, 583, 0, (-1739.86));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      int int0 = studentCSV0.getMobilityTerms();
      assertEquals(583, int0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Vector<String> vector0 = new Vector<String>();
      Curriculum curriculum0 = new Curriculum("<G", "DQw9a", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 58, 2158, 58, 2158, 58, 2158, 58, 58, 2158, 58, vector0, treeSet0, vector0, vector0, treeSet0);
      Student student0 = new Student("<G", "<G", "<G", "<G", "@yj`$uBY6h*BQfD", "@yj`$uBY6h*BQfD", "@yj`$uBY6h*BQfD", "<G", "<G", "@yj`$uBY6h*BQfD", "<G", "<G", studentStatus0, "DQw9a", "@yj`$uBY6h*BQfD", "~vwsDnsR[w", "", "Jk}mb>t7+K9(oP6e=E", "Jk}mb>t7+K9(oP6e=E", "~vwsDnsR[w", "", "DQw9a", curriculum0, 58, 2054, 58, 2054, 58, 2158, 2158, 58, 2054, 58, 2158, 58, 58, 2054, 2158, 2158);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getSuccessRate();
      assertEquals(2.9036144578313254, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Curriculum curriculum0 = new Curriculum("M", "M", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-1285), (-1285), 1423, (-1285), (-349), 0, 2320, 2531, 2498, 2498, linkedList0, linkedList0, linkedList0, linkedList0, linkedList0);
      Student student0 = new Student("M", "M", (String) null, (String) null, ", complementaryCredits=", "M", (String) null, (String) null, (String) null, "M", "A-XNY", ", complementaryCredits=", studentStatus0, "M", "/%oOmKSLs. Gs", (String) null, (String) null, "M", "M", "M", (String) null, "M", curriculum0, 1423, 2498, 1423, 8, 2498, 117, 2498, 2531, 1423, 0, (-349), 2320, 2498, 72, (-19), 656.997768633);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      studentCSV0.setCourseCode("M");
      assertEquals(2498, studentCSV0.getMandatoryCredits());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Curriculum curriculum0 = new Curriculum(", complementaryHours=", (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-1285), (-1285), 1423, (-1285), 0, 0, 2353, 2531, 2498, 2498, linkedList0, linkedList0, linkedList0, linkedList0, linkedList0);
      Student student0 = new Student("", "", (String) null, (String) null, ", complementaryCredits=", (String) null, (String) null, (String) null, (String) null, "", (String) null, ", complementaryCredits=", studentStatus0, "", "", "{.5", (String) null, "!P%5l1VXh", "", "!P%5l1VXh", "{.5", "", curriculum0, 1423, 2498, 1423, 8, 2498, 8, 2498, 2531, 1423, 0, 0, 2353, 2498, (-1818), (-19), (-1818));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getAffirmativePolicy();
      assertEquals("!P%5l1VXh", string0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum("H^se^YyAKA", (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-2485), (-2485), (-2485), (-2485), (-2485), (-2485), (-219), (-2485), (-219), 0, set0, set0, set0, set0, set0);
      Student student0 = new Student("H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "", "", "", "", studentStatus0, "b", "H^se^YyAKA", (String) null, "", "H^se^YyAKA", "", "H^se^YyAKA", "!Ucn1f.^C", (String) null, curriculum0, 1200, (-219), 38, (-2485), (-219), (-219), 1200, 38, (-219), 38, (-1947), 38, (-219), 0, (-219), 0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getCurriculumCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Curriculum curriculum0 = new Curriculum((String) null, "", (ArrayList<Integer>) null, (ArrayList<Integer>) null, arrayList0, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 2614, 2614, 2614, 2614, 2614, 2614, 2614, 14, 14, 14, arrayList1, arrayList1, arrayList1, arrayList1, arrayList1);
      Student student0 = new Student("", "", (String) null, (String) null, "OIz;Fkamg2w", (String) null, (String) null, "", "", (String) null, (String) null, "OIz;Fkamg2w", studentStatus0, "K~\">\"!^cUGC", "OIz;Fkamg2w", "OIz;Fkamg2w", "OIz;Fkamg2w", "OIz;Fkamg2w", "OIz;Fkamg2w", "OIz;Fkamg2w", "K~\">\"!^cUGC", "K~\">\"!^cUGC", curriculum0, (-664), 2614, 2614, 2614, 2614, (-664), 2614, 2614, 3227.89837, 2614, 14, 2614, (-664), 2614, 2699, 2614);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      studentCSV0.setRegistration("");
      assertEquals((-1.0), studentCSV0.getPace(), 0.01);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum("H^se^YyAKA", (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-2485), (-2485), (-2485), (-2485), (-2485), (-2485), (-219), (-2485), (-219), 0, set0, set0, set0, set0, set0);
      Student student0 = new Student("H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "", "", "", "", studentStatus0, "b", "H^se^YyAKA", (String) null, "", "H^se^YyAKA", "", "H^se^YyAKA", "!Ucn1f.^C", (String) null, curriculum0, 1200, (-219), 38, (-2485), (-219), (-219), 1200, 38, (-219), 38, (-1947), 38, (-219), 0, (-219), 0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      studentCSV0.setCost(203.91802);
      assertEquals(203.91802, studentCSV0.getCost(), 0.01);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) stack0, (Collection<String>) treeSet0, locale_FilteringMode0);
      Curriculum curriculum0 = new Curriculum("O", "", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 8, 8, 8, 8, 8, 8, 8, 8, (-2748), 8, list0, treeSet0, list0, list0, treeSet0);
      Student student0 = new Student("O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", studentStatus0, "O", "O", "~vwsDnsR[w", "~vwsDnsR[w", "~vwsDnsR[w", "~vwsDnsR[w", "~vwsDnsR[w", "~vwsDnsR[w", "O", curriculum0, (-1), (-2748), 8, (-2748), (-1), (-2748), 8, 8, (-2748), 8, 3, (-2748), 8, 8, 8, 8);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      studentCSV0.setPace((-1));
      assertEquals((-1.0), studentCSV0.getPace(), 0.01);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Curriculum curriculum0 = new Curriculum("", "", (ArrayList<Integer>) null, (ArrayList<Integer>) null, arrayList0, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-928), (-928), (-928), (-928), (-928), (-928), (-928), (-928), (-928), (-928), linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      Student student0 = new Student("", "", "", "", "", "", "", "", "", "", "", "", studentStatus0, "", "", "", "", "", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "", "", curriculum0, (-928), (-928), (-928), 1, 972, (-928), 1, 853.261288014376, 0.0, (-928), (-928), (-928), (-1975), 0, (-928), (-928));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getAdmissionType();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Curriculum curriculum0 = new Curriculum("", "", (ArrayList<Integer>) null, (ArrayList<Integer>) null, arrayList0, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-928), (-928), (-928), (-928), (-928), (-928), (-928), (-928), (-928), (-928), linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      Student student0 = new Student("", "", "", "", "", "", "", "", "", "", "", "", studentStatus0, "", "", "", "", "", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "", "", curriculum0, (-928), (-928), (-928), 1, 972, (-928), 1, 853.261288014376, 0.0, (-928), (-928), (-928), (-1975), 0, (-928), (-928));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getMaritalStatus();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Curriculum curriculum0 = new Curriculum("h#BGTznNL*~>Rjy", "&C;hv_A?8Z4X", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, arrayList0, (ArrayList<Integer>) null, (-1), 81, (-1), (-1), 81, (-1), (-1), (-1), (-1), 1834, treeSet0, treeSet0, treeSet0, treeSet0, treeSet0);
      Student student0 = new Student("K", "", "K", "acr1/so*U}db+Vf#s", "K", "K", "", "Vq3JHJ*/", "K", "W", "W", "acr1/so*U}db+Vf#s", studentStatus0, "", "7", "K", "", "7", "W", "h#BGTznNL*~>Rjy", "Vq3JHJ*/", "com.google.commonbase.Enums$StringConverter", curriculum0, 2896, 1834, 1834, (-1), 1834, 2896, 81, 81, 81, (-1), 81, 3771, (-1), (-1), (-1), 1834);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      studentCSV0.setElectiveCredits(3771);
      assertEquals(5613, studentCSV0.computeCompletedCredits());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum("6$.U0[.xo", (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 2272, 0, 0, (-326), 2272, 0, 0, 0, (-1), (-2264), set0, set0, set0, (Collection<String>) null, set0);
      Student student0 = new Student("j66|", "j66|", "j66|", "6$.U0[.xo", "j66|", "j66|", "j66|", "6$.U0[.xo", "j66|", "j66|", "6$.U0[.xo", (String) null, studentStatus0, "j66|", "(ThT9", "(ThT9", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "6$.U0[.xo", (String) null, "j66|", (String) null, "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", curriculum0, (-2264), (-326), 32, 0, (-1), 0, 32, (-1), 0.0, (-2264), 307, (-1), 0, 1455, 0, 0.0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      studentCSV0.setMc(1472.68216);
      assertEquals(1472.68216, studentCSV0.getMc(), 0.01);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum("H^se^YyAKA", (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-2485), (-2485), (-2485), (-2485), (-2485), (-2485), (-219), (-2485), (-219), 0, set0, set0, set0, set0, set0);
      Student student0 = new Student("H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "", "", "", "", studentStatus0, "b", "H^se^YyAKA", (String) null, "", "H^se^YyAKA", "", "H^se^YyAKA", "!Ucn1f.^C", (String) null, curriculum0, 1200, (-219), 38, (-2485), (-219), (-219), 1200, 38, (-219), 38, (-1947), 38, (-219), 0, (-219), 0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      studentCSV0.setAffirmativePolicy(",Pa");
      assertEquals(38.0, studentCSV0.getGpa(), 0.01);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Curriculum curriculum0 = new Curriculum(", complementaryHours=", (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-1285), (-1285), 1423, (-1285), 0, 0, 2353, 2531, 2498, 2498, linkedList0, linkedList0, linkedList0, linkedList0, linkedList0);
      Student student0 = new Student("", "", (String) null, (String) null, ", complementaryCredits=", (String) null, (String) null, (String) null, (String) null, "", (String) null, ", complementaryCredits=", studentStatus0, "", "", "{.5", (String) null, "!P%5l1VXh", "", "!P%5l1VXh", "{.5", "", curriculum0, 1423, 2498, 1423, 8, 2498, 8, 2498, 2531, 1423, 0, 0, 2353, 2498, (-1818), (-19), (-1818));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getAttemptedCredits();
      assertEquals(2498.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Curriculum curriculum0 = new Curriculum("h#BGTznNL*~>Rjy", "&C;hv_A?8Z4X", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, arrayList0, (ArrayList<Integer>) null, (-1), 81, (-1), (-1), 81, (-1), (-1), (-1), (-1), 1834, treeSet0, treeSet0, treeSet0, treeSet0, treeSet0);
      Student student0 = new Student("K", "", "K", "acr1/so*U}db+Vf#s", "K", "K", "", "Vq3JHJ*/", "K", "W", "W", "acr1/so*U}db+Vf#s", studentStatus0, "", "7", "K", "", "7", "W", "h#BGTznNL*~>Rjy", "Vq3JHJ*/", "com.google.commonbase.Enums$StringConverter", curriculum0, 2896, 1834, 1834, (-1), 1834, 2896, 81, 81, 81, (-1), 81, 3771, (-1), (-1), (-1), 1834);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      studentCSV0.setIea((-1));
      assertEquals((-1.0), studentCSV0.getIea(), 0.01);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      ArrayList<String> arrayList1 = new ArrayList<String>();
      Curriculum curriculum0 = new Curriculum((String) null, "", (ArrayList<Integer>) null, (ArrayList<Integer>) null, arrayList0, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 2614, 2614, 2614, 2614, 2614, 2614, 2614, 14, 14, 14, arrayList1, arrayList1, arrayList1, arrayList1, arrayList1);
      Student student0 = new Student("", "", (String) null, (String) null, "OIz;Fkamg2w", (String) null, (String) null, "", "", (String) null, (String) null, "OIz;Fkamg2w", studentStatus0, "K~\">\"!^cUGC", "OIz;Fkamg2w", "OIz;Fkamg2w", "OIz;Fkamg2w", "OIz;Fkamg2w", "OIz;Fkamg2w", "OIz;Fkamg2w", "K~\">\"!^cUGC", "K~\">\"!^cUGC", curriculum0, (-664), 2614, 2614, 2614, 2614, (-664), 2614, 2614, 3227.89837, 2614, 14, 2614, (-664), 2614, 2699, 2614);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      RiskClass riskClass0 = studentCSV0.getRiskClass();
      assertEquals(RiskClass.NOT_APPLICABLE, riskClass0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Curriculum curriculum0 = new Curriculum("", "", (ArrayList<Integer>) null, (ArrayList<Integer>) null, arrayList0, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-928), (-928), (-928), (-928), (-928), (-928), (-928), (-928), (-928), (-928), linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      Student student0 = new Student("", "", "", "", "", "", "", "", "", "", "", "", studentStatus0, "", "", "", "", "", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "", "", curriculum0, (-928), (-928), (-928), 1, 972, (-928), 1, 853.261288014376, 0.0, (-928), (-928), (-928), (-1975), 0, (-928), (-928));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      studentCSV0.setEntryGrade(39.0083);
      assertEquals(39.0083, studentCSV0.getEntryGrade(), 0.01);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum("H^se^YyAKA", (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-2485), (-2485), (-2485), (-2485), (-2485), (-2485), (-219), (-2485), (-219), 0, set0, set0, set0, set0, set0);
      Student student0 = new Student("H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "", "", "", "", studentStatus0, "b", "H^se^YyAKA", (String) null, "", "H^se^YyAKA", "", "H^se^YyAKA", "!Ucn1f.^C", (String) null, curriculum0, 1200, (-219), 38, (-2485), (-219), (-219), 1200, 38, (-219), 38, (-1947), 38, (-219), 0, (-219), 0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      studentCSV0.setStatusStr("com.google.common.hash.LongAddableT");
      assertEquals((-1.0), studentCSV0.getRisk(), 0.01);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Curriculum curriculum0 = new Curriculum("", "", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-1285), (-1285), (-1285), (-1285), (-1285), (-1285), (-1285), (-1285), 2498, 2498, linkedList0, linkedList0, linkedList0, linkedList0, linkedList0);
      Student student0 = new Student("", "", (String) null, (String) null, "", (String) null, (String) null, (String) null, (String) null, "", "A-XNY", "", studentStatus0, "", "", "A-XNY", (String) null, "!P%5l1VXh", "", "!P%5l1VXh", "A-XNY", "", curriculum0, (-1285), 2498, (-1285), (-1285), 2498, (-1285), 2498, (-1285), (-1285), (-1285), (-1285), (-1285), 2498, 799, (-19), 799);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getFeasibility();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Locale locale0 = Locale.ENGLISH;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      Curriculum curriculum0 = new Curriculum("", "", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-261), (-1), (-261), (-1), (-261), (-1), (-261), (-261), (-1), (-1403), set0, set0, set0, set0, set0);
      Student student0 = new Student("U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", "U", studentStatus0, "U", "U", "U", "U", "U", "", "", "U", "U", curriculum0, (-1403), (-1403), (-21), (-1), (-1), (-1), (-261), (-261), (-1), (-261), (-21), (-1403), (-21), 583, (-261), (-1739.86));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getPace();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Curriculum curriculum0 = new Curriculum(", complementaryHours=", (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-1285), (-1285), 1423, (-1285), 0, 0, 2353, 2531, 2498, 2498, linkedList0, linkedList0, linkedList0, linkedList0, linkedList0);
      Student student0 = new Student("", "", (String) null, (String) null, ", complementaryCredits=", (String) null, (String) null, (String) null, (String) null, "", (String) null, ", complementaryCredits=", studentStatus0, "", "", "{.5", (String) null, "!P%5l1VXh", "", "!P%5l1VXh", "{.5", "", curriculum0, 1423, 2498, 1423, 8, 2498, 8, 2498, 2531, 1423, 0, 0, 2353, 2498, (-1818), (-19), (-1818));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      studentCSV0.setCompletedTerms((-968));
      assertEquals((-968), studentCSV0.getCompletedTerms());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Curriculum curriculum0 = new Curriculum("", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, (-1), (-1), (-1), (-1), (-1), (-1), 8232, 971, 8232, (-1), treeSet0, treeSet0, treeSet0, treeSet0, treeSet0);
      Student student0 = new Student("", "", "", "YWKsF-|", "YWKsF-|", "", "YWKsF-|", "YWKsF-|", "YWKsF-|", "x7\"=I Ikv", "YWKsF-|", "x7\"=I Ikv", studentStatus0, "x7\"=I Ikv", "", "YWKsF-|", "x7\"=I Ikv", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "", "x7\"=I Ikv", "YWKsF-|", curriculum0, (-1), 8232, (-1), 12, (-1), (-1), 0, 12, (-1), 971, (-1), 0, (-1208), (-1), 0, 0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getGpa();
      assertEquals(12.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum("H^se^YyAKA", (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-2485), (-2485), (-2485), (-2485), (-2485), (-2485), (-219), (-2485), (-219), 0, set0, set0, set0, set0, set0);
      Student student0 = new Student("H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "", "", "", "", studentStatus0, "b", "H^se^YyAKA", (String) null, "", "H^se^YyAKA", "", "H^se^YyAKA", "!Ucn1f.^C", (String) null, curriculum0, 1200, (-219), 38, (-2485), (-219), (-219), 1200, 38, (-219), 38, (-1947), 38, (-219), 0, (-219), 0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      studentCSV0.setStatusTerm("");
      assertEquals("", studentCSV0.getStatusStr());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Locale locale0 = Locale.ENGLISH;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      Curriculum curriculum0 = new Curriculum("", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-261), (-1), (-261), (-1), (-261), (-1), (-261), (-261), (-1), (-1364), set0, set0, set0, set0, set0);
      Student student0 = new Student("", "", "Z,1bg-z!'Ep", "", "i_", "Z,1bg-z!'Ep", "i_", "", "", "", "", "", studentStatus0, "i_", "Key '%s' not present in map", "", "", "Z,1bg-z!'Ep", "", "", "", "i_", curriculum0, 0, (-1364), 1, (-1), (-1), 503, (-261), (-261), 503, (-261), 1096, (-1364), 1230, 583, 0, (-1739.86));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      studentCSV0.setInstitutionalEnrollments((-1));
      assertEquals((-1), studentCSV0.getInstitutionalEnrollments());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Curriculum curriculum0 = new Curriculum(", complementaryHours=", (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-1285), (-1285), 1423, (-1285), 0, 0, 2353, 2531, 2498, 2498, linkedList0, linkedList0, linkedList0, linkedList0, linkedList0);
      Student student0 = new Student("", "", (String) null, (String) null, ", complementaryCredits=", (String) null, (String) null, (String) null, (String) null, "", (String) null, ", complementaryCredits=", studentStatus0, "", "", "{.5", (String) null, "!P%5l1VXh", "", "!P%5l1VXh", "{.5", "", curriculum0, 1423, 2498, 1423, 8, 2498, 8, 2498, 2531, 1423, 0, 0, 2353, 2498, (-1818), (-19), (-1818));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getEntryGrade();
      assertEquals((-1818.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Curriculum curriculum0 = new Curriculum("~,0$zc@eBK<n[>\"1", ":T5`J", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 0, 8, 1866, 1866, 0, 1866, 8, 8, 8, 1866, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      Student student0 = new Student("cT?", "cT?", "cT?", "", "cT?", "", "cT?", "", "cT?", "cT?", "", "", studentStatus0, "", "", "", "", "", "", "~,0$zc@eBK<n[>\"1", "cT?", "Q6'=0d/", curriculum0, 0, 0, 1866, 0, (-1955), (-1955), 1866, (-551.365982792094), 2082.98, 2082.98, (-1955), 0, 0, (-1955), (-1955), 1866);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      studentCSV0.setGender("~,0$zc@eBK<n[>\"1");
      assertEquals(RiskClass.NOT_APPLICABLE, studentCSV0.getRiskClass());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum("6$.U0[.xo", (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 2272, 0, 0, (-326), 2272, 0, 0, 0, (-1), (-2264), set0, set0, set0, (Collection<String>) null, set0);
      Student student0 = new Student("j66|", "j66|", "j66|", "6$.U0[.xo", "j66|", "j66|", "j66|", "6$.U0[.xo", "j66|", "j66|", "6$.U0[.xo", (String) null, studentStatus0, "j66|", "(ThT9", "(ThT9", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "6$.U0[.xo", (String) null, "j66|", (String) null, "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", curriculum0, (-2264), (-326), 32, 0, (-1), 0, 32, (-1), 0.0, (-2264), 307, (-1), 0, 1455, 0, 0.0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      CostClass costClass0 = studentCSV0.getCostClass();
      assertEquals(CostClass.NOT_APPLICABLE, costClass0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Curriculum curriculum0 = new Curriculum("~,0$zc@eBK<n[>\"1", ":T5`J", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 0, 8, 1866, 1866, 0, 1866, 8, 8, 8, 1866, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      Student student0 = new Student("cT?", "cT?", "cT?", "", "cT?", "", "cT?", "", "cT?", "cT?", "", "", studentStatus0, "", "", "", "", "", "", "~,0$zc@eBK<n[>\"1", "cT?", "Q6'=0d/", curriculum0, 0, 0, 1866, 0, (-1955), (-1955), 1866, (-551.365982792094), 2082.98, 2082.98, (-1955), 0, 0, (-1955), (-1955), 1866);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      studentCSV0.setCourseDurationPrediction(8);
      assertEquals(8.0, studentCSV0.getCourseDurationPrediction(), 0.01);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum("H^se^YyAKA", (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-2485), (-2485), (-2485), (-2485), (-2485), (-2485), (-219), (-2485), (-219), 0, set0, set0, set0, set0, set0);
      Student student0 = new Student("H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "", "", "", "", studentStatus0, "b", "H^se^YyAKA", (String) null, "", "H^se^YyAKA", "", "H^se^YyAKA", "!Ucn1f.^C", (String) null, curriculum0, 1200, (-219), 38, (-2485), (-219), (-219), 1200, 38, (-219), 38, (-1947), 38, (-219), 0, (-219), 0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getIea();
      assertEquals(38.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Stack<String> stack0 = new Stack<String>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Curriculum curriculum0 = new Curriculum("$gRq7 5MQ?B4*", "", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, (-855), (-855), (-855), (-855), 5760, 1, (-855), 1, (-855), (-855), stack0, stack0, linkedList0, stack0, stack0);
      Student student0 = new Student("br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", (String) null, "", "(.`^ec", "$gRq7 5MQ?B4*", studentStatus0, "", "$gRq7 5MQ?B4*", "$gRq7 5MQ?B4*", (String) null, "", "(.`^ec", "", "", "w?x w5-", curriculum0, (-855), 0, 1, 1, 1, 1935, 8, 1, 0, 1, 0, 1935, (-855), 65535, 65535, 1);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      int int0 = studentCSV0.getCompletedTerms();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Vector<String> vector0 = new Vector<String>();
      Curriculum curriculum0 = new Curriculum("<G", "DQw9a", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 58, 2158, 58, 2158, 58, 2158, 58, 58, 2158, 58, vector0, treeSet0, vector0, vector0, treeSet0);
      Student student0 = new Student("<G", "<G", "<G", "<G", "@yj`$uBY6h*BQfD", "@yj`$uBY6h*BQfD", "@yj`$uBY6h*BQfD", "<G", "<G", "@yj`$uBY6h*BQfD", "<G", "<G", studentStatus0, "DQw9a", "@yj`$uBY6h*BQfD", "~vwsDnsR[w", "", "Jk}mb>t7+K9(oP6e=E", "Jk}mb>t7+K9(oP6e=E", "~vwsDnsR[w", "", "DQw9a", curriculum0, 58, 2054, 58, 2054, 58, 2158, 2158, 58, 2054, 58, 2158, 58, 58, 2054, 2158, 2158);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      studentCSV0.setName("com.google.common.base.CharMatcher$NegatedFastMatcher");
      assertEquals("<G", studentCSV0.getRegistration());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum("H^se^YyAKA", (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-2485), (-2485), (-2485), (-2485), (-2485), (-2485), (-219), (-2485), (-219), 0, set0, set0, set0, set0, set0);
      Student student0 = new Student("H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "", "", "", "", studentStatus0, "b", "H^se^YyAKA", (String) null, "", "H^se^YyAKA", "", "H^se^YyAKA", "!Ucn1f.^C", (String) null, curriculum0, 1200, (-219), 38, (-2485), (-219), (-219), 1200, 38, (-219), 38, (-1947), 38, (-219), 0, (-219), 0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      studentCSV0.setAttemptedCredits(38.0);
      assertEquals(38.0, studentCSV0.getAttemptedCredits(), 0.01);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Curriculum curriculum0 = new Curriculum("M", "M", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-1285), (-1285), 1423, (-1285), (-349), 0, 2320, 2531, 2498, 2498, linkedList0, linkedList0, linkedList0, linkedList0, linkedList0);
      Student student0 = new Student("M", "M", (String) null, (String) null, ", complementaryCredits=", "M", (String) null, (String) null, (String) null, "M", "A-XNY", ", complementaryCredits=", studentStatus0, "M", "/%oOmKSLs. Gs", (String) null, (String) null, "M", "M", "M", (String) null, "M", curriculum0, 1423, 2498, 1423, 8, 2498, 117, 2498, 2531, 1423, 0, (-349), 2320, 2498, 72, (-19), 656.997768633);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getGender();
      assertEquals("M", string0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Curriculum curriculum0 = new Curriculum(", complementaryHours=", (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-1285), (-1285), 1423, (-1285), 0, 0, 2353, 2531, 2498, 2498, linkedList0, linkedList0, linkedList0, linkedList0, linkedList0);
      Student student0 = new Student("", "", (String) null, (String) null, ", complementaryCredits=", (String) null, (String) null, (String) null, (String) null, "", (String) null, ", complementaryCredits=", studentStatus0, "", "", "{.5", (String) null, "!P%5l1VXh", "", "!P%5l1VXh", "{.5", "", curriculum0, 1423, 2498, 1423, 8, 2498, 8, 2498, 2531, 1423, 0, 0, 2353, 2498, (-1818), (-19), (-1818));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      studentCSV0.setCurriculumCode((String) null);
      assertNull(studentCSV0.getCurriculumCode());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Curriculum curriculum0 = new Curriculum("", "", (ArrayList<Integer>) null, (ArrayList<Integer>) null, arrayList0, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-928), (-928), (-928), (-928), (-928), (-928), (-928), (-928), (-928), (-928), linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      Student student0 = new Student("", "", "", "", "", "", "", "", "", "", "", "", studentStatus0, "", "", "", "", "", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "", "", curriculum0, (-928), (-928), (-928), 1, 972, (-928), 1, 853.261288014376, 0.0, (-928), (-928), (-928), (-1975), 0, (-928), (-928));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      studentCSV0.setFeasibility(1);
      assertEquals(1.0, studentCSV0.getFeasibility(), 0.01);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum("6$.U0[.xo", (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 2272, 0, 0, (-326), 2272, 0, 0, 0, (-1), (-2264), set0, set0, set0, (Collection<String>) null, set0);
      Student student0 = new Student("j66|", "j66|", "j66|", "6$.U0[.xo", "j66|", "j66|", "j66|", "6$.U0[.xo", "j66|", "j66|", "6$.U0[.xo", (String) null, studentStatus0, "j66|", "(ThT9", "(ThT9", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "6$.U0[.xo", (String) null, "j66|", (String) null, "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", curriculum0, (-2264), (-326), 32, 0, (-1), 0, 32, (-1), 0.0, (-2264), 307, (-1), 0, 1455, 0, 0.0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      RiskClass riskClass0 = RiskClass.INACCURATE;
      studentCSV0.setRiskClass(riskClass0);
      assertEquals(0, studentCSV0.getComplementaryCredits());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum("H^se^YyAKA", (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-2485), (-2485), (-2485), (-2485), (-2485), (-2485), (-219), (-2485), (-219), 0, set0, set0, set0, set0, set0);
      Student student0 = new Student("H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "", "", "", "", studentStatus0, "b", "H^se^YyAKA", (String) null, "", "H^se^YyAKA", "", "H^se^YyAKA", "!Ucn1f.^C", (String) null, curriculum0, 1200, (-219), 38, (-2485), (-219), (-219), 1200, 38, (-219), 38, (-1947), 38, (-219), 0, (-219), 0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getName();
      assertEquals("H^se^YyAKA", string0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Vector<String> vector0 = new Vector<String>();
      Curriculum curriculum0 = new Curriculum("<G", "DQw9a", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 58, 2158, 58, 2158, 58, 2158, 58, 58, 2158, 58, vector0, treeSet0, vector0, vector0, treeSet0);
      Student student0 = new Student("<G", "<G", "<G", "<G", "@yj`$uBY6h*BQfD", "@yj`$uBY6h*BQfD", "@yj`$uBY6h*BQfD", "<G", "<G", "@yj`$uBY6h*BQfD", "<G", "<G", studentStatus0, "DQw9a", "@yj`$uBY6h*BQfD", "~vwsDnsR[w", "", "Jk}mb>t7+K9(oP6e=E", "Jk}mb>t7+K9(oP6e=E", "~vwsDnsR[w", "", "DQw9a", curriculum0, 58, 2054, 58, 2054, 58, 2158, 2158, 58, 2054, 58, 2158, 58, 58, 2054, 2158, 2158);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      studentCSV0.setGpa(58);
      assertEquals(58.0, studentCSV0.getGpa(), 0.01);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Locale locale0 = Locale.ENGLISH;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      Curriculum curriculum0 = new Curriculum("", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-261), (-1), (-261), (-1), (-261), (-1), (-261), (-261), (-1), (-1364), set0, set0, set0, set0, set0);
      Student student0 = new Student("", "", "Z,1bg-z!'Ep", "", "i_", "Z,1bg-z!'Ep", "i_", "", "", "", "", "", studentStatus0, "i_", "Key '%s' not present in map", "", "", "Z,1bg-z!'Ep", "", "", "", "i_", curriculum0, 0, (-1364), 1, (-1), (-1), 503, (-261), (-261), 503, (-261), 1096, (-1364), 1230, 583, 0, (-1739.86));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      // Undeclared exception!
      try { 
        studentCSV0.compareTo((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum("H^se^YyAKA", (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-2485), (-2485), (-2485), (-2485), (-2485), (-2485), (-219), (-2485), (-219), 0, set0, set0, set0, set0, set0);
      Student student0 = new Student("H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "H^se^YyAKA", "", "", "", "", studentStatus0, "b", "H^se^YyAKA", (String) null, "", "H^se^YyAKA", "", "H^se^YyAKA", "!Ucn1f.^C", (String) null, curriculum0, 1200, (-219), 38, (-2485), (-219), (-219), 1200, 38, (-219), 38, (-1947), 38, (-219), 0, (-219), 0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      studentCSV0.setAdmissionType("");
      assertEquals(RiskClass.NOT_APPLICABLE, studentCSV0.getRiskClass());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Curriculum curriculum0 = new Curriculum(", complementaryHours=", (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-1285), (-1285), 1423, (-1285), 0, 0, 2353, 2531, 2498, 2498, linkedList0, linkedList0, linkedList0, linkedList0, linkedList0);
      Student student0 = new Student("", "", (String) null, (String) null, ", complementaryCredits=", (String) null, (String) null, (String) null, (String) null, "", (String) null, ", complementaryCredits=", studentStatus0, "", "", "{.5", (String) null, "!P%5l1VXh", "", "!P%5l1VXh", "{.5", "", curriculum0, 1423, 2498, 1423, 8, 2498, 8, 2498, 2531, 1423, 0, 0, 2353, 2498, (-1818), (-19), (-1818));
      StudentCSV studentCSV0 = new StudentCSV(student0);
      int int0 = studentCSV0.computeCompletedCredits();
      assertEquals(8, studentCSV0.getComplementaryCredits());
      assertEquals(2514, int0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.IGNORE_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) stack0, (Collection<String>) treeSet0, locale_FilteringMode0);
      Curriculum curriculum0 = new Curriculum("O", "", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 8, 8, 8, 8, 8, 8, 8, 8, (-2748), 8, list0, treeSet0, list0, list0, treeSet0);
      Student student0 = new Student("O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", "O", studentStatus0, "O", "O", "~vwsDnsR[w", "~vwsDnsR[w", "~vwsDnsR[w", "~vwsDnsR[w", "~vwsDnsR[w", "~vwsDnsR[w", "O", curriculum0, (-1), (-2748), 8, (-2748), (-1), (-2748), 8, 8, (-2748), 8, 3, (-2748), 8, 8, 8, 8);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      CostClass costClass0 = CostClass.INACCURATE;
      studentCSV0.setCostClass(costClass0);
      assertEquals((-2748), studentCSV0.getMandatoryCredits());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum("6$.U0[.xo", (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 2272, 0, 0, (-326), 2272, 0, 0, 0, (-1), (-2264), set0, set0, set0, (Collection<String>) null, set0);
      Student student0 = new Student("j66|", "j66|", "j66|", "6$.U0[.xo", "j66|", "j66|", "j66|", "6$.U0[.xo", "j66|", "j66|", "6$.U0[.xo", (String) null, studentStatus0, "j66|", "(ThT9", "(ThT9", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "6$.U0[.xo", (String) null, "j66|", (String) null, "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", curriculum0, (-2264), (-326), 32, 0, (-1), 0, 32, (-1), 0.0, (-2264), 307, (-1), 0, 1455, 0, 0.0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      double double0 = studentCSV0.getMc();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Curriculum curriculum0 = new Curriculum("", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, (-1), (-1), (-1), (-1), (-1), (-1), 8232, 971, 8232, (-1), treeSet0, treeSet0, treeSet0, treeSet0, treeSet0);
      Student student0 = new Student("", "", "", "YWKsF-|", "YWKsF-|", "", "YWKsF-|", "YWKsF-|", "YWKsF-|", "x7\"=I Ikv", "YWKsF-|", "x7\"=I Ikv", studentStatus0, "x7\"=I Ikv", "", "YWKsF-|", "x7\"=I Ikv", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "", "", "x7\"=I Ikv", "YWKsF-|", curriculum0, (-1), 8232, (-1), 12, (-1), (-1), 0, 12, (-1), 971, (-1), 0, (-1208), (-1), 0, 0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      studentCSV0.setComplementaryCredits(0);
      assertEquals(8244, studentCSV0.computeCompletedCredits());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      HashSet<String> hashSet0 = new HashSet<String>();
      Curriculum curriculum0 = new Curriculum("8&8e:NDa=vhQ8Tq", "D", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, (-509), 2044, (-509), 2044, 2044, 434, 2044, 434, (-509), 2044, linkedList0, linkedList0, linkedList0, hashSet0, hashSet0);
      Student student0 = new Student("`vA<T&;`yNOv(", "`vA<T&;`yNOv(", "`vA<T&;`yNOv(", "8&8e:NDa=vhQ8Tq", "`vA<T&;`yNOv(", "`vA<T&;`yNOv(", "`vA<T&;`yNOv(", "8&8e:NDa=vhQ8Tq", "`vA<T&;`yNOv(", "`vA<T&;`yNOv(", "8&8e:NDa=vhQ8Tq", "#2Ll", studentStatus0, "D", "`vA<T&;`yNOv(", "#2Ll", "#2Ll", "`vA<T&;`yNOv(", "`vA<T&;`yNOv(", "`vA<T&;`yNOv(", "8&8e:NDa=vhQ8Tq", "`vA<T&;`yNOv(", curriculum0, 1, (-509), 2044, 2044, 2044, 25, (-509), 25, 354.895552755, 25, 1, 1, 434, 1, 2044, 1);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      String string0 = studentCSV0.getAdmissionTerm();
      assertEquals("#2Ll", string0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum("6$.U0[.xo", (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 2272, 0, 0, (-326), 2272, 0, 0, 0, (-1), (-2264), set0, set0, set0, (Collection<String>) null, set0);
      Student student0 = new Student("j66|", "j66|", "j66|", "6$.U0[.xo", "j66|", "j66|", "j66|", "6$.U0[.xo", "j66|", "j66|", "6$.U0[.xo", (String) null, studentStatus0, "j66|", "(ThT9", "(ThT9", "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", "6$.U0[.xo", (String) null, "j66|", (String) null, "br.edu.ufcg.computacao.eureca.backend.api.http.response.students.StudentCSV", curriculum0, (-2264), (-326), 32, 0, (-1), 0, 32, (-1), 0.0, (-2264), 307, (-1), 0, 1455, 0, 0.0);
      StudentCSV studentCSV0 = new StudentCSV(student0);
      studentCSV0.setAverageLoad(1455);
      assertEquals(1455.0, studentCSV0.getAverageLoad(), 0.01);
  }
}
