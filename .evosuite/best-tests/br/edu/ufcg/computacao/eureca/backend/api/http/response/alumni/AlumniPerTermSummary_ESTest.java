/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 05 23:52:09 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.api.http.response.alumni;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.alumni.AlumniPerTermSummary;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AlumniPerTermSummary_ESTest extends AlumniPerTermSummary_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary((String) null, (-1515), (-1515), (-1515), 0.0);
      alumniPerTermSummary0.getTerm();
      assertEquals(0.0, alumniPerTermSummary0.getAverageCost(), 0.01);
      assertEquals((-1515.0), alumniPerTermSummary0.getAverageGpa(), 0.01);
      assertEquals((-1515.0), alumniPerTermSummary0.getAverageTerms(), 0.01);
      assertEquals((-1515), alumniPerTermSummary0.getAlumniCount());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("", 1, (-302.9295343), (-803.92), 1);
      alumniPerTermSummary0.getTerm();
      assertEquals((-803.92), alumniPerTermSummary0.getAverageTerms(), 0.01);
      assertEquals(1, alumniPerTermSummary0.getAlumniCount());
      assertEquals(1.0, alumniPerTermSummary0.getAverageCost(), 0.01);
      assertEquals((-302.9295343), alumniPerTermSummary0.getAverageGpa(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary((String) null, (-1515), (-1515), (-1515), 0.0);
      alumniPerTermSummary0.setGraduationTerm("VZ&Gt8\"=[Uq+lYX");
      alumniPerTermSummary0.getGraduationTerm();
      assertEquals((-1515), alumniPerTermSummary0.getAlumniCount());
      assertEquals(0.0, alumniPerTermSummary0.getAverageCost(), 0.01);
      assertEquals((-1515.0), alumniPerTermSummary0.getAverageTerms(), 0.01);
      assertEquals((-1515.0), alumniPerTermSummary0.getAverageGpa(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("", 3567, 3567, 3567, 3567);
      alumniPerTermSummary0.getGraduationTerm();
      assertEquals(3567.0, alumniPerTermSummary0.getAverageTerms(), 0.01);
      assertEquals(3567.0, alumniPerTermSummary0.getAverageGpa(), 0.01);
      assertEquals(3567.0, alumniPerTermSummary0.getAverageCost(), 0.01);
      assertEquals(3567, alumniPerTermSummary0.getAlumniCount());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("xU\".<fas", 0, 0, 0, (-1.0));
      double double0 = alumniPerTermSummary0.getAverageTerms();
      assertEquals(0, alumniPerTermSummary0.getAlumniCount());
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, alumniPerTermSummary0.getAverageGpa(), 0.01);
      assertEquals((-1.0), alumniPerTermSummary0.getAverageCost(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("", 3567, 3567, 3567, 3567);
      double double0 = alumniPerTermSummary0.getAverageTerms();
      assertEquals(3567, alumniPerTermSummary0.getAlumniCount());
      assertEquals(3567.0, alumniPerTermSummary0.getAverageCost(), 0.01);
      assertEquals(3567.0, alumniPerTermSummary0.getAverageGpa(), 0.01);
      assertEquals(3567.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("+2]Q5k7P*L&Ed", 1, 0.0, 0.0, 0.0);
      double double0 = alumniPerTermSummary0.getAverageGpa();
      assertEquals(0.0, double0, 0.01);
      assertEquals(1, alumniPerTermSummary0.getAlumniCount());
      assertEquals(0.0, alumniPerTermSummary0.getAverageTerms(), 0.01);
      assertEquals(0.0, alumniPerTermSummary0.getAverageCost(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("xV3@ a -", (-1), 674.134204, 1.0, 0.0);
      double double0 = alumniPerTermSummary0.getAverageGpa();
      assertEquals(0.0, alumniPerTermSummary0.getAverageCost(), 0.01);
      assertEquals((-1), alumniPerTermSummary0.getAlumniCount());
      assertEquals(674.134204, double0, 0.01);
      assertEquals(1.0, alumniPerTermSummary0.getAverageTerms(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("", 0, 0, 1168.3777005, 0);
      double double0 = alumniPerTermSummary0.getAverageCost();
      assertEquals(0.0, alumniPerTermSummary0.getAverageGpa(), 0.01);
      assertEquals(0, alumniPerTermSummary0.getAlumniCount());
      assertEquals(1168.3777005, alumniPerTermSummary0.getAverageTerms(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("I", (-53), 1.0, (-53), 1.0);
      double double0 = alumniPerTermSummary0.getAverageCost();
      assertEquals((-53), alumniPerTermSummary0.getAlumniCount());
      assertEquals(1.0, double0, 0.01);
      assertEquals((-53.0), alumniPerTermSummary0.getAverageTerms(), 0.01);
      assertEquals(1.0, alumniPerTermSummary0.getAverageGpa(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("xU\".<fas", 0, 0, 0, (-1.0));
      int int0 = alumniPerTermSummary0.getAlumniCount();
      assertEquals((-1.0), alumniPerTermSummary0.getAverageCost(), 0.01);
      assertEquals(0, int0);
      assertEquals(0.0, alumniPerTermSummary0.getAverageTerms(), 0.01);
      assertEquals(0.0, alumniPerTermSummary0.getAverageGpa(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("xU\".<fas", 0, 0, 0, (-1.0));
      alumniPerTermSummary0.compareTo(alumniPerTermSummary0);
      assertEquals(0.0, alumniPerTermSummary0.getAverageGpa(), 0.01);
      assertEquals(0.0, alumniPerTermSummary0.getAverageTerms(), 0.01);
      assertEquals(0, alumniPerTermSummary0.getAlumniCount());
      assertEquals((-1.0), alumniPerTermSummary0.getAverageCost(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("", 1, (-302.9295343), (-803.92), 1);
      alumniPerTermSummary0.setGraduationTerm("y'+O1N)]Vw");
      AlumniPerTermSummary alumniPerTermSummary1 = new AlumniPerTermSummary(",?6R|8SH(:wFo\"", 0, (-3388.6339191), (-3388.6339191), 0.0);
      int int0 = alumniPerTermSummary0.compareTo(alumniPerTermSummary1);
      assertEquals(77, int0);
      assertEquals((-803.92), alumniPerTermSummary0.getAverageTerms(), 0.01);
      assertEquals((-302.9295343), alumniPerTermSummary0.getAverageGpa(), 0.01);
      assertEquals(0.0, alumniPerTermSummary1.getAverageCost(), 0.01);
      assertEquals(1, alumniPerTermSummary0.getAlumniCount());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("br.edu.ufcg.computacao.eureca.backend.api.http.response.alumni.AlumniPerTermSummary", (-2579), (-208.89423033), (-2579), 1868.6664343102);
      alumniPerTermSummary0.setGraduationTerm("");
      AlumniPerTermSummary alumniPerTermSummary1 = new AlumniPerTermSummary("4iwZYX8PKe", 1, 2473.730893461752, 2473.730893461752, (-78.17730452738068));
      int int0 = alumniPerTermSummary0.compareTo(alumniPerTermSummary1);
      assertEquals((-2579.0), alumniPerTermSummary0.getAverageTerms(), 0.01);
      assertEquals(1, alumniPerTermSummary1.getAlumniCount());
      assertEquals((-208.89423033), alumniPerTermSummary0.getAverageGpa(), 0.01);
      assertEquals((-10), int0);
      assertEquals((-78.17730452738068), alumniPerTermSummary1.getAverageCost(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary((String) null, (-1515), (-1515), (-1515), 0.0);
      // Undeclared exception!
      try { 
        alumniPerTermSummary0.compareTo(alumniPerTermSummary0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.api.http.response.alumni.AlumniPerTermSummary", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary((String) null, (-1515), (-1515), (-1515), 0.0);
      alumniPerTermSummary0.getGraduationTerm();
      assertEquals((-1515.0), alumniPerTermSummary0.getAverageGpa(), 0.01);
      assertEquals((-1515.0), alumniPerTermSummary0.getAverageTerms(), 0.01);
      assertEquals((-1515), alumniPerTermSummary0.getAlumniCount());
      assertEquals(0.0, alumniPerTermSummary0.getAverageCost(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary((String) null, (-1515), (-1515), (-1515), 0.0);
      alumniPerTermSummary0.setAlumniCount(1840);
      int int0 = alumniPerTermSummary0.getAlumniCount();
      assertEquals(1840, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary((String) null, (-1515), (-1515), (-1515), 0.0);
      int int0 = alumniPerTermSummary0.getAlumniCount();
      assertEquals((-1515), int0);
      assertEquals(0.0, alumniPerTermSummary0.getAverageCost(), 0.01);
      assertEquals((-1515.0), alumniPerTermSummary0.getAverageTerms(), 0.01);
      assertEquals((-1515.0), alumniPerTermSummary0.getAverageGpa(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("", 0, (-1669.420992025), (-1669.420992025), (-1669.420992025));
      double double0 = alumniPerTermSummary0.getAverageCost();
      assertEquals(0, alumniPerTermSummary0.getAlumniCount());
      assertEquals((-1669.420992025), double0, 0.01);
      assertEquals((-1669.420992025), alumniPerTermSummary0.getAverageGpa(), 0.01);
      assertEquals((-1669.420992025), alumniPerTermSummary0.getAverageTerms(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary((String) null, (-1515), (-1515), (-1515), 0.0);
      alumniPerTermSummary0.setAverageTerms((-1515));
      assertEquals((-1515), alumniPerTermSummary0.getAlumniCount());
      assertEquals((-1515.0), alumniPerTermSummary0.getAverageGpa(), 0.01);
      assertEquals((-1515.0), alumniPerTermSummary0.getAverageTerms(), 0.01);
      assertEquals(0.0, alumniPerTermSummary0.getAverageCost(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary((String) null, (-1515), (-1515), (-1515), 0.0);
      double double0 = alumniPerTermSummary0.getAverageGpa();
      assertEquals((-1515), alumniPerTermSummary0.getAlumniCount());
      assertEquals((-1515.0), double0, 0.01);
      assertEquals((-1515.0), alumniPerTermSummary0.getAverageTerms(), 0.01);
      assertEquals(0.0, alumniPerTermSummary0.getAverageCost(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("", 0, (-1669.420992025), (-1669.420992025), (-1669.420992025));
      // Undeclared exception!
      try { 
        alumniPerTermSummary0.compareTo("_klEUcf\"&HNF");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to br.edu.ufcg.computacao.eureca.backend.api.http.response.alumni.AlumniPerTermSummary
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.api.http.response.alumni.AlumniPerTermSummary", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("", 0, (-1669.420992025), (-1669.420992025), (-1669.420992025));
      alumniPerTermSummary0.setAverageGpa(0.0);
      assertEquals(0.0, alumniPerTermSummary0.getAverageGpa(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("", 0, (-1669.420992025), (-1669.420992025), (-1669.420992025));
      alumniPerTermSummary0.setAverageCost((-1669.420992025));
      assertEquals((-1669.420992025), alumniPerTermSummary0.getAverageTerms(), 0.01);
      assertEquals(0, alumniPerTermSummary0.getAlumniCount());
      assertEquals((-1669.420992025), alumniPerTermSummary0.getAverageGpa(), 0.01);
      assertEquals((-1669.420992025), alumniPerTermSummary0.getAverageCost(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("vyku0=YD33zOp", 205, 205, 0.0, (-489.5878036));
      alumniPerTermSummary0.getTerm();
      assertEquals(0.0, alumniPerTermSummary0.getAverageTerms(), 0.01);
      assertEquals(205, alumniPerTermSummary0.getAlumniCount());
      assertEquals((-489.5878036), alumniPerTermSummary0.getAverageCost(), 0.01);
      assertEquals(205.0, alumniPerTermSummary0.getAverageGpa(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      AlumniPerTermSummary alumniPerTermSummary0 = new AlumniPerTermSummary("", 0, (-1669.420992025), (-1669.420992025), (-1669.420992025));
      double double0 = alumniPerTermSummary0.getAverageTerms();
      assertEquals((-1669.420992025), alumniPerTermSummary0.getAverageCost(), 0.01);
      assertEquals((-1669.420992025), double0, 0.01);
      assertEquals(0, alumniPerTermSummary0.getAlumniCount());
      assertEquals((-1669.420992025), alumniPerTermSummary0.getAverageGpa(), 0.01);
  }
}
