/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 05 23:20:30 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.api.http.response.subject;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.subject.SubjectMetricsStatistics;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.subject.SubjectsStatisticsSummary;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SubjectsStatisticsSummary_ESTest extends SubjectsStatisticsSummary_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SubjectMetricsStatistics subjectMetricsStatistics0 = mock(SubjectMetricsStatistics.class, new ViolatedAssumptionAnswer());
      SubjectsStatisticsSummary subjectsStatisticsSummary0 = new SubjectsStatisticsSummary((String) null, (String) null, 1564.739381146573, subjectMetricsStatistics0);
      subjectsStatisticsSummary0.getTo();
      assertEquals(1564.739381146573, subjectsStatisticsSummary0.getSubjectsCount(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SubjectMetricsStatistics subjectMetricsStatistics0 = mock(SubjectMetricsStatistics.class, new ViolatedAssumptionAnswer());
      SubjectsStatisticsSummary subjectsStatisticsSummary0 = new SubjectsStatisticsSummary("", "", (-2589.0982968), subjectMetricsStatistics0);
      subjectsStatisticsSummary0.setTo("0");
      subjectsStatisticsSummary0.getTo();
      assertEquals((-2589.0982968), subjectsStatisticsSummary0.getSubjectsCount(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SubjectMetricsStatistics subjectMetricsStatistics0 = mock(SubjectMetricsStatistics.class, new ViolatedAssumptionAnswer());
      SubjectsStatisticsSummary subjectsStatisticsSummary0 = new SubjectsStatisticsSummary("", "", 0.0, subjectMetricsStatistics0);
      double double0 = subjectsStatisticsSummary0.getSubjectsCount();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SubjectsStatisticsSummary subjectsStatisticsSummary0 = new SubjectsStatisticsSummary("g |PkGMw", "g |PkGMw", 1.0, (SubjectMetricsStatistics) null);
      assertEquals(1.0, subjectsStatisticsSummary0.getSubjectsCount(), 0.01);
      
      subjectsStatisticsSummary0.setSubjectsCount((-1.0));
      double double0 = subjectsStatisticsSummary0.getSubjectsCount();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SubjectsStatisticsSummary subjectsStatisticsSummary0 = new SubjectsStatisticsSummary("g |PkGMw", "g |PkGMw", 1.0, (SubjectMetricsStatistics) null);
      subjectsStatisticsSummary0.getSubjectMetricsStatistics();
      assertEquals(1.0, subjectsStatisticsSummary0.getSubjectsCount(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SubjectsStatisticsSummary subjectsStatisticsSummary0 = new SubjectsStatisticsSummary("g |PkGMw", "g |PkGMw", 1.0, (SubjectMetricsStatistics) null);
      subjectsStatisticsSummary0.getFrom();
      assertEquals(1.0, subjectsStatisticsSummary0.getSubjectsCount(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SubjectsStatisticsSummary subjectsStatisticsSummary0 = new SubjectsStatisticsSummary("g |PkGMw", "g |PkGMw", 1.0, (SubjectMetricsStatistics) null);
      subjectsStatisticsSummary0.setFrom((String) null);
      subjectsStatisticsSummary0.getFrom();
      assertEquals(1.0, subjectsStatisticsSummary0.getSubjectsCount(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SubjectsStatisticsSummary subjectsStatisticsSummary0 = new SubjectsStatisticsSummary("g |PkGMw", "g |PkGMw", 1.0, (SubjectMetricsStatistics) null);
      double double0 = subjectsStatisticsSummary0.getSubjectsCount();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SubjectMetricsStatistics subjectMetricsStatistics0 = mock(SubjectMetricsStatistics.class, new ViolatedAssumptionAnswer());
      SubjectsStatisticsSummary subjectsStatisticsSummary0 = new SubjectsStatisticsSummary("", "", (-2589.0982968), subjectMetricsStatistics0);
      SubjectMetricsStatistics subjectMetricsStatistics1 = mock(SubjectMetricsStatistics.class, new ViolatedAssumptionAnswer());
      subjectsStatisticsSummary0.setSubjectMetricsStatistics(subjectMetricsStatistics1);
      assertEquals((-2589.0982968), subjectsStatisticsSummary0.getSubjectsCount(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SubjectMetricsStatistics subjectMetricsStatistics0 = mock(SubjectMetricsStatistics.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(subjectMetricsStatistics0).toString();
      SubjectsStatisticsSummary subjectsStatisticsSummary0 = new SubjectsStatisticsSummary("", "", (-2589.0982968), subjectMetricsStatistics0);
      subjectsStatisticsSummary0.getSubjectMetricsStatistics();
      assertEquals((-2589.0982968), subjectsStatisticsSummary0.getSubjectsCount(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SubjectMetricsStatistics subjectMetricsStatistics0 = mock(SubjectMetricsStatistics.class, new ViolatedAssumptionAnswer());
      SubjectsStatisticsSummary subjectsStatisticsSummary0 = new SubjectsStatisticsSummary("", "", (-2589.0982968), subjectMetricsStatistics0);
      subjectsStatisticsSummary0.getTo();
      assertEquals((-2589.0982968), subjectsStatisticsSummary0.getSubjectsCount(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SubjectMetricsStatistics subjectMetricsStatistics0 = mock(SubjectMetricsStatistics.class, new ViolatedAssumptionAnswer());
      SubjectsStatisticsSummary subjectsStatisticsSummary0 = new SubjectsStatisticsSummary("", "", (-2589.0982968), subjectMetricsStatistics0);
      subjectsStatisticsSummary0.getFrom();
      assertEquals((-2589.0982968), subjectsStatisticsSummary0.getSubjectsCount(), 0.01);
  }
}
