/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 05 23:31:42 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.api.http.response.teacher;

import org.junit.Test;
import static org.junit.Assert.*;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.teacher.TeacherStatisticsSummary;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TeacherStatisticsSummary_ESTest extends TeacherStatisticsSummary_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(908, 908, 908, 4536.58412524976, 788.780327038407, (-434.482557280845), 2688.8533634, (-434.482557280845), 2688.8533634, 1.0, 350.8396);
      int int0 = teacherStatisticsSummary0.getTotalEnrolled();
      assertEquals(908, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals((-434.482557280845), teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(788.780327038407, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(2688.8533634, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(908, teacherStatisticsSummary0.getClassesCount());
      assertEquals(908, int0);
      assertEquals(4536.58412524976, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals((-434.482557280845), teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(2688.8533634, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(350.8396, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary((-575), (-575), 0, 1.0, (-575), 0, (-16.11235065), 0, 0.0, 0.0, (-575));
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      
      teacherStatisticsSummary0.setTotalEnrolled((-575));
      int int0 = teacherStatisticsSummary0.getTotalEnrolled();
      assertEquals((-575), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(129, 0, 0, 0.0, 0.0, 0.0, 803.2643490008, 0, 0, 0.0, 0.0);
      double double0 = teacherStatisticsSummary0.getSuspendedRate();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(803.2643490008, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(129, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(0, 1, 1, 1, (-1.0), 345.742883, 4521.0, 0.0, (-526.751778039194), (-3306.7434308134507), (-1.0));
      assertEquals((-1.0), teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      
      teacherStatisticsSummary0.setSuspendedRate(1.0);
      double double0 = teacherStatisticsSummary0.getSuspendedRate();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(1960, (-1263), (-990), 1960, (-990), (-990), (-1.0), 1960, 1571.4215178252273, 1960, 2796.636609443625);
      double double0 = teacherStatisticsSummary0.getSucceededRate();
      assertEquals(1960.0, double0, 0.01);
      assertEquals(1960, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(2796.636609443625, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals((-990.0), teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals((-990.0), teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals((-1.0), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(1571.4215178252273, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(1960.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals((-990), teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals((-1263), teacherStatisticsSummary0.getClassesCount());
      assertEquals(1960.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(0, 0, 0, 0.0, 1917.0, 0.0, 1917.0, 0.0, (-1.0), 0, (-1.0));
      int int0 = teacherStatisticsSummary0.getSubjectsCount();
      assertEquals((-1.0), teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(0, int0);
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(1917.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals((-1.0), teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(1917.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(1113, 0, 0, 0.0, 0, 0.0, 1.0, (-142.90992307), (-3469.6416359962), (-624.146042), 1061.7166321879);
      int int0 = teacherStatisticsSummary0.getSubjectsCount();
      assertEquals(1.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(1113, int0);
      assertEquals((-3469.6416359962), teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(1061.7166321879, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals((-142.90992307), teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals((-624.146042), teacherStatisticsSummary0.getExemptedRate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(1, 1, 0, 0.0, 0, 1, 1.0, 0.0, 1, 0.0, 0.0);
      double double0 = teacherStatisticsSummary0.getOngoingRate();
      assertEquals(0.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(1, teacherStatisticsSummary0.getClassesCount());
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(1, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(1.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(1.0, double0, 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary((-575), (-575), 0, 1.0, (-575), 0, (-16.11235065), 0, 0.0, 0.0, (-575));
      assertEquals(0.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      
      teacherStatisticsSummary0.setOngoingRate((-575));
      double double0 = teacherStatisticsSummary0.getOngoingRate();
      assertEquals((-575.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(1113, 0, 0, 0.0, 0, 0.0, 1.0, (-142.90992307), (-3469.6416359962), (-624.146042), 1061.7166321879);
      teacherStatisticsSummary0.setFailedDueToGradeRate(1113);
      double double0 = teacherStatisticsSummary0.getFailedDueToGradeRate();
      assertEquals(1113.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary((-174), (-199), (-199), (-1176.7173293131), 1.0, (-199), (-199), (-1176.7173293131), 140.723, 0.0, 0.0);
      double double0 = teacherStatisticsSummary0.getFailedDueToGradeRate();
      assertEquals((-199), teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals((-174), teacherStatisticsSummary0.getSubjectsCount());
      assertEquals((-1176.7173293131), teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals((-199), teacherStatisticsSummary0.getClassesCount());
      assertEquals((-199.0), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals((-1176.7173293131), teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals((-199.0), double0, 0.01);
      assertEquals(140.723, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary((-575), (-575), 0, 1.0, (-575), 0, (-16.11235065), 0, 0.0, 0.0, (-575));
      assertEquals((-575.0), teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      
      teacherStatisticsSummary0.setFailedDueToAbsencesRate(0);
      double double0 = teacherStatisticsSummary0.getFailedDueToAbsencesRate();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary((-584), (-584), (-584), (-1076.514333), (-584), 979.851724264, (-584), 1.0, 1.0, (-1658.5339121), 1.0);
      teacherStatisticsSummary0.setFailedDueToAbsencesRate(864.532183547446);
      double double0 = teacherStatisticsSummary0.getFailedDueToAbsencesRate();
      assertEquals(864.532183547446, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(0, 0, 2947, 2947, 0, 0, 0, (-3364.1431850835), 0, 2947, (-3364.1431850835));
      double double0 = teacherStatisticsSummary0.getExemptedRate();
      assertEquals(0.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals((-3364.1431850835), teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals((-3364.1431850835), teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(2947.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(2947, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(0.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(2947.0, double0, 0.01);
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(0, 1, 1, 1, (-1.0), 345.742883, 4521.0, 0.0, (-526.751778039194), (-3306.7434308134507), (-1.0));
      double double0 = teacherStatisticsSummary0.getExemptedRate();
      assertEquals((-526.751778039194), teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(1, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals((-1.0), teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(1, teacherStatisticsSummary0.getClassesCount());
      assertEquals((-1.0), teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(345.742883, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(4521.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals((-3306.7434308134507), double0, 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(1113, 0, 0, 0.0, 0, 0.0, 1.0, (-142.90992307), (-3469.6416359962), (-624.146042), 1061.7166321879);
      int int0 = teacherStatisticsSummary0.getClassesCount();
      assertEquals((-624.146042), teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(1.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals((-3469.6416359962), teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(1061.7166321879, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals((-142.90992307), teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(1113, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(0, int0);
      assertEquals(0.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary((-575), (-575), 0, 1.0, (-575), 0, (-16.11235065), 0, 0.0, 0.0, (-575));
      int int0 = teacherStatisticsSummary0.getClassesCount();
      assertEquals((-16.11235065), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals((-575.0), teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals((-575), teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals((-575.0), teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals((-575), int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(0, (-3270), 1, 0, (-3270), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0);
      double double0 = teacherStatisticsSummary0.getCancelledRate();
      assertEquals(1.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals((-3270.0), teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(1.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals((-3270), teacherStatisticsSummary0.getClassesCount());
      assertEquals(1, teacherStatisticsSummary0.getTotalEnrolled());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary((-279), (-279), (-279), (-279), (-279), 0.0, (-80.0), (-279), (-80.0), (-279), 0.0);
      double double0 = teacherStatisticsSummary0.getCancelledRate();
      assertEquals((-279), teacherStatisticsSummary0.getClassesCount());
      assertEquals(0.0, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals((-279.0), teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals((-279), teacherStatisticsSummary0.getSubjectsCount());
      assertEquals((-80.0), teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals((-80.0), double0, 0.01);
      assertEquals((-279.0), teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals((-279.0), teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals((-279.0), teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals((-279), teacherStatisticsSummary0.getTotalEnrolled());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(410, (-1324), (-1518), 410, 410, 0.0, (-606.713748147), 0.0, 0.0, 515.20300083, (-1324));
      double double0 = teacherStatisticsSummary0.getAverageEnrollmentsPerClass();
      assertEquals((-606.713748147), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals((-1324), teacherStatisticsSummary0.getClassesCount());
      assertEquals(410.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals((-1518), teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(410, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(410.0, double0, 0.01);
      assertEquals(515.20300083, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals((-1324.0), teacherStatisticsSummary0.getSuspendedRate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary((-1), 0, 0, (-150.1074660468), 0, (-3443.033), (-1), 0, (-1271.7968797116537), 1282.027719, (-361.159024));
      double double0 = teacherStatisticsSummary0.getAverageEnrollmentsPerClass();
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals((-3443.033), teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals((-1), teacherStatisticsSummary0.getSubjectsCount());
      assertEquals((-1271.7968797116537), teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals((-150.1074660468), double0, 0.01);
      assertEquals(1282.027719, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals((-361.159024), teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(0.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals((-1.0), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary((-575), (-575), 0, 1.0, (-575), 0, (-16.11235065), 0, 0.0, 0.0, (-575));
      double double0 = teacherStatisticsSummary0.getExemptedRate();
      assertEquals(1.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals((-575), teacherStatisticsSummary0.getClassesCount());
      assertEquals((-575.0), teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals((-575), teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(0.0, double0, 0.01);
      assertEquals((-575.0), teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals((-16.11235065), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(0, 1, 1, 1, (-1.0), 345.742883, 4521.0, 0.0, (-526.751778039194), (-3306.7434308134507), (-1.0));
      double double0 = teacherStatisticsSummary0.getCancelledRate();
      assertEquals(1.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(345.742883, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals((-1.0), teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(1, teacherStatisticsSummary0.getClassesCount());
      assertEquals((-526.751778039194), teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(1, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(4521.0, double0, 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals((-1.0), teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals((-3306.7434308134507), teacherStatisticsSummary0.getExemptedRate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary((-575), (-575), 0, 1.0, (-575), 0, (-16.11235065), 0, 0.0, 0.0, (-575));
      int int0 = teacherStatisticsSummary0.getSubjectsCount();
      assertEquals((-575), teacherStatisticsSummary0.getClassesCount());
      assertEquals(0.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals((-575.0), teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals((-16.11235065), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals((-575.0), teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals((-575), int0);
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary((-575), (-575), 0, 1.0, (-575), 0, (-16.11235065), 0, 0.0, 0.0, (-575));
      double double0 = teacherStatisticsSummary0.getFailedDueToAbsencesRate();
      assertEquals((-16.11235065), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals((-575.0), teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals((-575.0), double0, 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals((-575), teacherStatisticsSummary0.getClassesCount());
      assertEquals(0.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals((-575), teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(1.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary((-575), (-575), 0, 1.0, (-575), 0, (-16.11235065), 0, 0.0, 0.0, (-575));
      double double0 = teacherStatisticsSummary0.getSucceededRate();
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals((-575.0), teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals((-575), teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(0.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals((-575), teacherStatisticsSummary0.getClassesCount());
      assertEquals(1.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals((-575.0), teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals((-16.11235065), teacherStatisticsSummary0.getCancelledRate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(0, 1, 1, 1, (-1.0), 345.742883, 4521.0, 0.0, (-526.751778039194), (-3306.7434308134507), (-1.0));
      teacherStatisticsSummary0.setClassesCount(1);
      assertEquals((-1.0), teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(1, teacherStatisticsSummary0.getClassesCount());
      assertEquals(0.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(4521.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(1, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals((-526.751778039194), teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals((-1.0), teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals((-3306.7434308134507), teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(345.742883, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary((-575), (-575), 0, 1.0, (-575), 0, (-16.11235065), 0, 0.0, 0.0, (-575));
      int int0 = teacherStatisticsSummary0.getTotalEnrolled();
      assertEquals((-575.0), teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals((-16.11235065), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0, int0);
      assertEquals((-575.0), teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals((-575), teacherStatisticsSummary0.getClassesCount());
      assertEquals((-575), teacherStatisticsSummary0.getSubjectsCount());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(0, 1, 1, 1, (-1.0), 345.742883, 4521.0, 0.0, (-526.751778039194), (-3306.7434308134507), (-1.0));
      int int0 = teacherStatisticsSummary0.getClassesCount();
      assertEquals(0.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(4521.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals((-1.0), teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(345.742883, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals((-3306.7434308134507), teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals((-1.0), teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(1, int0);
      assertEquals((-526.751778039194), teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(1, teacherStatisticsSummary0.getTotalEnrolled());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(0, 1, 1, 1, (-1.0), 345.742883, 4521.0, 0.0, (-526.751778039194), (-3306.7434308134507), (-1.0));
      teacherStatisticsSummary0.setExemptedRate((-914.836852691787));
      assertEquals((-914.836852691787), teacherStatisticsSummary0.getExemptedRate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(0, 1, 1, 1, (-1.0), 345.742883, 4521.0, 0.0, (-526.751778039194), (-3306.7434308134507), (-1.0));
      double double0 = teacherStatisticsSummary0.getSuspendedRate();
      assertEquals(345.742883, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals((-1.0), teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(1, teacherStatisticsSummary0.getClassesCount());
      assertEquals(0, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(4521.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals(1, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals((-526.751778039194), teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals((-1.0), double0, 0.01);
      assertEquals((-3306.7434308134507), teacherStatisticsSummary0.getExemptedRate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(1113, 0, 0, 0.0, 0, 0.0, 1.0, (-142.90992307), (-3469.6416359962), (-624.146042), 1061.7166321879);
      assertEquals(1.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      
      teacherStatisticsSummary0.setCancelledRate(0.0);
      assertEquals((-3469.6416359962), teacherStatisticsSummary0.getOngoingRate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary((-575), (-575), 0, 1.0, (-575), 0, (-16.11235065), 0, 0.0, 0.0, (-575));
      assertEquals(1.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      
      teacherStatisticsSummary0.setAverageEnrollmentsPerClass(0.0);
      assertEquals((-575), teacherStatisticsSummary0.getClassesCount());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(1113, 0, 0, 0.0, 0, 0.0, 1.0, (-142.90992307), (-3469.6416359962), (-624.146042), 1061.7166321879);
      double double0 = teacherStatisticsSummary0.getAverageEnrollmentsPerClass();
      assertEquals(0.0, double0, 0.01);
      assertEquals(1113, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals((-142.90992307), teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals((-3469.6416359962), teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(1061.7166321879, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals((-624.146042), teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary((-575), (-575), 0, 1.0, (-575), 0, (-16.11235065), 0, 0.0, 0.0, (-575));
      teacherStatisticsSummary0.setSucceededRate((-840.0522));
      double double0 = teacherStatisticsSummary0.getSucceededRate();
      assertEquals((-840.0522), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary(1113, 0, 0, 0.0, 0, 0.0, 1.0, (-142.90992307), (-3469.6416359962), (-624.146042), 1061.7166321879);
      double double0 = teacherStatisticsSummary0.getFailedDueToGradeRate();
      assertEquals(1061.7166321879, teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals(1.0, teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals((-624.146042), teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(0, teacherStatisticsSummary0.getClassesCount());
      assertEquals(1113, teacherStatisticsSummary0.getSubjectsCount());
      assertEquals((-142.90992307), teacherStatisticsSummary0.getSucceededRate(), 0.01);
      assertEquals((-3469.6416359962), teacherStatisticsSummary0.getOngoingRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary((-575), (-575), 0, 1.0, (-575), 0, (-16.11235065), 0, 0.0, 0.0, (-575));
      double double0 = teacherStatisticsSummary0.getOngoingRate();
      assertEquals((-575.0), teacherStatisticsSummary0.getSuspendedRate(), 0.01);
      assertEquals(0, teacherStatisticsSummary0.getTotalEnrolled());
      assertEquals(0.0, double0, 0.01);
      assertEquals((-575), teacherStatisticsSummary0.getClassesCount());
      assertEquals((-16.11235065), teacherStatisticsSummary0.getCancelledRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getFailedDueToGradeRate(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getExemptedRate(), 0.01);
      assertEquals((-575.0), teacherStatisticsSummary0.getFailedDueToAbsencesRate(), 0.01);
      assertEquals((-575), teacherStatisticsSummary0.getSubjectsCount());
      assertEquals(1.0, teacherStatisticsSummary0.getAverageEnrollmentsPerClass(), 0.01);
      assertEquals(0.0, teacherStatisticsSummary0.getSucceededRate(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      TeacherStatisticsSummary teacherStatisticsSummary0 = new TeacherStatisticsSummary((-575), (-575), 0, 1.0, (-575), 0, (-16.11235065), 0, 0.0, 0.0, (-575));
      teacherStatisticsSummary0.setSubjectsCount((-1));
      assertEquals((-1), teacherStatisticsSummary0.getSubjectsCount());
  }
}
