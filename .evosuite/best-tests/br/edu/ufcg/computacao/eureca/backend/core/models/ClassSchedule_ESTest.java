/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 05 22:17:54 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.core.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.edu.ufcg.computacao.eureca.backend.core.models.ClassSchedule;
import br.edu.ufcg.computacao.eureca.backend.core.models.WeekDay;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassSchedule_ESTest extends ClassSchedule_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      WeekDay weekDay0 = WeekDay.WEDNESDAY;
      ClassSchedule classSchedule0 = new ClassSchedule(weekDay0, "}4", "8rK<^ ^c3V0");
      classSchedule0.setWeekDay((WeekDay) null);
      classSchedule0.getWeekDay();
      assertEquals("}4", classSchedule0.getStartHour());
      assertEquals("8rK<^ ^c3V0", classSchedule0.getEndHour());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      WeekDay weekDay0 = WeekDay.THURSDAY;
      ClassSchedule classSchedule0 = new ClassSchedule(weekDay0, (String) null, "CKMDIa[)");
      String string0 = classSchedule0.getStartHour();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      WeekDay weekDay0 = WeekDay.SUNDAY;
      ClassSchedule classSchedule0 = new ClassSchedule(weekDay0, "6Bu(*'WV@hX", "6Bu(*'WV@hX");
      String string0 = classSchedule0.getStartHour();
      assertEquals("6Bu(*'WV@hX", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      WeekDay weekDay0 = WeekDay.TUESDAY;
      ClassSchedule classSchedule0 = new ClassSchedule(weekDay0, (String) null, (String) null);
      String string0 = classSchedule0.getEndHour();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      WeekDay weekDay0 = WeekDay.SUNDAY;
      ClassSchedule classSchedule0 = new ClassSchedule(weekDay0, "6Bu(*'WV@hX", "6Bu(*'WV@hX");
      String string0 = classSchedule0.getEndHour();
      assertEquals("6Bu(*'WV@hX", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      WeekDay weekDay0 = WeekDay.SUNDAY;
      ClassSchedule classSchedule0 = new ClassSchedule(weekDay0, (String) null, "Qua");
      ClassSchedule classSchedule1 = new ClassSchedule(weekDay0, "Qua", "");
      // Undeclared exception!
      try { 
        classSchedule0.equals(classSchedule1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      WeekDay weekDay0 = WeekDay.SUNDAY;
      ClassSchedule classSchedule0 = new ClassSchedule(weekDay0, "Sx", "Sy");
      ClassSchedule classSchedule1 = new ClassSchedule(weekDay0, "Sx", "Sy");
      assertEquals("Sy", classSchedule1.getEndHour());
      
      classSchedule1.setEndHour("Sx");
      boolean boolean0 = classSchedule0.equals(classSchedule1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      WeekDay weekDay0 = WeekDay.SUNDAY;
      ClassSchedule classSchedule0 = new ClassSchedule(weekDay0, "6Bu(*'WV@hX", "6Bu(*'WV@hX");
      ClassSchedule classSchedule1 = new ClassSchedule(weekDay0, "6Bu(*'WV@hX", "6Bu(*'WV@hX");
      boolean boolean0 = classSchedule0.equals(classSchedule1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      WeekDay weekDay0 = WeekDay.SATURDAY;
      ClassSchedule classSchedule0 = new ClassSchedule(weekDay0, "", "");
      WeekDay weekDay1 = WeekDay.WEDNESDAY;
      ClassSchedule classSchedule1 = new ClassSchedule(weekDay1, ".(^KBEvfMNppt_42M", "");
      boolean boolean0 = classSchedule0.equals(classSchedule1);
      assertEquals("", classSchedule1.getEndHour());
      assertEquals(".(^KBEvfMNppt_42M", classSchedule1.getStartHour());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      WeekDay weekDay0 = WeekDay.WEDNESDAY;
      ClassSchedule classSchedule0 = new ClassSchedule(weekDay0, "}4", "8rK<^ ^c3V0");
      boolean boolean0 = classSchedule0.equals("ClassSchedule{weekDay=null, startHour='}4', endHour='8rK<^ ^c3V0'}");
      assertEquals("8rK<^ ^c3V0", classSchedule0.getEndHour());
      assertFalse(boolean0);
      assertEquals("}4", classSchedule0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      WeekDay weekDay0 = WeekDay.MONDAY;
      ClassSchedule classSchedule0 = new ClassSchedule(weekDay0, "Jl", "Jl");
      boolean boolean0 = classSchedule0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      WeekDay weekDay0 = WeekDay.SUNDAY;
      ClassSchedule classSchedule0 = new ClassSchedule(weekDay0, "6Bu(*'WV@hX", "6Bu(*'WV@hX");
      boolean boolean0 = classSchedule0.equals(classSchedule0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      WeekDay weekDay0 = WeekDay.SATURDAY;
      ClassSchedule classSchedule0 = new ClassSchedule(weekDay0, "", "");
      ClassSchedule classSchedule1 = new ClassSchedule(weekDay0, ".(^KBEvfMNppt_42M", "");
      boolean boolean0 = classSchedule0.equals(classSchedule1);
      assertFalse(boolean0);
      assertEquals("", classSchedule1.getEndHour());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      WeekDay weekDay0 = WeekDay.SATURDAY;
      ClassSchedule classSchedule0 = new ClassSchedule(weekDay0, "", "");
      WeekDay weekDay1 = classSchedule0.getWeekDay();
      assertSame(weekDay0, weekDay1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      WeekDay weekDay0 = WeekDay.MONDAY;
      ClassSchedule classSchedule0 = new ClassSchedule(weekDay0, "Jl", "Jl");
      String string0 = classSchedule0.toString();
      assertEquals("ClassSchedule{weekDay=MONDAY, startHour='Jl', endHour='Jl'}", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      WeekDay weekDay0 = WeekDay.SATURDAY;
      ClassSchedule classSchedule0 = new ClassSchedule(weekDay0, "", "");
      String string0 = classSchedule0.getStartHour();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      WeekDay weekDay0 = WeekDay.SATURDAY;
      ClassSchedule classSchedule0 = new ClassSchedule(weekDay0, "", "");
      String string0 = classSchedule0.getEndHour();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      WeekDay weekDay0 = WeekDay.MONDAY;
      ClassSchedule classSchedule0 = new ClassSchedule(weekDay0, "Jl", "Jl");
      classSchedule0.setStartHour("Jl");
      assertEquals("Jl", classSchedule0.getEndHour());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      WeekDay weekDay0 = WeekDay.MONDAY;
      ClassSchedule classSchedule0 = new ClassSchedule(weekDay0, "Jl", "Jl");
      classSchedule0.hashCode();
  }
}
