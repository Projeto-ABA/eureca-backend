/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 05 23:34:26 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.api.http.response.preenrollment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.preenrollment.DemandCSVResponse;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.preenrollment.PreEnrollments;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.preenrollment.SubjectDemand;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.subject.SubjectDemandSummary;
import java.util.Collection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DemandCSVResponse_ESTest extends DemandCSVResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      SubjectDemandSummary subjectDemandSummary0 = mock(SubjectDemandSummary.class, new ViolatedAssumptionAnswer());
      doReturn((Collection) null).when(subjectDemandSummary0).getElectiveDemand();
      PreEnrollments preEnrollments0 = mock(PreEnrollments.class, new ViolatedAssumptionAnswer());
      doReturn(subjectDemandSummary0).when(preEnrollments0).getSubjectDemandSummary();
      DemandCSVResponse demandCSVResponse0 = null;
      try {
        demandCSVResponse0 = new DemandCSVResponse(preEnrollments0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.AbstractCollection", e);
      }
  }
}
