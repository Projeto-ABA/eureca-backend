/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 05 23:09:30 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.constants;

import org.junit.Test;
import static org.junit.Assert.*;
import br.edu.ufcg.computacao.eureca.backend.constants.Field;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Field_ESTest extends Field_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Field field0 = new Field("U6f", (String) null);
      field0.name = null;
      String string0 = field0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Field field0 = new Field((String) null, (String) null);
      field0.name = "";
      field0.name = "br.edu.ufcg.computacao.eureca.backend.constants.Field";
      String string0 = field0.getName();
      assertEquals("br.edu.ufcg.computacao.eureca.backend.constants.Field", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Field field0 = new Field("U6f", (String) null);
      String string0 = field0.getDescription();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Field field0 = new Field("Ill17F]*RYv", "");
      assertEquals("", field0.getDescription());
      
      field0.setDescription("Ill17F]*RYv");
      String string0 = field0.getDescription();
      assertEquals("Ill17F]*RYv", string0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Field field0 = new Field("Ill17F]*RYv", "");
      String string0 = field0.getDescription();
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Field field0 = new Field("Ill17F]*RYv", "");
      field0.setName("Ill17F]*RYv");
      assertEquals("Ill17F]*RYv", field0.getName());
      assertEquals("", field0.getDescription());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Field field0 = new Field("", "");
      String string0 = field0.getName();
      assertEquals("", string0);
  }
}
