/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 05 23:09:15 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.core.models;

import org.junit.Test;
import static org.junit.Assert.*;
import br.edu.ufcg.computacao.eureca.backend.core.models.TermCount;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TermCount_ESTest extends TermCount_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      TermCount termCount0 = new TermCount((-1211), "e[kOEg0?w`a7XK%&");
      termCount0.getTerm();
      assertEquals((-1211), termCount0.getCount());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      TermCount termCount0 = new TermCount((-3325), "");
      termCount0.getTerm();
      assertEquals((-3325), termCount0.getCount());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      TermCount termCount0 = new TermCount(0, (String) null);
      int int0 = termCount0.getCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      TermCount termCount0 = new TermCount((-1211), "e[kOEg0?w`a7XK%&");
      int int0 = termCount0.getCount();
      assertEquals((-1211), int0);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      TermCount termCount0 = new TermCount(18, (String) null);
      termCount0.setCount(18);
      assertEquals(18, termCount0.getCount());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      TermCount termCount0 = new TermCount(18, (String) null);
      termCount0.setTerm((String) null);
      assertEquals(18, termCount0.getCount());
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      TermCount termCount0 = new TermCount(18, (String) null);
      termCount0.getTerm();
      assertEquals(18, termCount0.getCount());
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      TermCount termCount0 = new TermCount(18, (String) null);
      int int0 = termCount0.getCount();
      assertEquals(18, int0);
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      TermCount termCount0 = new TermCount(18, (String) null);
      String string0 = termCount0.toString();
      assertEquals("TermCount{count=18, term='null'}", string0);
  }
}
