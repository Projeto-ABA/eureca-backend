/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 05 22:23:05 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries;

import org.junit.Test;
import static org.junit.Assert.*;
import br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.RegistrationSubjectCodeTermKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RegistrationSubjectCodeTermKey_ESTest extends RegistrationSubjectCodeTermKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey();
      String string0 = registrationSubjectCodeTermKey0.getTerm();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey("", "", "");
      String string0 = registrationSubjectCodeTermKey0.getTerm();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey();
      String string0 = registrationSubjectCodeTermKey0.getSubjectCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey();
      registrationSubjectCodeTermKey0.setSubjectCode("2N");
      String string0 = registrationSubjectCodeTermKey0.getSubjectCode();
      assertEquals("2N", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey();
      String string0 = registrationSubjectCodeTermKey0.getRegistration();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey("", "", (String) null);
      String string0 = registrationSubjectCodeTermKey0.getRegistration();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey("@h2z-p&l", "", "]3eKtM.Xo");
      String string0 = registrationSubjectCodeTermKey0.getSubjectCode();
      assertEquals("@h2z-p&l", registrationSubjectCodeTermKey0.getRegistration());
      assertEquals("]3eKtM.Xo", registrationSubjectCodeTermKey0.getTerm());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey(":~KkR", ":~KkR", ":~KkR");
      String string0 = registrationSubjectCodeTermKey0.getTerm();
      assertEquals(":~KkR", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey(":~KkR", ":~KkR", ":~KkR");
      String string0 = registrationSubjectCodeTermKey0.getRegistration();
      assertEquals(":~KkR", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey();
      registrationSubjectCodeTermKey0.setTerm("null:null:null");
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey1 = new RegistrationSubjectCodeTermKey();
      boolean boolean0 = registrationSubjectCodeTermKey0.equals(registrationSubjectCodeTermKey1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey();
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey1 = new RegistrationSubjectCodeTermKey();
      assertTrue(registrationSubjectCodeTermKey1.equals((Object)registrationSubjectCodeTermKey0));
      
      registrationSubjectCodeTermKey1.setSubjectCode("2N");
      boolean boolean0 = registrationSubjectCodeTermKey0.equals(registrationSubjectCodeTermKey1);
      assertFalse(registrationSubjectCodeTermKey1.equals((Object)registrationSubjectCodeTermKey0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey();
      registrationSubjectCodeTermKey0.setRegistration("null:null:null");
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey1 = new RegistrationSubjectCodeTermKey();
      boolean boolean0 = registrationSubjectCodeTermKey0.equals(registrationSubjectCodeTermKey1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey();
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey1 = new RegistrationSubjectCodeTermKey();
      boolean boolean0 = registrationSubjectCodeTermKey0.equals(registrationSubjectCodeTermKey1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey(":~KkR", ":~KkR", ":~KkR");
      boolean boolean0 = registrationSubjectCodeTermKey0.equals(registrationSubjectCodeTermKey0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey(":~KkR", ":~KkR", ":~KkR");
      boolean boolean0 = registrationSubjectCodeTermKey0.equals("f/\"");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey(":~KkR", ":~KkR", ":~KkR");
      String string0 = registrationSubjectCodeTermKey0.toString();
      assertEquals(":~KkR::~KkR::~KkR", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey();
      boolean boolean0 = registrationSubjectCodeTermKey0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RegistrationSubjectCodeTermKey registrationSubjectCodeTermKey0 = new RegistrationSubjectCodeTermKey(":~KkR", ":~KkR", ":~KkR");
      registrationSubjectCodeTermKey0.hashCode();
  }
}
