/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 05 22:04:01 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.api.http.response.preenrollment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.preenrollment.Enrollment;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Enrollment_ESTest extends Enrollment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", 0, 0, 0, 0, 0, 0, "", "");
      Enrollment enrollment1 = new Enrollment(":9Vo@", 0, (-3038), 0, 0, 0, 8, ":9Vo@", "");
      boolean boolean0 = enrollment0.equals(enrollment1);
      assertEquals(8, enrollment1.getElectiveCredits());
      assertEquals(":9Vo@", enrollment1.getStudentRegistration());
      assertEquals(0, enrollment1.getMandatoryCredits());
      assertEquals(0, enrollment1.getTerm());
      assertEquals(0, enrollment1.getOptionalCredits());
      assertEquals((-3046), enrollment1.getDeficit());
      assertEquals(0, enrollment1.getComplementaryCredits());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", 0, 0, 0, 0, 0, 0, "", "");
      Enrollment enrollment1 = new Enrollment(":9Vo@", 0, (-3038), 0, 0, 0, 0, ":9Vo@", "");
      enrollment1.setComplementaryCredits(723);
      boolean boolean0 = enrollment0.equals(enrollment1);
      assertEquals(723, enrollment1.getComplementaryCredits());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("{(J4~+T5^~T", 222, 222, (-1776), (-1776), (-1776), (-1776), "{(J4~+T5^~T", ".e;/^7};I1R_2{");
      Enrollment enrollment1 = new Enrollment(".e;/^7};I1R_2{", 222, (-1776), (-1776), 0, 2147483645, (-1), "{(J4~+T5^~T", (String) null);
      boolean boolean0 = enrollment0.equals(enrollment1);
      assertEquals(222, enrollment1.getTerm());
      assertEquals(7326, enrollment0.getDeficit());
      assertEquals((-1), enrollment1.getElectiveCredits());
      assertEquals(2147483645, enrollment1.getOptionalCredits());
      assertEquals(".e;/^7};I1R_2{", enrollment0.getClassCode());
      assertEquals(0, enrollment1.getComplementaryCredits());
      assertEquals("{(J4~+T5^~T", enrollment0.getSubjectName());
      assertEquals((-1776), enrollment0.getMandatoryCredits());
      assertEquals("{(J4~+T5^~T", enrollment0.getStudentRegistration());
      assertEquals((-1776), enrollment0.getComplementaryCredits());
      assertEquals(".e;/^7};I1R_2{", enrollment1.getStudentRegistration());
      assertEquals((-2147483644), enrollment1.getDeficit());
      assertFalse(boolean0);
      assertEquals((-1776), enrollment1.getMandatoryCredits());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("+Rs}va_{_v *O", 6, (-1), 0, 0, (-1), 1286, "H7A", "4^=,0lQuo");
      Enrollment enrollment1 = new Enrollment("+Rs}va_{_v *O", 6, (-1), (-724), (-3313), 6, 2010, "+Rs}va_{_v *O", "+Rs}va_{_v *O");
      boolean boolean0 = enrollment0.equals(enrollment1);
      assertEquals((-724), enrollment1.getMandatoryCredits());
      assertEquals("4^=,0lQuo", enrollment0.getClassCode());
      assertEquals("+Rs}va_{_v *O", enrollment0.getStudentRegistration());
      assertEquals((-3313), enrollment1.getComplementaryCredits());
      assertEquals(6, enrollment1.getOptionalCredits());
      assertEquals(2010, enrollment1.getElectiveCredits());
      assertFalse(boolean0);
      assertEquals(6, enrollment0.getTerm());
      assertEquals("H7A", enrollment0.getSubjectName());
      assertEquals(1285, enrollment0.getTotalCredits());
      assertEquals(2020, enrollment1.getDeficit());
      assertEquals((-1), enrollment0.getOptionalCredits());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", 0, 3987, 3987, 3987, 453, 0, "", "77Lfm;S_fcj");
      Enrollment enrollment1 = new Enrollment("68di =XQeMC~J{", 3089, (-1), (-3920), 5061, 3987, 0, "68di =XQeMC~J{", "");
      boolean boolean0 = enrollment0.equals(enrollment1);
      assertEquals("", enrollment1.getClassCode());
      assertEquals(3089, enrollment1.getTerm());
      assertEquals(3987, enrollment1.getOptionalCredits());
      assertEquals((-5129), enrollment1.getDeficit());
      assertEquals((-3920), enrollment1.getMandatoryCredits());
      assertEquals(5061, enrollment1.getComplementaryCredits());
      assertEquals(0, enrollment1.getElectiveCredits());
      assertEquals("68di =XQeMC~J{", enrollment1.getSubjectName());
      assertFalse(boolean0);
      assertEquals("68di =XQeMC~J{", enrollment1.getStudentRegistration());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", 160, 0, 160, 160, 1715, 0, "", "");
      enrollment0.setTotalCredits(0);
      int int0 = enrollment0.getTotalCredits();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", 1, 1, 1, 0, 0, 0, "C3j|Xadr+}d =.SZS", "");
      int int0 = enrollment0.getTotalCredits();
      assertEquals(1, enrollment0.getTerm());
      assertEquals("C3j|Xadr+}d =.SZS", enrollment0.getSubjectName());
      assertEquals(0, enrollment0.getComplementaryCredits());
      assertEquals(0, enrollment0.getElectiveCredits());
      assertEquals("", enrollment0.getClassCode());
      assertEquals(1, enrollment0.getMandatoryCredits());
      assertEquals(1, int0);
      assertEquals(0, enrollment0.getOptionalCredits());
      assertEquals("", enrollment0.getStudentRegistration());
      assertEquals(0, enrollment0.getDeficit());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", 0, (-2015), 0, (-3052), 0, (-3052), "", "");
      int int0 = enrollment0.getTerm();
      assertEquals((-3052), enrollment0.getComplementaryCredits());
      assertEquals(0, enrollment0.getMandatoryCredits());
      assertEquals((-3052), enrollment0.getElectiveCredits());
      assertEquals(0, enrollment0.getOptionalCredits());
      assertEquals(0, int0);
      assertEquals(4089, enrollment0.getDeficit());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", (-143), (-143), (-1), 2310, (-2037), (-1), "", "i");
      int int0 = enrollment0.getTerm();
      assertEquals(2310, enrollment0.getComplementaryCredits());
      assertEquals("", enrollment0.getStudentRegistration());
      assertEquals((-414), enrollment0.getDeficit());
      assertEquals("", enrollment0.getSubjectName());
      assertEquals((-2037), enrollment0.getOptionalCredits());
      assertEquals((-143), int0);
      assertEquals((-1), enrollment0.getMandatoryCredits());
      assertEquals((-1), enrollment0.getElectiveCredits());
      assertEquals("i", enrollment0.getClassCode());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment((String) null, 0, 5, 1, (-1), (-2637), 5, (String) null, (String) null);
      enrollment0.getSubjectName();
      assertEquals(5, enrollment0.getElectiveCredits());
      assertEquals((-2637), enrollment0.getOptionalCredits());
      assertEquals(2637, enrollment0.getDeficit());
      assertEquals(1, enrollment0.getMandatoryCredits());
      assertEquals((-1), enrollment0.getComplementaryCredits());
      assertEquals(0, enrollment0.getTerm());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("V$dH5uPG", 2374, 2374, 2374, 2374, 0, 7, "V$dH5uPG", "");
      String string0 = enrollment0.getSubjectName();
      assertEquals(7, enrollment0.getElectiveCredits());
      assertEquals(2374, enrollment0.getMandatoryCredits());
      assertEquals(2374, enrollment0.getComplementaryCredits());
      assertEquals("", enrollment0.getClassCode());
      assertEquals("V$dH5uPG", string0);
      assertEquals(2374, enrollment0.getTerm());
      assertEquals("V$dH5uPG", enrollment0.getStudentRegistration());
      assertEquals((-2381), enrollment0.getDeficit());
      assertEquals(0, enrollment0.getOptionalCredits());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("7-,qM6b$_.+I8[F", (-825), (-825), (-825), (-825), 1867, 0, "", "7-,qM6b$_.+I8[F");
      assertEquals("7-,qM6b$_.+I8[F", enrollment0.getStudentRegistration());
      
      enrollment0.setStudentRegistration((String) null);
      enrollment0.getStudentRegistration();
      assertEquals("7-,qM6b$_.+I8[F", enrollment0.getClassCode());
      assertEquals((-1042), enrollment0.getDeficit());
      assertEquals(1867, enrollment0.getOptionalCredits());
      assertEquals((-825), enrollment0.getComplementaryCredits());
      assertEquals("", enrollment0.getSubjectName());
      assertEquals(0, enrollment0.getElectiveCredits());
      assertEquals((-825), enrollment0.getMandatoryCredits());
      assertEquals((-825), enrollment0.getTerm());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", (-1270), (-1), (-1), (-1270), (-1), 1176, "", "");
      enrollment0.getStudentRegistration();
      assertEquals(1176, enrollment0.getElectiveCredits());
      assertEquals((-1270), enrollment0.getComplementaryCredits());
      assertEquals((-1), enrollment0.getMandatoryCredits());
      assertEquals((-1), enrollment0.getOptionalCredits());
      assertEquals(95, enrollment0.getDeficit());
      assertEquals((-1270), enrollment0.getTerm());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", 0, 2, 3, 0, 3, 2, "", "");
      int int0 = enrollment0.getOptionalCredits();
      assertEquals(3, int0);
      assertEquals(2, enrollment0.getElectiveCredits());
      assertEquals(3, enrollment0.getMandatoryCredits());
      assertEquals(0, enrollment0.getComplementaryCredits());
      assertEquals((-6), enrollment0.getDeficit());
      assertEquals(0, enrollment0.getTerm());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", (-1270), (-1), (-1), (-1270), (-1), 1176, "", "");
      int int0 = enrollment0.getOptionalCredits();
      assertEquals((-1270), enrollment0.getComplementaryCredits());
      assertEquals(95, enrollment0.getDeficit());
      assertEquals((-1), int0);
      assertEquals(1176, enrollment0.getElectiveCredits());
      assertEquals((-1270), enrollment0.getTerm());
      assertEquals((-1), enrollment0.getMandatoryCredits());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", 0, (-2015), 0, (-3052), 0, (-3052), "", "");
      int int0 = enrollment0.getMandatoryCredits();
      assertEquals(0, int0);
      assertEquals((-3052), enrollment0.getElectiveCredits());
      assertEquals(0, enrollment0.getOptionalCredits());
      assertEquals(4089, enrollment0.getDeficit());
      assertEquals((-3052), enrollment0.getComplementaryCredits());
      assertEquals(0, enrollment0.getTerm());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("?q0y[B;VM4\"&MI9buZ", (-3032), 0, (-3950), (-3032), 2871, 38, (String) null, (String) null);
      int int0 = enrollment0.getMandatoryCredits();
      assertEquals(2871, enrollment0.getOptionalCredits());
      assertEquals((-3950), int0);
      assertEquals(4073, enrollment0.getDeficit());
      assertEquals((-3032), enrollment0.getComplementaryCredits());
      assertEquals(38, enrollment0.getElectiveCredits());
      assertEquals((-3032), enrollment0.getTerm());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("C3j|Xadr+}d =.SZS", 587, 587, (-1), (-702), 0, 2641, "@gg", "C3j|Xadr+}d =.SZS");
      int int0 = enrollment0.getElectiveCredits();
      assertEquals((-702), enrollment0.getComplementaryCredits());
      assertEquals("@gg", enrollment0.getSubjectName());
      assertEquals(2641, int0);
      assertEquals((-1351), enrollment0.getDeficit());
      assertEquals("C3j|Xadr+}d =.SZS", enrollment0.getStudentRegistration());
      assertEquals(587, enrollment0.getTerm());
      assertEquals("C3j|Xadr+}d =.SZS", enrollment0.getClassCode());
      assertEquals((-1), enrollment0.getMandatoryCredits());
      assertEquals(0, enrollment0.getOptionalCredits());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", (-143), (-143), (-1), 2310, (-2037), (-1), "", "i");
      int int0 = enrollment0.getElectiveCredits();
      assertEquals((-143), enrollment0.getTerm());
      assertEquals("i", enrollment0.getClassCode());
      assertEquals((-2037), enrollment0.getOptionalCredits());
      assertEquals((-1), enrollment0.getMandatoryCredits());
      assertEquals((-414), enrollment0.getDeficit());
      assertEquals((-1), int0);
      assertEquals("", enrollment0.getStudentRegistration());
      assertEquals("", enrollment0.getSubjectName());
      assertEquals(2310, enrollment0.getComplementaryCredits());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", (-1), 1884, (-1), 0, 0, 0, "", "");
      int int0 = enrollment0.getDeficit();
      assertEquals(0, enrollment0.getOptionalCredits());
      assertEquals((-1), enrollment0.getTerm());
      assertEquals(1885, int0);
      assertEquals((-1), enrollment0.getMandatoryCredits());
      assertEquals(0, enrollment0.getComplementaryCredits());
      assertEquals(0, enrollment0.getElectiveCredits());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", (-996), (-996), (-996), (-996), 3, 1678, "", "");
      int int0 = enrollment0.getDeficit();
      assertEquals(1678, enrollment0.getElectiveCredits());
      assertEquals((-996), enrollment0.getComplementaryCredits());
      assertEquals(3, enrollment0.getOptionalCredits());
      assertEquals((-996), enrollment0.getTerm());
      assertEquals((-685), int0);
      assertEquals((-996), enrollment0.getMandatoryCredits());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", (-143), (-143), (-1), 2310, (-2037), (-1), "", "i");
      enrollment0.setComplementaryCredits(0);
      int int0 = enrollment0.getComplementaryCredits();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("z-LuYyf*lu0FT_l6~i{", (-812), (-812), (-812), (-812), 967, (-812), "", "");
      int int0 = enrollment0.getComplementaryCredits();
      assertEquals((-812), enrollment0.getTerm());
      assertEquals((-812), int0);
      assertEquals("", enrollment0.getSubjectName());
      assertEquals("", enrollment0.getClassCode());
      assertEquals(657, enrollment0.getDeficit());
      assertEquals((-812), enrollment0.getElectiveCredits());
      assertEquals(967, enrollment0.getOptionalCredits());
      assertEquals("z-LuYyf*lu0FT_l6~i{", enrollment0.getStudentRegistration());
      assertEquals((-812), enrollment0.getMandatoryCredits());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment((String) null, 0, (-3191), 0, 0, (-3191), 0, (String) null, (String) null);
      enrollment0.getClassCode();
      assertEquals(0, enrollment0.getMandatoryCredits());
      assertEquals(0, enrollment0.getElectiveCredits());
      assertEquals(0, enrollment0.getComplementaryCredits());
      assertEquals(0, enrollment0.getDeficit());
      assertEquals(0, enrollment0.getTerm());
      assertEquals((-3191), enrollment0.getOptionalCredits());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("?q9X@", (-1), 211, 211, (-1908), 0, (-1), "?q9X@", "");
      String string0 = enrollment0.getClassCode();
      assertEquals("?q9X@", enrollment0.getStudentRegistration());
      assertEquals((-1908), enrollment0.getComplementaryCredits());
      assertEquals(1909, enrollment0.getDeficit());
      assertEquals("", string0);
      assertEquals(0, enrollment0.getOptionalCredits());
      assertEquals((-1), enrollment0.getTerm());
      assertEquals((-1), enrollment0.getElectiveCredits());
      assertEquals(211, enrollment0.getMandatoryCredits());
      assertEquals("?q9X@", enrollment0.getSubjectName());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", (-1), (-1816), (-1), (-2495), (-2495), 0, "", "");
      enrollment0.compareTo(enrollment0);
      assertEquals((-1), enrollment0.getTerm());
      assertEquals(0, enrollment0.getElectiveCredits());
      assertEquals((-1), enrollment0.getMandatoryCredits());
      assertEquals((-2495), enrollment0.getComplementaryCredits());
      assertEquals(3175, enrollment0.getDeficit());
      assertEquals((-2495), enrollment0.getOptionalCredits());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", 1, 1, 1, 0, 0, 0, "C3j|Xadr+}d =.SZS", "");
      assertEquals("", enrollment0.getStudentRegistration());
      
      enrollment0.setStudentRegistration("C3j|Xadr+}d =.SZS");
      Enrollment enrollment1 = new Enrollment("C3j|Xadr+}d =.SZS", 587, 587, (-1), (-702), 0, 2641, "@gg", "C3j|Xadr+}d =.SZS");
      int int0 = enrollment0.compareTo(enrollment1);
      assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("E%L/w7+BF?f[{F6gkY", 0, 0, (-1903), 0, (-1903), 0, "E%L/w7+BF?f[{F6gkY", "E%L/w7+BF?f[{F6gkY");
      Enrollment enrollment1 = new Enrollment("x1/meNY\"327rqS!D-AJ", (-810), (-1903), (-1), 0, 0, (-1), "x1/meNY\"327rqS!D-AJ", "E%L/w7+BF?f[{F6gkY");
      int int0 = enrollment0.compareTo(enrollment1);
      assertEquals((-51), int0);
      assertEquals((-1), enrollment1.getElectiveCredits());
      assertEquals("x1/meNY\"327rqS!D-AJ", enrollment1.getStudentRegistration());
      assertEquals((-1), enrollment1.getMandatoryCredits());
      assertEquals(0, enrollment1.getOptionalCredits());
      assertEquals(0, enrollment1.getComplementaryCredits());
      assertEquals("x1/meNY\"327rqS!D-AJ", enrollment1.getSubjectName());
      assertEquals((-810), enrollment1.getTerm());
      assertEquals(0, enrollment0.getComplementaryCredits());
      assertEquals((-1903), enrollment0.getOptionalCredits());
      assertEquals((-1903), enrollment0.getMandatoryCredits());
      assertEquals(0, enrollment0.getElectiveCredits());
      assertEquals("E%L/w7+BF?f[{F6gkY", enrollment1.getClassCode());
      assertEquals((-1901), enrollment1.getDeficit());
      assertEquals((-3806), enrollment0.getTotalCredits());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", 0, 0, 0, 0, 0, 0, "", "");
      enrollment0.setSubjectName((String) null);
      enrollment0.setStudentRegistration(":9Vo@");
      Enrollment enrollment1 = new Enrollment(":9Vo@", 0, (-3038), 0, 0, 0, 0, ":9Vo@", "");
      // Undeclared exception!
      try { 
        enrollment0.equals(enrollment1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("BDAhv%ome", 0, (-3443), 1, 1698, (-3443), (-3443), (String) null, "");
      // Undeclared exception!
      try { 
        enrollment0.compareTo((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.api.http.response.preenrollment.Enrollment", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", 1, 55, 55, 2, 55, 0, "", "7^");
      String string0 = enrollment0.getClassCode();
      assertEquals(55, enrollment0.getMandatoryCredits());
      assertEquals("", enrollment0.getStudentRegistration());
      assertEquals("", enrollment0.getSubjectName());
      assertEquals(2, enrollment0.getComplementaryCredits());
      assertEquals(0, enrollment0.getElectiveCredits());
      assertEquals((-57), enrollment0.getDeficit());
      assertEquals(1, enrollment0.getTerm());
      assertEquals(55, enrollment0.getOptionalCredits());
      assertEquals("7^", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", (-143), (-143), (-1), 2310, (-2037), (-1), "", "i");
      int int0 = enrollment0.getComplementaryCredits();
      assertEquals((-414), enrollment0.getDeficit());
      assertEquals(2310, int0);
      assertEquals("", enrollment0.getSubjectName());
      assertEquals("", enrollment0.getStudentRegistration());
      assertEquals((-2037), enrollment0.getOptionalCredits());
      assertEquals((-1), enrollment0.getMandatoryCredits());
      assertEquals((-143), enrollment0.getTerm());
      assertEquals("i", enrollment0.getClassCode());
      assertEquals((-1), enrollment0.getElectiveCredits());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", (-239), (-239), 2437, (-1055), (-1055), 3, (String) null, "t{7vwoZ$_$0/V");
      int int0 = enrollment0.getMandatoryCredits();
      assertEquals("", enrollment0.getStudentRegistration());
      assertEquals((-1055), enrollment0.getOptionalCredits());
      assertEquals(3, enrollment0.getElectiveCredits());
      assertEquals((-1055), enrollment0.getComplementaryCredits());
      assertEquals((-569), enrollment0.getDeficit());
      assertEquals("t{7vwoZ$_$0/V", enrollment0.getClassCode());
      assertEquals((-239), enrollment0.getTerm());
      assertEquals(2437, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("V$dH5uPG", 2374, 2374, 2374, 2374, 0, 7, "V$dH5uPG", "");
      String string0 = enrollment0.getStudentRegistration();
      assertEquals(2374, enrollment0.getTerm());
      assertEquals("", enrollment0.getClassCode());
      assertEquals("V$dH5uPG", enrollment0.getSubjectName());
      assertEquals(0, enrollment0.getOptionalCredits());
      assertEquals((-2381), enrollment0.getDeficit());
      assertEquals(7, enrollment0.getElectiveCredits());
      assertEquals(2374, enrollment0.getMandatoryCredits());
      assertEquals("V$dH5uPG", string0);
      assertEquals(2374, enrollment0.getComplementaryCredits());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("V$dH5uPG", 2374, 2374, 2374, 2374, 0, 7, "V$dH5uPG", "");
      int int0 = enrollment0.getTerm();
      assertEquals((-2381), enrollment0.getDeficit());
      assertEquals(0, enrollment0.getOptionalCredits());
      assertEquals(2374, enrollment0.getComplementaryCredits());
      assertEquals(7, enrollment0.getElectiveCredits());
      assertEquals("V$dH5uPG", enrollment0.getStudentRegistration());
      assertEquals("", enrollment0.getClassCode());
      assertEquals(2374, int0);
      assertEquals("V$dH5uPG", enrollment0.getSubjectName());
      assertEquals(2374, enrollment0.getMandatoryCredits());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("V$dH5uPG", 2374, 2374, 2374, 2374, 0, 7, "V$dH5uPG", "");
      int int0 = enrollment0.getOptionalCredits();
      assertEquals(2374, enrollment0.getTerm());
      assertEquals("V$dH5uPG", enrollment0.getStudentRegistration());
      assertEquals(2374, enrollment0.getComplementaryCredits());
      assertEquals("V$dH5uPG", enrollment0.getSubjectName());
      assertEquals(0, int0);
      assertEquals(7, enrollment0.getElectiveCredits());
      assertEquals("", enrollment0.getClassCode());
      assertEquals((-2381), enrollment0.getDeficit());
      assertEquals(2374, enrollment0.getMandatoryCredits());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", 0, (-2015), 0, (-3052), 0, (-3052), "", "");
      enrollment0.getSubjectName();
      assertEquals(4089, enrollment0.getDeficit());
      assertEquals(0, enrollment0.getMandatoryCredits());
      assertEquals(0, enrollment0.getOptionalCredits());
      assertEquals(0, enrollment0.getTerm());
      assertEquals((-3052), enrollment0.getComplementaryCredits());
      assertEquals((-3052), enrollment0.getElectiveCredits());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", 1, 1, 1, 0, 0, 0, "C3j|Xadr+}d =.SZS", "");
      int int0 = enrollment0.getElectiveCredits();
      assertEquals(0, enrollment0.getComplementaryCredits());
      assertEquals(0, enrollment0.getDeficit());
      assertEquals(1, enrollment0.getTerm());
      assertEquals(1, enrollment0.getMandatoryCredits());
      assertEquals(0, enrollment0.getOptionalCredits());
      assertEquals("", enrollment0.getClassCode());
      assertEquals(0, int0);
      assertEquals("", enrollment0.getStudentRegistration());
      assertEquals("C3j|Xadr+}d =.SZS", enrollment0.getSubjectName());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", 0, 0, 0, 0, 0, 0, "", "");
      Enrollment enrollment1 = new Enrollment("", 0, (-3038), 0, 0, 0, 0, "", "ah");
      boolean boolean0 = enrollment0.equals(enrollment1);
      assertEquals(0, enrollment1.getElectiveCredits());
      assertFalse(boolean0);
      assertEquals("", enrollment1.getStudentRegistration());
      assertEquals(0, enrollment1.getTerm());
      assertEquals(0, enrollment1.getOptionalCredits());
      assertEquals(0, enrollment1.getMandatoryCredits());
      assertEquals((-3038), enrollment1.getDeficit());
      assertEquals(0, enrollment1.getComplementaryCredits());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", 0, 0, 0, 0, 0, 0, "", "");
      enrollment0.setStudentRegistration(":9V@");
      enrollment0.setSubjectName(":9V@");
      Enrollment enrollment1 = new Enrollment(":9V@", 0, (-3038), 0, 0, 0, 0, ":9V@", "");
      boolean boolean0 = enrollment0.equals(enrollment1);
      assertTrue(boolean0);
      assertEquals(0, enrollment1.getOptionalCredits());
      assertEquals((-3038), enrollment1.getDeficit());
      assertEquals(0, enrollment1.getTerm());
      assertEquals(0, enrollment0.getMandatoryCredits());
      assertEquals(0, enrollment1.getComplementaryCredits());
      assertEquals(0, enrollment1.getElectiveCredits());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("0-t+K]l+\"D^D", 2334, 2334, 2334, 2334, 2334, 2334, "0-t+K]l+\"D^D", "0-t+K]l+\"D^D");
      Enrollment enrollment1 = new Enrollment("0-t+K]l+\"D^D", 2334, 2334, 2334, 2334, 2334, 844, "0-t+K]l+\"D^D", "0-t+K]l+\"D^D");
      boolean boolean0 = enrollment0.equals(enrollment1);
      assertFalse(boolean0);
      assertEquals((-5512), enrollment1.getDeficit());
      assertEquals(2334, enrollment1.getOptionalCredits());
      assertEquals(2334, enrollment1.getMandatoryCredits());
      assertEquals(2334, enrollment1.getTerm());
      assertEquals(844, enrollment1.getElectiveCredits());
      assertEquals(2334, enrollment1.getComplementaryCredits());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("oh8#wI>VvrT", 3349, 3349, 755, 3349, 755, 755, "oh8#wI>VvrT", "oh8#wI>VvrT");
      enrollment0.setTerm((-2265));
      Enrollment enrollment1 = new Enrollment("oh8#wI>VvrT", (-2265), (-2265), 755, 755, 755, (-2265), "oh8#wI>VvrT", "oh8#wI>VvrT");
      boolean boolean0 = enrollment0.equals(enrollment1);
      assertEquals((-2265), enrollment0.getTerm());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("e", 7, 7, 7, 7, 7, 7, "e", "e");
      Enrollment enrollment1 = new Enrollment("e", 7, 7, 7, (-3), (-3), 7, "e", "e");
      boolean boolean0 = enrollment0.equals(enrollment1);
      assertEquals((-3), enrollment1.getComplementaryCredits());
      assertEquals((-1), enrollment1.getDeficit());
      assertEquals(7, enrollment1.getElectiveCredits());
      assertFalse(boolean0);
      assertEquals((-3), enrollment1.getOptionalCredits());
      assertEquals(7, enrollment1.getTerm());
      assertEquals(7, enrollment1.getMandatoryCredits());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("S.ly-[r1", 1326, 1326, 1326, 1326, (-1121), 1326, "S.ly-[r1", "S.ly-[r1");
      Enrollment enrollment1 = new Enrollment("S.ly-[r1", 1326, (-1121), (-1121), 1326, 1326, 1326, "S.ly-[r1", "S.ly-[r1");
      boolean boolean0 = enrollment1.equals(enrollment0);
      assertEquals(1326, enrollment1.getElectiveCredits());
      assertEquals(1326, enrollment0.getElectiveCredits());
      assertEquals((-1121), enrollment0.getOptionalCredits());
      assertEquals(1326, enrollment0.getComplementaryCredits());
      assertEquals((-1121), enrollment1.getMandatoryCredits());
      assertEquals(1326, enrollment1.getComplementaryCredits());
      assertEquals(1326, enrollment0.getTerm());
      assertEquals(1326, enrollment1.getTerm());
      assertFalse(boolean0);
      assertEquals((-3978), enrollment1.getDeficit());
      assertEquals((-1531), enrollment0.getDeficit());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("S.ly-[r1", 1326, 1326, 1326, 1326, (-1121), 1326, "S.ly-[r1", "S.ly-[r1");
      Enrollment enrollment1 = new Enrollment("S.ly-[r1", (-1121), (-1121), (-1121), 1326, 1326, 1326, "S.ly-[r1", "S.ly-[r1");
      boolean boolean0 = enrollment0.equals(enrollment1);
      assertEquals((-1121), enrollment0.getOptionalCredits());
      assertEquals(1326, enrollment0.getElectiveCredits());
      assertEquals(1326, enrollment1.getElectiveCredits());
      assertEquals(1326, enrollment0.getComplementaryCredits());
      assertEquals((-3978), enrollment1.getDeficit());
      assertEquals(1326, enrollment1.getComplementaryCredits());
      assertEquals((-1121), enrollment1.getTerm());
      assertEquals((-1121), enrollment1.getMandatoryCredits());
      assertEquals((-1531), enrollment0.getDeficit());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", 0, 0, 0, 0, 0, 0, "", "");
      Enrollment enrollment1 = new Enrollment(":9V@", 0, (-3038), 0, 0, 0, 0, ":9V@", "");
      boolean boolean0 = enrollment0.equals(enrollment1);
      assertEquals(0, enrollment1.getComplementaryCredits());
      assertEquals(0, enrollment1.getMandatoryCredits());
      assertFalse(boolean0);
      assertEquals(0, enrollment1.getElectiveCredits());
      assertEquals(0, enrollment1.getOptionalCredits());
      assertEquals((-3038), enrollment1.getDeficit());
      assertEquals("", enrollment1.getClassCode());
      assertEquals(0, enrollment1.getTerm());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("S.ly-[r1", 1326, 1326, 1326, 1326, (-1121), 1326, "S.ly-[r1", "S.ly-[r1");
      boolean boolean0 = enrollment0.equals((Object) null);
      assertEquals((-1121), enrollment0.getOptionalCredits());
      assertEquals(1326, enrollment0.getTerm());
      assertFalse(boolean0);
      assertEquals((-1531), enrollment0.getDeficit());
      assertEquals(1326, enrollment0.getMandatoryCredits());
      assertEquals(1326, enrollment0.getComplementaryCredits());
      assertEquals(1326, enrollment0.getElectiveCredits());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", 0, 0, 0, 0, 0, 0, "", "");
      boolean boolean0 = enrollment0.equals(enrollment0);
      assertEquals(0, enrollment0.getOptionalCredits());
      assertEquals(0, enrollment0.getComplementaryCredits());
      assertEquals(0, enrollment0.getElectiveCredits());
      assertEquals(0, enrollment0.getTerm());
      assertEquals(0, enrollment0.getMandatoryCredits());
      assertEquals(0, enrollment0.getDeficit());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", 0, 0, 0, 0, 0, 0, "", "");
      Object object0 = new Object();
      boolean boolean0 = enrollment0.equals(object0);
      assertFalse(boolean0);
      assertEquals(0, enrollment0.getElectiveCredits());
      assertEquals(0, enrollment0.getTerm());
      assertEquals(0, enrollment0.getDeficit());
      assertEquals(0, enrollment0.getOptionalCredits());
      assertEquals(0, enrollment0.getComplementaryCredits());
      assertEquals(0, enrollment0.getMandatoryCredits());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("YTg<$7)3.YOCf", 0, 0, 0, 0, 0, 0, "YTg<$7)3.YOCf", "YTg<$7)3.YOCf");
      enrollment0.setMandatoryCredits(0);
      assertEquals(0, enrollment0.getOptionalCredits());
      assertEquals(0, enrollment0.getComplementaryCredits());
      assertEquals(0, enrollment0.getElectiveCredits());
      assertEquals(0, enrollment0.getMandatoryCredits());
      assertEquals(0, enrollment0.getTerm());
      assertEquals(0, enrollment0.getDeficit());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", 0, 0, 0, 0, 0, 0, "", "");
      enrollment0.setStudentRegistration(":9V@");
      Enrollment enrollment1 = new Enrollment(":9V@", 0, (-3038), 0, 0, 0, 0, ":9V@", "");
      boolean boolean0 = enrollment0.equals(enrollment1);
      assertFalse(boolean0);
      assertEquals(0, enrollment1.getTerm());
      assertEquals(0, enrollment1.getElectiveCredits());
      assertEquals("", enrollment1.getClassCode());
      assertEquals(0, enrollment1.getComplementaryCredits());
      assertEquals(0, enrollment1.getMandatoryCredits());
      assertEquals((-3038), enrollment1.getDeficit());
      assertEquals(0, enrollment1.getOptionalCredits());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", 0, 0, 0, 0, 0, 0, "", "");
      enrollment0.setDeficit(0);
      assertEquals(0, enrollment0.getTerm());
      assertEquals(0, enrollment0.getElectiveCredits());
      assertEquals(0, enrollment0.getComplementaryCredits());
      assertEquals(0, enrollment0.getDeficit());
      assertEquals(0, enrollment0.getOptionalCredits());
      assertEquals(0, enrollment0.getMandatoryCredits());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("YTg<$7)3.YOCf", 0, 0, 0, 0, 0, 0, "YTg<$7)3.YOCf", "YTg<$7)3.YOCf");
      enrollment0.setOptionalCredits(0);
      assertEquals(0, enrollment0.getElectiveCredits());
      assertEquals(0, enrollment0.getTerm());
      assertEquals(0, enrollment0.getDeficit());
      assertEquals(0, enrollment0.getOptionalCredits());
      assertEquals(0, enrollment0.getComplementaryCredits());
      assertEquals(0, enrollment0.getMandatoryCredits());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", 0, 0, 0, 0, 0, 0, "", "");
      // Undeclared exception!
      try { 
        enrollment0.compareTo("");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to br.edu.ufcg.computacao.eureca.backend.api.http.response.preenrollment.Enrollment
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.api.http.response.preenrollment.Enrollment", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("CH", (-24), (-24), (-24), (-24), (-24), (-24), "CH", "CH");
      int int0 = enrollment0.getTotalCredits();
      assertEquals((-24), enrollment0.getOptionalCredits());
      assertEquals((-24), enrollment0.getElectiveCredits());
      assertEquals((-96), int0);
      assertEquals((-24), enrollment0.getMandatoryCredits());
      assertEquals((-24), enrollment0.getComplementaryCredits());
      assertEquals((-24), enrollment0.getTerm());
      assertEquals(72, enrollment0.getDeficit());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", 0, 0, 0, 0, 0, 0, "", "");
      enrollment0.setElectiveCredits(0);
      assertEquals(0, enrollment0.getOptionalCredits());
      assertEquals(0, enrollment0.getDeficit());
      assertEquals(0, enrollment0.getElectiveCredits());
      assertEquals(0, enrollment0.getMandatoryCredits());
      assertEquals(0, enrollment0.getComplementaryCredits());
      assertEquals(0, enrollment0.getTerm());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", 0, 0, 0, 0, 0, 0, "", "");
      enrollment0.setClassCode("");
      assertEquals(0, enrollment0.getComplementaryCredits());
      assertEquals(0, enrollment0.getMandatoryCredits());
      assertEquals(0, enrollment0.getElectiveCredits());
      assertEquals(0, enrollment0.getOptionalCredits());
      assertEquals(0, enrollment0.getDeficit());
      assertEquals(0, enrollment0.getTerm());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", 0, 0, 0, 0, 0, 0, "", "");
      int int0 = enrollment0.getDeficit();
      assertEquals(0, enrollment0.getOptionalCredits());
      assertEquals(0, enrollment0.getTerm());
      assertEquals(0, enrollment0.getMandatoryCredits());
      assertEquals(0, int0);
      assertEquals(0, enrollment0.getElectiveCredits());
      assertEquals(0, enrollment0.getComplementaryCredits());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Enrollment enrollment0 = new Enrollment("", 0, 0, 0, 0, 0, 0, "", "");
      enrollment0.hashCode();
      assertEquals(0, enrollment0.getOptionalCredits());
      assertEquals(0, enrollment0.getDeficit());
      assertEquals(0, enrollment0.getTerm());
      assertEquals(0, enrollment0.getElectiveCredits());
      assertEquals(0, enrollment0.getComplementaryCredits());
      assertEquals(0, enrollment0.getMandatoryCredits());
  }
}
