/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 05 22:51:52 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.ScheduleData;
import br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.ScheduleKey;
import br.edu.ufcg.computacao.eureca.backend.core.models.Schedule;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ScheduleData_ESTest extends ScheduleData_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ScheduleData scheduleData0 = new ScheduleData();
      scheduleData0.setSchedule("9W1%");
      String string0 = scheduleData0.getSchedule();
      assertEquals("9W1%", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Integer integer0 = new Integer(7);
      ScheduleData scheduleData0 = new ScheduleData(integer0, "");
      String string0 = scheduleData0.getSchedule();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Integer integer0 = new Integer(1);
      ScheduleData scheduleData0 = new ScheduleData(integer0, ";&ZAPDAG{;JG*-]}y)");
      Integer integer1 = scheduleData0.getAvailability();
      assertEquals(1, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ScheduleData scheduleData0 = new ScheduleData((Integer) null, "");
      Integer integer0 = new Integer(0);
      scheduleData0.setAvailability(integer0);
      Integer integer1 = scheduleData0.getAvailability();
      assertEquals(0, (int)integer1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ScheduleData scheduleData0 = new ScheduleData();
      Integer integer0 = new Integer((-3713));
      scheduleData0.setAvailability(integer0);
      Integer integer1 = scheduleData0.getAvailability();
      assertEquals((-3713), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ScheduleData scheduleData0 = new ScheduleData((Integer) null, "");
      Integer integer0 = new Integer((-5181));
      scheduleData0.setAvailability(integer0);
      Integer integer1 = scheduleData0.getAvailability();
      assertEquals((-5181), (int)integer1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ScheduleData scheduleData0 = new ScheduleData((Integer) null, "");
      Integer integer0 = new Integer(0);
      scheduleData0.setAvailability(integer0);
      scheduleData0.setSchedule(",");
      ScheduleKey scheduleKey0 = new ScheduleKey();
      Schedule schedule0 = scheduleData0.createSchedule(scheduleKey0);
      assertNull(schedule0.getClassCode());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ScheduleData scheduleData0 = new ScheduleData((Integer) null, "");
      Integer integer0 = new Integer((-5181));
      scheduleData0.setAvailability(integer0);
      scheduleData0.setSchedule(",");
      ScheduleKey scheduleKey0 = new ScheduleKey();
      Schedule schedule0 = scheduleData0.createSchedule(scheduleKey0);
      assertNull(schedule0.getClassCode());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ScheduleData scheduleData0 = new ScheduleData();
      // Undeclared exception!
      try { 
        scheduleData0.createSchedule((ScheduleKey) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.ScheduleData", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ScheduleData scheduleData0 = new ScheduleData();
      Integer integer0 = new Integer(1923);
      scheduleData0.setAvailability(integer0);
      scheduleData0.setSchedule("|dJ-a");
      ScheduleKey scheduleKey0 = new ScheduleKey();
      Schedule schedule0 = scheduleData0.createSchedule(scheduleKey0);
      assertEquals(1923, schedule0.getAvailability());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ScheduleData scheduleData0 = new ScheduleData();
      String string0 = scheduleData0.getSchedule();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ScheduleData scheduleData0 = new ScheduleData((Integer) null, "");
      Integer integer0 = scheduleData0.getAvailability();
      assertNull(integer0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Integer integer0 = new Integer(2);
      ScheduleData scheduleData0 = new ScheduleData(integer0, "q\u0000r");
      ScheduleKey scheduleKey0 = new ScheduleKey("", "", "Y.wQ*$Zk3(|dN<6h", "", "");
      // Undeclared exception!
      try { 
        scheduleData0.createSchedule(scheduleKey0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.ScheduleData", e);
      }
  }
}
