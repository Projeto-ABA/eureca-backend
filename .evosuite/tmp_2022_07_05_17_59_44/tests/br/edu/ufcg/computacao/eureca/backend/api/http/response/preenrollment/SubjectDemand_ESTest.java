/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 05 23:14:10 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.api.http.response.preenrollment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.preenrollment.SubjectDemand;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SubjectDemand_ESTest extends SubjectDemand_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SubjectDemand subjectDemand0 = new SubjectDemand(", totalDemand=", ", totalDemand=", 1605);
      int int0 = subjectDemand0.getTotalDemand();
      assertEquals(1605, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SubjectDemand subjectDemand0 = new SubjectDemand("L.IW?@1]", "hm`@aUDw\";*7 f4xH~+", (-1));
      int int0 = subjectDemand0.getTotalDemand();
      assertEquals("hm`@aUDw\";*7 f4xH~+", subjectDemand0.getSubjectName());
      assertEquals("L.IW?@1]", subjectDemand0.getSubjectCode());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SubjectDemand subjectDemand0 = new SubjectDemand((String) null, (String) null, 0);
      subjectDemand0.getSubjectName();
      assertEquals(0, subjectDemand0.getTotalDemand());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SubjectDemand subjectDemand0 = new SubjectDemand("", "", (-1290));
      subjectDemand0.getSubjectName();
      assertEquals((-1290), subjectDemand0.getTotalDemand());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SubjectDemand subjectDemand0 = new SubjectDemand((String) null, "g[CD}i<,.iO3|0BJ2", 0);
      String string0 = subjectDemand0.getSubjectCode();
      assertEquals(0, subjectDemand0.getTotalDemand());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SubjectDemand subjectDemand0 = new SubjectDemand("", "", 0);
      subjectDemand0.getSubjectCode();
      assertEquals(0, subjectDemand0.getTotalDemand());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SubjectDemand subjectDemand0 = new SubjectDemand("zL4X'vn{EIC", "", (-263));
      SubjectDemand subjectDemand1 = new SubjectDemand("", "", (-263));
      int int0 = subjectDemand0.compareTo(subjectDemand1);
      assertEquals("", subjectDemand0.getSubjectName());
      assertEquals((-263), subjectDemand1.getTotalDemand());
      assertEquals(11, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SubjectDemand subjectDemand0 = new SubjectDemand("", "", (-1290));
      SubjectDemand subjectDemand1 = new SubjectDemand("x*u", "", 869);
      int int0 = subjectDemand0.compareTo(subjectDemand1);
      assertEquals((-3), int0);
      assertEquals(869, subjectDemand1.getTotalDemand());
      assertEquals("", subjectDemand1.getSubjectName());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SubjectDemand subjectDemand0 = new SubjectDemand((String) null, "g[CD}i<,.iO3|0BJ2", 0);
      // Undeclared exception!
      try { 
        subjectDemand0.compareTo(subjectDemand0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.api.http.response.preenrollment.SubjectDemand", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SubjectDemand subjectDemand0 = new SubjectDemand("y_Y]", "y_Y]", 2474);
      // Undeclared exception!
      try { 
        subjectDemand0.compareTo("y_Y]");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to br.edu.ufcg.computacao.eureca.backend.api.http.response.preenrollment.SubjectDemand
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.api.http.response.preenrollment.SubjectDemand", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SubjectDemand subjectDemand0 = new SubjectDemand("y_Y]", "y_Y]", 2474);
      subjectDemand0.getSubjectCode();
      assertEquals(2474, subjectDemand0.getTotalDemand());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SubjectDemand subjectDemand0 = new SubjectDemand("<Q^>YH<<-[SYo", "<Q^>YH<<-[SYo", 0);
      String string0 = subjectDemand0.toString();
      assertEquals("DetailedSubjectDemand{subjectCode='<Q^>YH<<-[SYo', subjectName='<Q^>YH<<-[SYo', totalDemand=0}", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SubjectDemand subjectDemand0 = new SubjectDemand("<Q^>YH<<-[SYo", "<Q^>YH<<-[SYo", 0);
      subjectDemand0.compareTo(subjectDemand0);
      assertEquals(0, subjectDemand0.getTotalDemand());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SubjectDemand subjectDemand0 = new SubjectDemand("<Q^>YH<<-[SYo", "<Q^>YH<<-[SYo", 0);
      int int0 = subjectDemand0.getTotalDemand();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SubjectDemand subjectDemand0 = new SubjectDemand("y_Y]", "y_Y]", 2474);
      subjectDemand0.getSubjectName();
      assertEquals(2474, subjectDemand0.getTotalDemand());
  }
}
