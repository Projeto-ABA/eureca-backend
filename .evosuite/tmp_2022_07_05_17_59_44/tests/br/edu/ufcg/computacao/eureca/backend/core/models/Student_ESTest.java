/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 05 21:59:59 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.core.models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.edu.ufcg.computacao.eureca.backend.core.models.Curriculum;
import br.edu.ufcg.computacao.eureca.backend.core.models.Registration;
import br.edu.ufcg.computacao.eureca.backend.core.models.Student;
import br.edu.ufcg.computacao.eureca.backend.core.models.StudentStatus;
import com.google.common.collect.BoundType;
import java.time.ZoneId;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import java.util.PriorityQueue;
import java.util.Set;
import java.util.Stack;
import java.util.TreeSet;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Student_ESTest extends Student_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Stack<String> stack0 = new Stack<String>();
      Curriculum curriculum0 = new Curriculum((String) null, "P!Y62QA;We4Xa!8}A?F", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 1627, 1627, 10, 1627, 4660, 550, 550, 378, (-635), 4, stack0, stack0, stack0, stack0, stack0);
      Student student0 = new Student("(d*]G?9]1yt", (String) null, (String) null, "=,\"", "=,\"", "(d*]G?9]1yt", "Q4Tw{-!'$'i`Yl", (String) null, (String) null, "r!@nQ66* xdsd;Ed3=>", "Q^4 o1M=.Z", "Q4Tw{-!'$'i`Yl", studentStatus0, "8y-{|}oL0&v", "/::*N;Z1nVWvg\"(}AWQ", (String) null, "=,\"", "mdTqACF&F>K_M_$5f", "Q^4 o1M=.Z", (String) null, "CANCELADO NOVO INGRESSO OUTRO CURSO", (String) null, curriculum0, 4660, 1627, (-1111), (-1111), (-635), (-1652), 10, (-1111), 0.0, 0.0, (-1111), 550, 0, 0, 14, 0.5);
      student0.computeRiskClass();
      assertEquals("=,\"", student0.getEmail());
      assertEquals("Q4Tw{-!'$'i`Yl", student0.getMaritalStatus());
      assertEquals("mdTqACF&F>K_M_$5f", student0.getAffirmativePolicy());
      assertEquals("=,\"", student0.getBirthDate());
      assertEquals("(d*]G?9]1yt", student0.getGender());
      assertEquals((-1136), student0.getCompletedCredits());
      assertEquals("CANCELADO NOVO INGRESSO OUTRO CURSO", student0.getCourseCode());
      assertEquals("Q^4 o1M=.Z", student0.getRace());
      assertEquals("8y-{|}oL0&v", student0.getStatusTerm());
      assertEquals((-1111), student0.getCompletedTerms());
      assertEquals("/::*N;Z1nVWvg\"(}AWQ", student0.getAdmissionStr());
      assertEquals(0, student0.getInstitutionalEnrollments());
      assertEquals("=,\"", student0.getDisabilities());
      assertEquals("Q4Tw{-!'$'i`Yl", student0.getStatusStr());
      assertEquals("Q^4 o1M=.Z", student0.getSecondarySchool());
      assertEquals("r!@nQ66* xdsd;Ed3=>", student0.getPlaceOfBirth());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("", "", "", "Suppliers.supplierFunction()", "A|2MI'D=lI", "", "", "", "Suppliers.supplierFunction()", "", "", "3?6>aS", studentStatus0, "", "5ro", "", "A|2MI'D=lI", "Suppliers.supplierFunction()", "", "", "", ", curriculumCode='", (Curriculum) null, 1110, 9, 1110, (-68), (-68), 1110, 1110, 9, (-68), (-68), (-68), (-68), 1110, 1196, 228, 2939.3);
      student0.isDropout();
      assertEquals("Suppliers.supplierFunction()", student0.getBirthDate());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("", student0.getRace());
      assertEquals(", curriculumCode='", student0.getCurriculumCode());
      assertEquals("5ro", student0.getAdmissionStr());
      assertEquals("", student0.getMaritalStatus());
      assertEquals("A|2MI'D=lI", student0.getDisabilities());
      assertEquals("", student0.getNationality());
      assertEquals("", student0.getCourseCode());
      assertEquals("3?6>aS", student0.getStatusStr());
      assertEquals("", student0.getGender());
      assertEquals("", student0.getStatusTerm());
      assertEquals("Suppliers.supplierFunction()", student0.getCountry());
      assertEquals("Suppliers.supplierFunction()", student0.getAffirmativePolicy());
      assertEquals("A|2MI'D=lI", student0.getEmail());
      assertEquals("", student0.getSecondarySchool());
      assertEquals("", student0.getNationalId());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getName());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("", "r{hUK|X=B9ddB", "r{hUK|X=B9ddB", ", optionalCredits=", ", optionalCredits=", "~`FE!$gc=3F", "", ", optionalCredits=", "", "", "dvDTa3WW5'v_", "", studentStatus0, ", optionalCredits=", "~`FE!$gc=3F", "com.google.common.collect.Ordering", "", "com.google.common.collect.Ordering", ", statusStr='", "r{hUK|X=B9ddB", "", "", (Curriculum) null, 44, 44, 44, 0, 44, 0, 0, 44, 0.0, 0, 0, (-4811), (-4811), 0, 6, 0.0);
      student0.isAlumnus();
      assertEquals("", student0.getCourseCode());
      assertEquals("r{hUK|X=B9ddB", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getMaritalStatus());
      assertEquals(", optionalCredits=", student0.getEmail());
      assertEquals(", optionalCredits=", student0.getStatusTerm());
      assertEquals("r{hUK|X=B9ddB", student0.getNationalId());
      assertEquals(", optionalCredits=", student0.getBirthDate());
      assertEquals("~`FE!$gc=3F", student0.getGender());
      assertEquals("r{hUK|X=B9ddB", student0.getName());
      assertEquals(", optionalCredits=", student0.getNationality());
      assertEquals("dvDTa3WW5'v_", student0.getRace());
      assertEquals(", statusStr='", student0.getSecondarySchool());
      assertEquals("com.google.common.collect.Ordering", student0.getAdmissionTerm());
      assertEquals("com.google.common.collect.Ordering", student0.getAffirmativePolicy());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("", student0.getDisabilities());
      assertEquals("", student0.getCurriculumCode());
      assertEquals("", student0.getCountry());
      assertEquals("~`FE!$gc=3F", student0.getAdmissionStr());
      assertEquals("", student0.getStatusStr());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(arrayList0);
      Curriculum curriculum0 = new Curriculum("", ", admissionTerm='", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-1275), 2231, (-1275), (-1275), (-1275), (-1275), 136, (-994), 2231, 3835, arrayList0, arrayList0, arrayList0, arrayDeque0, arrayDeque0);
      Student student0 = new Student("7G8", "7G8", "7G8", "7G8", "7G8", "7G8", "Z3})79fylmsdg3w[!:[", (String) null, "7G8", ", completedTerms=", "", "", studentStatus0, "CANCELAMENTO DE MATRICULA ", "(/W\"P~kJ8!p'", (String) null, ", affirmativePolicy='", "7G8", (String) null, "", "", "com.google.common.primitives.Doubles$DoubleConverter", curriculum0, 136, 4, (-600), 3835, 32, 0, 136, 3835, (-600), 208.18472875025, (-1351), (-1351), (-268), (-1351), (-268), 208.18472875025);
      student0.isActive();
      assertEquals("", student0.getRace());
      assertEquals("", student0.getCourseCode());
      assertEquals("7G8", student0.getCountry());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getStatusStr());
      assertEquals("7G8", student0.getGender());
      assertEquals(", affirmativePolicy='", student0.getDisabilities());
      assertEquals(", completedTerms=", student0.getPlaceOfBirth());
      assertEquals("7G8", student0.getAffirmativePolicy());
      assertEquals("com.google.common.primitives.Doubles$DoubleConverter", student0.getCurriculumCode());
      assertEquals("7G8", student0.getEmail());
      assertEquals("7G8", student0.getName());
      assertEquals("CANCELAMENTO DE MATRICULA ", student0.getStatusTerm());
      assertEquals("7G8", student0.getBirthDate());
      assertEquals("7G8", student0.getNationalId());
      assertEquals("(/W\"P~kJ8!p'", student0.getAdmissionStr());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("", "", "JDpm{f^HdxKN9", ", curriculum='", "gA*Pp1", "{[t-rQ,UYH6Hj]X9X", ", iea=", "BloomFilters must have equal strategies (%s != %s)", "", (String) null, "gA*Pp1", "BloomFilters must have equal strategies (%s != %s)", studentStatus0, "", ", iea=", ", curriculum='", "", "", "", "k+Qb%~u,.}kNGWj~h", "", "k+Qb%~u,.}kNGWj~h", (Curriculum) null, 0, 0, 0, 5760, 0, 448, 306654252, 448, 4.9E-324, (-348.42255742), 2828, 4806, 4806, (-1076), 5760, 2828);
      student0.getSuspendedTerms();
      assertEquals(", curriculum='", student0.getBirthDate());
      assertEquals("k+Qb%~u,.}kNGWj~h", student0.getCurriculumCode());
      assertEquals("BloomFilters must have equal strategies (%s != %s)", student0.getStatusStr());
      assertEquals("", student0.getStatusTerm());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals(", iea=", student0.getMaritalStatus());
      assertEquals("{[t-rQ,UYH6Hj]X9X", student0.getGender());
      assertEquals(", curriculum='", student0.getAdmissionTerm());
      assertEquals("BloomFilters must have equal strategies (%s != %s)", student0.getNationality());
      assertEquals("", student0.getCountry());
      assertEquals("", student0.getDisabilities());
      assertEquals("JDpm{f^HdxKN9", student0.getName());
      assertEquals("k+Qb%~u,.}kNGWj~h", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getCourseCode());
      assertEquals("gA*Pp1", student0.getRace());
      assertEquals("", student0.getNationalId());
      assertEquals("", student0.getSecondarySchool());
      assertEquals("gA*Pp1", student0.getEmail());
      assertEquals(", iea=", student0.getAdmissionStr());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("Functions.forSupplier(", "Functions.forSupplier(", "Functions.forSupplier(", "Functions.forSupplier(", "Functions.forSupplier(", "Functions.forSupplier(", "2}xbnaK%g}lj0_IR", "", "nl'!:~y", "2}xbnaK%g}lj0_IR", "NOT_APPLICABLE", "CONCLUIDO - NAO COLOU GRAU", studentStatus0, "l5QL.wZQf", "", ", enrolledCredits=", "", "", "", "nl'!:~y", "Functions.forSupplier(", "", (Curriculum) null, 3, 3, 1155, 12288, 0, 0, (-2088), (-1500.73471), 12288, 0, 12288, (-298), 7, 1155, 0, (-2088));
      student0.getSuspendedTerms();
      assertEquals("nl'!:~y", student0.getSecondarySchoolGraduationYear());
      assertEquals("Functions.forSupplier(", student0.getEmail());
      assertEquals(", enrolledCredits=", student0.getAdmissionTerm());
      assertEquals("", student0.getCurriculumCode());
      assertEquals("Functions.forSupplier(", student0.getName());
      assertEquals("l5QL.wZQf", student0.getStatusTerm());
      assertEquals("", student0.getAdmissionStr());
      assertEquals("NOT_APPLICABLE", student0.getRace());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getStatusStr());
      assertEquals("nl'!:~y", student0.getCountry());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("2}xbnaK%g}lj0_IR", student0.getPlaceOfBirth());
      assertEquals("", student0.getDisabilities());
      assertEquals("Functions.forSupplier(", student0.getNationalId());
      assertEquals("Functions.forSupplier(", student0.getBirthDate());
      assertEquals("Functions.forSupplier(", student0.getCourseCode());
      assertEquals("2}xbnaK%g}lj0_IR", student0.getMaritalStatus());
      assertEquals("", student0.getNationality());
      assertEquals("Functions.forSupplier(", student0.getGender());
      assertEquals("", student0.getSecondarySchool());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("f99", ", optionalCredits=", "", "dvDTa3WW5'v_", "r{hUK|X=B9ddB", "", "', '", "", ", secondarySchool='", (String) null, "Ln", "", studentStatus0, (String) null, "7ID", "]:r1P", "null", "B", ", secondarySchool='", ", secondarySchool='", ", electiveSubjectsList=", "dvDTa3WW5'v_", (Curriculum) null, 6, (-2264), 125, 3491, 0, 0, 125, 0.0, 6, 0, (-2666), 2369, 6, 2369, 0, (-2666));
      String string0 = student0.getStatusTerm();
      assertEquals("dvDTa3WW5'v_", student0.getBirthDate());
      assertEquals("null", student0.getDisabilities());
      assertEquals("", student0.getStatusStr());
      assertEquals(", secondarySchool='", student0.getSecondarySchoolGraduationYear());
      assertEquals(", electiveSubjectsList=", student0.getCourseCode());
      assertNull(string0);
      assertEquals("dvDTa3WW5'v_", student0.getCurriculumCode());
      assertEquals(", optionalCredits=", student0.getNationalId());
      assertEquals("', '", student0.getMaritalStatus());
      assertEquals(", secondarySchool='", student0.getCountry());
      assertEquals("", student0.getNationality());
      assertEquals(", secondarySchool='", student0.getSecondarySchool());
      assertEquals("]:r1P", student0.getAdmissionTerm());
      assertEquals("", student0.getName());
      assertEquals("B", student0.getAffirmativePolicy());
      assertEquals("Ln", student0.getRace());
      assertEquals("", student0.getGender());
      assertEquals("r{hUK|X=B9ddB", student0.getEmail());
      assertEquals("7ID", student0.getAdmissionStr());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student("", "", "", (String) null, (String) null, "", "%PUC8e=ncv", "", "wKlm'Ru#J}@CQ]_\r1", "", "", (String) null, studentStatus0, "0h6^xCkg+%", "%PUC8e=ncv", (String) null, (String) null, "", "", "%PUC8e=ncv", ":", "", (Curriculum) null, (-1228), 2, 2, 2, (-1228), (-1228), 2, (-1228), (-1228), (-1228), 0, 0, 2, (-2490), (-1228), (-2490));
      String string0 = student0.getStatusTerm();
      assertNotNull(string0);
      assertEquals("%PUC8e=ncv", student0.getMaritalStatus());
      assertEquals(":", student0.getCourseCode());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("", student0.getName());
      assertEquals("0h6^xCkg+%", string0);
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("", student0.getRace());
      assertEquals("%PUC8e=ncv", student0.getAdmissionStr());
      assertEquals("", student0.getGender());
      assertEquals("wKlm'Ru#J}@CQ]_\r1", student0.getCountry());
      assertEquals("%PUC8e=ncv", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getSecondarySchool());
      assertEquals("", student0.getCurriculumCode());
      assertEquals("", student0.getNationalId());
      assertEquals("", student0.getNationality());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("#^d&;9Y", "#^d&;9Y", "#^d&;9Y", "#^d&;9Y", "2#_<}+em!J", "aXfQdL5aoL/aN,B 3", "com.google.common.base.Predicates$CompositionPredicate", "#^d&;9Y", ", placeOfBirth='", "aXfQdL5aoL/aN,B 3", "#^d&;9Y", (String) null, studentStatus0, "2#_<}+em!J", "2#_<}+em!J", "com.google.common.base.Predicates$CompositionPredicate", (String) null, "#^d&;9Y", (String) null, "`.}M=mSuF}", ", placeOfBirth='", "org.apache.commons.io.filefilter.HiddenFileFilter", (Curriculum) null, 0, 0, 0, 5, 5, 97, 5, 0, 0, 5, 5, 11, 0, 11, (-3668), 0.0);
      String string0 = student0.getStatusStr();
      assertEquals("org.apache.commons.io.filefilter.HiddenFileFilter", student0.getCurriculumCode());
      assertEquals("#^d&;9Y", student0.getNationality());
      assertEquals("aXfQdL5aoL/aN,B 3", student0.getPlaceOfBirth());
      assertEquals("#^d&;9Y", student0.getBirthDate());
      assertEquals(", placeOfBirth='", student0.getCourseCode());
      assertEquals("#^d&;9Y", student0.getName());
      assertEquals("`.}M=mSuF}", student0.getSecondarySchoolGraduationYear());
      assertEquals("#^d&;9Y", student0.getNationalId());
      assertEquals("com.google.common.base.Predicates$CompositionPredicate", student0.getMaritalStatus());
      assertEquals("2#_<}+em!J", student0.getAdmissionStr());
      assertEquals("com.google.common.base.Predicates$CompositionPredicate", student0.getAdmissionTerm());
      assertNull(string0);
      assertEquals("2#_<}+em!J", student0.getEmail());
      assertEquals(", placeOfBirth='", student0.getCountry());
      assertEquals("2#_<}+em!J", student0.getStatusTerm());
      assertEquals("#^d&;9Y", student0.getAffirmativePolicy());
      assertEquals("#^d&;9Y", student0.getRace());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student((String) null, " P", (String) null, "", "", (String) null, "*:YWNC", (String) null, "", "", (String) null, "", studentStatus0, "*:YWNC", "", "", " P", (String) null, "*:YWNC", "", "", "", (Curriculum) null, 125, 0, 4, 1711, 125, 4, 1711, (-1421.47882908), (-1421.47882908), 1711, 125, 0, 125, 1069, (-3167), 0.03);
      String string0 = student0.getStatusStr();
      assertEquals("", student0.getCurriculumCode());
      assertEquals("", string0);
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("", student0.getAdmissionStr());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("*:YWNC", student0.getStatusTerm());
      assertEquals("*:YWNC", student0.getSecondarySchool());
      assertEquals("", student0.getBirthDate());
      assertEquals(" P", student0.getNationalId());
      assertEquals("", student0.getEmail());
      assertEquals("*:YWNC", student0.getMaritalStatus());
      assertEquals("", student0.getCourseCode());
      assertEquals(" P", student0.getDisabilities());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum((String) null, "\"<^B]", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 5, (-1837), (-1837), 1390, 246, 1390, 246, 246, (-1837), (-1837), set0, set0, set0, set0, set0);
      Student student0 = new Student("", "", "", "", "05h`g<<0$EZd3W", "05h`g<<0$EZd3W", (String) null, "CANCELAMENTO P/ SOLICITACAO ALUNO", "", "", "", "LOW", studentStatus0, "CANCELAMENTO P/ SOLICITACAO ALUNO", "CANCELAMENTO P/ SOLICITACAO ALUNO", (String) null, "w+)Afxyy&V[4IkR", "", "-GQmp;)", "yy5f8Nf.lC-", "\"<^B]", "Cfu*", curriculum0, 9, 1390, 4131, 246, 9, 1390, 246, 0.0, (-1837), 5, 4131, (-1837), 1390, (-1837), 246, 1390);
      student0.setStatus((StudentStatus) null);
      student0.getStatus();
      assertEquals("LOW", student0.getStatusStr());
      assertEquals("05h`g<<0$EZd3W", student0.getGender());
      assertEquals("\"<^B]", student0.getCourseCode());
      assertEquals("", student0.getCountry());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("", student0.getRace());
      assertEquals("CANCELAMENTO P/ SOLICITACAO ALUNO", student0.getAdmissionStr());
      assertEquals("Cfu*", student0.getCurriculumCode());
      assertEquals("CANCELAMENTO P/ SOLICITACAO ALUNO", student0.getStatusTerm());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("yy5f8Nf.lC-", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getNationalId());
      assertEquals("", student0.getBirthDate());
      assertEquals("-GQmp;)", student0.getSecondarySchool());
      assertEquals("w+)Afxyy&V[4IkR", student0.getDisabilities());
      assertEquals("05h`g<<0$EZd3W", student0.getEmail());
      assertEquals("CANCELAMENTO P/ SOLICITACAO ALUNO", student0.getNationality());
      assertEquals("", student0.getName());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("", "", "", "pa0", "", ", mobilityTerms=", (String) null, "", "", "pZ'=?H,{C(Av/", "", "", studentStatus0, (String) null, ", optionalCredits=", "", "pZ'=?H,{C(Av/", "Js0PD{Zc40kXt42t-,", "wfC=Sv;C6Uj[HY#vz_A", (String) null, "pa0", "Js0PD{Zc40kXt42t-,", (Curriculum) null, 0, 3970, 1046, 39, 3970, 2817, (-2774), (-147.72623605245), (-147.72623605245), 0.0, 159, (-1738), 0, (-3889), 1478, 0.0);
      String string0 = student0.getSecondarySchoolGraduationYear();
      assertEquals("Js0PD{Zc40kXt42t-,", student0.getAffirmativePolicy());
      assertEquals("", student0.getCountry());
      assertEquals("", student0.getRace());
      assertEquals("Js0PD{Zc40kXt42t-,", student0.getCurriculumCode());
      assertEquals(", mobilityTerms=", student0.getGender());
      assertEquals("pa0", student0.getCourseCode());
      assertEquals("pZ'=?H,{C(Av/", student0.getPlaceOfBirth());
      assertEquals("pa0", student0.getBirthDate());
      assertEquals("wfC=Sv;C6Uj[HY#vz_A", student0.getSecondarySchool());
      assertEquals("", student0.getStatusStr());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("", student0.getNationality());
      assertEquals("", student0.getName());
      assertEquals("", student0.getEmail());
      assertNull(string0);
      assertEquals("", student0.getNationalId());
      assertEquals("pZ'=?H,{C(Av/", student0.getDisabilities());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Vector<String> vector0 = new Vector<String>();
      Curriculum curriculum0 = new Curriculum("!#yOOn%", "CharMatcher.javaLetter()", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 247, 247, 0, 0, (-1330), (-1330), (-325), 64, 64, (-325), vector0, vector0, vector0, vector0, vector0);
      Student student0 = new Student("springfox.documentation.schema.ModelReferenceProvider", "$23bMJZ-O=e-@Rm", "!#yOOn%", "springfox.documentation.schema.ModelReferenceProvider", "$23bMJZ-O=e-@Rm", "b5jts|l%kA|j3LlL]", "x", "!#yOOn%", "x", "", "", "O&> Moy/0;mPwO;A1+", studentStatus0, "", "", "_vK4bmy>SN2Ct", "Aa", "", "", "", "O&> Moy/0;mPwO;A1+", ", completedTerms=", curriculum0, (-325), 756, 0, (-1069), 1, 883, 756, (-325), 1, 4162.5612, 39, 756, (-179), (-1330), (-4229), 0.0);
      String string0 = student0.getSecondarySchoolGraduationYear();
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("_vK4bmy>SN2Ct", student0.getAdmissionTerm());
      assertEquals("O&> Moy/0;mPwO;A1+", student0.getStatusStr());
      assertEquals("", student0.getStatusTerm());
      assertEquals("", student0.getAdmissionStr());
      assertEquals("", string0);
      assertEquals("O&> Moy/0;mPwO;A1+", student0.getCourseCode());
      assertEquals("x", student0.getMaritalStatus());
      assertEquals("x", student0.getCountry());
      assertEquals("!#yOOn%", student0.getName());
      assertEquals("", student0.getRace());
      assertEquals("Aa", student0.getDisabilities());
      assertEquals("$23bMJZ-O=e-@Rm", student0.getEmail());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("!#yOOn%", student0.getNationality());
      assertEquals("springfox.documentation.schema.ModelReferenceProvider", student0.getBirthDate());
      assertEquals(", completedTerms=", student0.getCurriculumCode());
      assertEquals("", student0.getSecondarySchool());
      assertEquals("b5jts|l%kA|j3LlL]", student0.getGender());
      assertEquals("$23bMJZ-O=e-@Rm", student0.getNationalId());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      Curriculum curriculum0 = new Curriculum((String) null, (String) null, arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, (-730), (-730), 1276, (-730), 2087, 1276, 2087, 2087, (-730), 1276, arrayDeque0, arrayDeque0, arrayDeque0, arrayDeque0, arrayDeque0);
      Student student0 = new Student("", "", "", "L<)VQ{YkigF", "v|ddSv", (String) null, "v|ddSv", (String) null, (String) null, (String) null, (String) null, "v|ddSv", studentStatus0, "", (String) null, "L<)VQ{YkigF", "*]YS3L=S", "L<)VQ{YkigF", (String) null, "", "", "", curriculum0, (-67), (-730), 0, (-67), 0, (-730), (-730), 700.6233289920624, 0, (-1.0), 0, 0, 0, 0, 0, 2087);
      String string0 = student0.getSecondarySchool();
      assertEquals("v|ddSv", student0.getMaritalStatus());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals("v|ddSv", student0.getEmail());
      assertEquals("L<)VQ{YkigF", student0.getBirthDate());
      assertNull(string0);
      assertEquals("", student0.getCourseCode());
      assertEquals("v|ddSv", student0.getStatusStr());
      assertEquals("", student0.getNationalId());
      assertEquals("*]YS3L=S", student0.getDisabilities());
      assertEquals("L<)VQ{YkigF", student0.getAffirmativePolicy());
      assertEquals("L<)VQ{YkigF", student0.getAdmissionTerm());
      assertEquals("", student0.getCurriculumCode());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student((String) null, "6Vg(5;7e/rO&5p,O1`,", (String) null, (String) null, "3>NNoEZ/OPI:.!?", "3z7OIKbQ", "3>NNoEZ/OPI:.!?", "6Vg(5;7e/rO&5p,O1`,", "6Vg(5;7e/rO&5p,O1`,", (String) null, "", "3>NNoEZ/OPI:.!?", studentStatus0, "", "", "3>NNoEZ/OPI:.!?", "", "com.google.common.collect.Range", "6Vg(5;7e/rO&5p,O1`,", "3z7OIKbQ", "com.google.common.collect.Range", "8sBY(tR-", (Curriculum) null, 0, 3505, 3505, 12, 0, 12, 12, 1693.1, (-113.70989444), 1.0, 12, 3505, (-1046), 806, (-1046), (-113.70989444));
      String string0 = student0.getSecondarySchool();
      assertEquals("3>NNoEZ/OPI:.!?", student0.getEmail());
      assertEquals("", student0.getDisabilities());
      assertEquals("", student0.getRace());
      assertEquals("6Vg(5;7e/rO&5p,O1`,", string0);
      assertEquals("", student0.getStatusTerm());
      assertEquals("3z7OIKbQ", student0.getGender());
      assertEquals("com.google.common.collect.Range", student0.getAffirmativePolicy());
      assertEquals("6Vg(5;7e/rO&5p,O1`,", student0.getCountry());
      assertEquals("", student0.getAdmissionStr());
      assertEquals("3>NNoEZ/OPI:.!?", student0.getAdmissionTerm());
      assertEquals("6Vg(5;7e/rO&5p,O1`,", student0.getNationalId());
      assertEquals("3>NNoEZ/OPI:.!?", student0.getMaritalStatus());
      assertEquals("3>NNoEZ/OPI:.!?", student0.getStatusStr());
      assertEquals("com.google.common.collect.Range", student0.getCourseCode());
      assertEquals("6Vg(5;7e/rO&5p,O1`,", student0.getNationality());
      assertEquals("8sBY(tR-", student0.getCurriculumCode());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("com.google.common.base.CharMatcher$IsEither", "com.google.common.base.CharMatcher$IsEither", "com.google.common.base.CharMatcher$IsEither", "com.google.common.base.CharMatcher$IsEither", "m3v8oeZ5s'l_Oi", "", "!bZM&$>`4", "", "", "m3v8oeZ5s'l_Oi", "com.google.common.base.CharMatcher$IsEither", "", studentStatus0, "", "!bZM&$>`4", "_R]4", "", "", "", "m3v8oeZ5s'l_Oi", "", "I}KmeF%b", (Curriculum) null, 744, 744, 744, 744, 744, 744, (-382), 744, 744, (-666.69966554241), (-382), 744, (-1391), 744, 744, 0.0);
      student0.setRegistration((Registration) null);
      student0.getRegistration();
      assertEquals("!bZM&$>`4", student0.getMaritalStatus());
      assertEquals("", student0.getGender());
      assertEquals("", student0.getSecondarySchool());
      assertEquals("", student0.getCourseCode());
      assertEquals("", student0.getStatusStr());
      assertEquals("com.google.common.base.CharMatcher$IsEither", student0.getName());
      assertEquals("", student0.getCountry());
      assertEquals("", student0.getDisabilities());
      assertEquals("m3v8oeZ5s'l_Oi", student0.getPlaceOfBirth());
      assertEquals("m3v8oeZ5s'l_Oi", student0.getSecondarySchoolGraduationYear());
      assertEquals("com.google.common.base.CharMatcher$IsEither", student0.getRace());
      assertEquals("", student0.getNationality());
      assertEquals("!bZM&$>`4", student0.getAdmissionStr());
      assertEquals("m3v8oeZ5s'l_Oi", student0.getEmail());
      assertEquals("I}KmeF%b", student0.getCurriculumCode());
      assertEquals("", student0.getStatusTerm());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("com.google.common.base.CharMatcher$IsEither", student0.getBirthDate());
      assertEquals("com.google.common.base.CharMatcher$IsEither", student0.getNationalId());
      assertEquals("_R]4", student0.getAdmissionTerm());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student((String) null, (String) null, (String) null, "TRANSFERIDO PARA OUTRA IES", "TRANSFERIDO PARA OUTRA IES", "TRANSFERIDO PARA OUTRA IES", (String) null, "HWK?52B;3g|t?&", (String) null, "zirW\"SG;@Yl-y*8", (String) null, (String) null, studentStatus0, ", curriculum='", "zirW\"SG;@Yl-y*8", (String) null, "ex$8#A\"b qq", (String) null, "TRANSFERIDO PARA OUTRA IES", "ex$8#A\"b qq", (String) null, "INSTANCE", (Curriculum) null, 0, 0, 0, 0, (-355), 0, 0, 4769.995, 0, 1.0, (-383), (-355), 1271, 982, 2911, 1300.3382697926);
      String string0 = student0.getRace();
      assertEquals(", curriculum='", student0.getStatusTerm());
      assertEquals("zirW\"SG;@Yl-y*8", student0.getPlaceOfBirth());
      assertEquals("INSTANCE", student0.getCurriculumCode());
      assertEquals("TRANSFERIDO PARA OUTRA IES", student0.getEmail());
      assertEquals("TRANSFERIDO PARA OUTRA IES", student0.getGender());
      assertEquals("TRANSFERIDO PARA OUTRA IES", student0.getBirthDate());
      assertEquals("ex$8#A\"b qq", student0.getDisabilities());
      assertEquals("ex$8#A\"b qq", student0.getSecondarySchoolGraduationYear());
      assertNull(string0);
      assertEquals("HWK?52B;3g|t?&", student0.getNationality());
      assertEquals("zirW\"SG;@Yl-y*8", student0.getAdmissionStr());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Stack<String> stack0 = new Stack<String>();
      Curriculum curriculum0 = new Curriculum("*?", ", complementaryCredits=", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 0, 0, 0, 0, 2305, 1438, 0, Integer.MAX_VALUE, 2305, 8192, stack0, stack0, stack0, stack0, stack0);
      Student student0 = new Student("*N(}t", "*N(}t", "*N(}t", "*?", ", placeOfBirth='", "*?", "*N(}t", ", placeOfBirth='", ", suspendedTerms=", (String) null, "+7#2hu", (String) null, studentStatus0, "US~O\")QY\";G9", ", complementaryCredits=", "dxc1F/\"8_e9Zn#:i", "h\"/", ", placeOfBirth='", "dxc1F/\"8_e9Zn#:i", "*iubK{6L'L`)CF7ihQ", "*iubK{6L'L`)CF7ihQ", "~$&mp", curriculum0, 0, 0, 1438, (-375), 0, 8192, 1213, (-123.10257), Integer.MAX_VALUE, 1438, 0, 2305, 0, 0, (-375), 4.0);
      String string0 = student0.getRace();
      assertEquals(", suspendedTerms=", student0.getCountry());
      assertEquals("*iubK{6L'L`)CF7ihQ", student0.getCourseCode());
      assertEquals("US~O\")QY\";G9", student0.getStatusTerm());
      assertEquals("*N(}t", student0.getMaritalStatus());
      assertEquals("*?", student0.getBirthDate());
      assertEquals("+7#2hu", string0);
      assertEquals(", complementaryCredits=", student0.getAdmissionStr());
      assertEquals("*N(}t", student0.getNationalId());
      assertEquals("*iubK{6L'L`)CF7ihQ", student0.getSecondarySchoolGraduationYear());
      assertEquals("~$&mp", student0.getCurriculumCode());
      assertEquals("*N(}t", student0.getName());
      assertEquals(", placeOfBirth='", student0.getNationality());
      assertEquals(", placeOfBirth='", student0.getEmail());
      assertEquals("dxc1F/\"8_e9Zn#:i", student0.getAdmissionTerm());
      assertEquals("*?", student0.getGender());
      assertEquals("dxc1F/\"8_e9Zn#:i", student0.getSecondarySchool());
      assertEquals("h\"/", student0.getDisabilities());
      assertEquals(", placeOfBirth='", student0.getAffirmativePolicy());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      HashSet<String> hashSet0 = new HashSet<String>();
      Curriculum curriculum0 = new Curriculum("$;2\"", (String) null, arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 2, 2, (-1434), 2, 2, 0, 0, 0, 3, 0, hashSet0, hashSet0, hashSet0, hashSet0, hashSet0);
      Student student0 = new Student("$;2\"", "org.apache.commons.io.filefilter.AgeFileFilter", "org.apache.commons.io.filefilter.AgeFileFilter", "$;2\"", "$;2\"", "org.apache.commons.io.filefilter.AgeFileFilter", "$;2\"", "com.google.common.io.Files$FilePredicate", "org.apache.commons.io.filefilter.AgeFileFilter", (String) null, "d`-@;i", "t;Lu^@R*]:~&@&pj", studentStatus0, "org.apache.commons.io.filefilter.AgeFileFilter", "", "m:@8:kbQl}", "{]", "com.google.common.io.Files$FilePredicate", "nPu|'-eE&1IEaw&yn;j", (String) null, "i~n(uN06c3", "", curriculum0, 0, (-2919), (-130), 2, 0, 2, (-2919), 0, 0, 0, 0, 0, 0, 8, 0, 0);
      String string0 = student0.getPlaceOfBirth();
      assertEquals("org.apache.commons.io.filefilter.AgeFileFilter", student0.getName());
      assertEquals("com.google.common.io.Files$FilePredicate", student0.getNationality());
      assertEquals("org.apache.commons.io.filefilter.AgeFileFilter", student0.getStatusTerm());
      assertEquals("i~n(uN06c3", student0.getCourseCode());
      assertEquals("nPu|'-eE&1IEaw&yn;j", student0.getSecondarySchool());
      assertEquals("$;2\"", student0.getBirthDate());
      assertEquals("{]", student0.getDisabilities());
      assertEquals("$;2\"", student0.getEmail());
      assertEquals("com.google.common.io.Files$FilePredicate", student0.getAffirmativePolicy());
      assertNull(string0);
      assertEquals("", student0.getCurriculumCode());
      assertEquals("org.apache.commons.io.filefilter.AgeFileFilter", student0.getGender());
      assertEquals("", student0.getAdmissionStr());
      assertEquals("org.apache.commons.io.filefilter.AgeFileFilter", student0.getCountry());
      assertEquals("org.apache.commons.io.filefilter.AgeFileFilter", student0.getNationalId());
      assertEquals("t;Lu^@R*]:~&@&pj", student0.getStatusStr());
      assertEquals("d`-@;i", student0.getRace());
      assertEquals("$;2\"", student0.getMaritalStatus());
      assertEquals("m:@8:kbQl}", student0.getAdmissionTerm());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student((String) null, "1~ ]('L4", "", "", "", ", affirmativePolicy='", (String) null, ", nationality='", "MAek~L", "+HK@c`;O/^rH8xf9|*", "+HK@c`;O/^rH8xf9|*", "}j~~x@n-O%C0", studentStatus0, "br.edu.ufcg.computacao.eureca.backend.core.models.Student", " returned null keys or values from loadAll", "50", "", ", affirmativePolicy='", "k$[}.|", "CharMatcher.isNot('", "cFlCvy:\"[H", "", (Curriculum) null, 0, 0, 0, (-1), 4, (-3660), 0, 2.0, 128.95312099, 1449, 0, 2893, 2893, (-1650), (-1650), 6060);
      student0.getPlaceOfBirth();
      assertEquals("1~ ]('L4", student0.getNationalId());
      assertEquals("", student0.getCurriculumCode());
      assertEquals("br.edu.ufcg.computacao.eureca.backend.core.models.Student", student0.getStatusTerm());
      assertEquals("CharMatcher.isNot('", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getName());
      assertEquals("", student0.getEmail());
      assertEquals("cFlCvy:\"[H", student0.getCourseCode());
      assertEquals("", student0.getBirthDate());
      assertEquals("", student0.getDisabilities());
      assertEquals(", nationality='", student0.getNationality());
      assertEquals(" returned null keys or values from loadAll", student0.getAdmissionStr());
      assertEquals("k$[}.|", student0.getSecondarySchool());
      assertEquals(", affirmativePolicy='", student0.getGender());
      assertEquals("MAek~L", student0.getCountry());
      assertEquals("50", student0.getAdmissionTerm());
      assertEquals("}j~~x@n-O%C0", student0.getStatusStr());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Curriculum curriculum0 = new Curriculum((String) null, "|X&eh}BOJ--!Sy@Zs", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2093, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null);
      Student student0 = new Student("c0R&huXji'2G[", "c0R&huXji'2G[", "c0R&huXji'2G[", "", "c0R&huXji'2G[", ", gpa=", "", "", (String) null, "", "com.google.common.collect.Cut", "|X&eh}BOJ--!Sy@Zs", studentStatus0, "", "", "", (String) null, (String) null, ", courseCode='", "pjs3zg.2<", "", "com.google.common.collect.Cut", curriculum0, 0, 0, 0, 675, 0, (-3510), 0, (-1.0), 0.0, (-5319.991850448366), (-2898), 1, 924, 675, 0, (-1.0));
      int int0 = student0.getOptionalHours();
      assertEquals(", courseCode='", student0.getSecondarySchool());
      assertEquals(0, int0);
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("|X&eh}BOJ--!Sy@Zs", student0.getStatusStr());
      assertEquals("", student0.getCourseCode());
      assertEquals("", student0.getNationality());
      assertEquals("", student0.getBirthDate());
      assertEquals("com.google.common.collect.Cut", student0.getCurriculumCode());
      assertEquals("com.google.common.collect.Cut", student0.getRace());
      assertEquals("", student0.getStatusTerm());
      assertEquals(", gpa=", student0.getGender());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("", student0.getAdmissionStr());
      assertEquals("c0R&huXji'2G[", student0.getEmail());
      assertEquals("pjs3zg.2<", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getMaritalStatus());
      assertEquals("c0R&huXji'2G[", student0.getName());
      assertEquals("c0R&huXji'2G[", student0.getNationalId());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      HashMap<Student, String> hashMap0 = new HashMap<Student, String>();
      Collection<String> collection0 = hashMap0.values();
      Curriculum curriculum0 = new Curriculum("LH+%p", "", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 2196, 2196, 2196, 2196, 2196, 0, 159, 159, (-624), (-1926), (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, collection0, (Collection<String>) null);
      Student student0 = new Student("", "$;/{X", ":kSl>", ":kSl>", "Q,", "Q,", "U{x#cQ", "U{x#cQ", "U{x#cQ", "$;/{X", "", ";qn;f", studentStatus0, "", "", "Q,", "vz!O:n9,JL`2pKH", "U{x#cQ", ", mobilityTerms=", "25Z5", "Chi_", "", curriculum0, 0, 0, (-2189), 0, 0, (-2494), 0, (-1855.48917), (-624), 0.0, (-1926), (-1), 1910, 0, 9, 1910);
      int int0 = student0.getOptionalHours();
      assertEquals("U{x#cQ", student0.getNationality());
      assertEquals("$;/{X", student0.getPlaceOfBirth());
      assertEquals(", mobilityTerms=", student0.getSecondarySchool());
      assertEquals("", student0.getStatusTerm());
      assertEquals("U{x#cQ", student0.getAffirmativePolicy());
      assertEquals(":kSl>", student0.getName());
      assertEquals("Q,", student0.getGender());
      assertEquals("U{x#cQ", student0.getCountry());
      assertEquals("U{x#cQ", student0.getMaritalStatus());
      assertEquals(":kSl>", student0.getBirthDate());
      assertEquals("Q,", student0.getAdmissionTerm());
      assertEquals("$;/{X", student0.getNationalId());
      assertEquals(";qn;f", student0.getStatusStr());
      assertEquals("vz!O:n9,JL`2pKH", student0.getDisabilities());
      assertEquals("", student0.getRace());
      assertEquals("Chi_", student0.getCourseCode());
      assertEquals("", student0.getAdmissionStr());
      assertEquals((-2189), int0);
      assertEquals("25Z5", student0.getSecondarySchoolGraduationYear());
      assertEquals("Q,", student0.getEmail());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Vector<String> vector0 = new Vector<String>();
      Curriculum curriculum0 = new Curriculum("", ">CGnCQ=yn`=1dI|@p[H", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-2725), (-1117), (-1117), 1761, (-2725), 1761, 564, 1761, (-1117), 1, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0, vector0);
      Student student0 = new Student("", "", "", "[0FkXTN*#jtO-W", "[0FkXTN*#jtO-W", "[0FkXTN*#jtO-W", (String) null, "", "[0FkXTN*#jtO-W", (String) null, "[0FkXTN*#jtO-W", "", studentStatus0, "[0FkXTN*#jtO-W", "fOe.1e84N-641$d%", "\"N+OmA2v >\"t8M", "fOe.1e84N-641$d%", "", "", "", "", (String) null, curriculum0, 0, 1459, 564, 0, 0, 3540, 1, 0.0, (-2014.109412909924), 1459, 0, (-1117), 2581, 0, 158, 1761);
      int int0 = student0.getOptionalCredits();
      assertEquals("", student0.getCourseCode());
      assertEquals("", student0.getStatusStr());
      assertEquals("[0FkXTN*#jtO-W", student0.getStatusTerm());
      assertEquals("[0FkXTN*#jtO-W", student0.getCountry());
      assertEquals("", student0.getSecondarySchool());
      assertEquals("[0FkXTN*#jtO-W", student0.getRace());
      assertEquals("\"N+OmA2v >\"t8M", student0.getAdmissionTerm());
      assertEquals("[0FkXTN*#jtO-W", student0.getGender());
      assertEquals("", student0.getNationalId());
      assertEquals("", student0.getNationality());
      assertEquals("", student0.getName());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals(0, int0);
      assertEquals("fOe.1e84N-641$d%", student0.getAdmissionStr());
      assertEquals("[0FkXTN*#jtO-W", student0.getEmail());
      assertEquals("[0FkXTN*#jtO-W", student0.getBirthDate());
      assertEquals("fOe.1e84N-641$d%", student0.getDisabilities());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      TreeSet<Integer> treeSet0 = new TreeSet<Integer>();
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>(treeSet0);
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Curriculum curriculum0 = new Curriculum("Cannot combine a BloomFilter with itself.", ",s;q.7AjE-#$", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, (-3233), (-3233), (-788), (-1783), 0, (-788), 8232, (-3233), (-1783), (-3233), linkedList0, linkedList0, linkedList0, linkedList0, linkedList0);
      Student student0 = new Student((String) null, "", (String) null, "<K3", "", "Y`PLt aZOwvJGxLv[", "<K3", "Y`PLt aZOwvJGxLv[", "", ":o", "5{A,[7_", "", studentStatus0, "The list of suffixes must not be null", "The list of suffixes must not be null", "Y`PLt aZOwvJGxLv[", " 0cK\u0004d>y^", " 0cK\u0004d>y^", " 0cK\u0004d>y^", "cp/n=@WqJ_E^m@FaU", "5{A,[7_", "<K3", curriculum0, (-3233), 8232, 1633, 8232, 0, (-1453), 334, (-1783), (-1453), (-1783), 1633, 8232, 367, (-1783), 367, 0);
      student0.getOptionalCredits();
      assertEquals("5{A,[7_", student0.getCourseCode());
      assertEquals(":o", student0.getPlaceOfBirth());
      assertEquals("", student0.getEmail());
      assertEquals(" 0cK\u0004d>y^", student0.getSecondarySchool());
      assertEquals("<K3", student0.getBirthDate());
      assertEquals("cp/n=@WqJ_E^m@FaU", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getCountry());
      assertEquals("Y`PLt aZOwvJGxLv[", student0.getNationality());
      assertEquals("The list of suffixes must not be null", student0.getAdmissionStr());
      assertEquals("<K3", student0.getMaritalStatus());
      assertEquals("", student0.getStatusStr());
      assertEquals("Y`PLt aZOwvJGxLv[", student0.getAdmissionTerm());
      assertEquals("<K3", student0.getCurriculumCode());
      assertEquals(" 0cK\u0004d>y^", student0.getAffirmativePolicy());
      assertEquals(" 0cK\u0004d>y^", student0.getDisabilities());
      assertEquals("The list of suffixes must not be null", student0.getStatusTerm());
      assertEquals("", student0.getNationalId());
      assertEquals("Y`PLt aZOwvJGxLv[", student0.getGender());
      assertEquals("5{A,[7_", student0.getRace());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<String> arrayList0 = new ArrayList<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(arrayList0);
      Curriculum curriculum0 = new Curriculum("", ", admissionTerm='", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-1275), 2231, (-1275), (-1275), (-1275), (-1275), 136, (-994), 2231, 3835, arrayList0, arrayList0, arrayList0, arrayDeque0, arrayDeque0);
      Student student0 = new Student("7G8", "7G8", "7G8", "7G8", "7G8", "7G8", "Z3})79fylmsdg3w[!:[", (String) null, "7G8", ", completedTerms=", "", "", studentStatus0, "CANCELAMENTO DE MATRICULA ", "(/W\"P~kJ8!p'", (String) null, ", affirmativePolicy='", "7G8", (String) null, "", "", "com.google.common.primitives.Doubles$DoubleConverter", curriculum0, 136, 4, (-600), 3835, 32, 0, 136, 3835, (-600), 208.18472875025, (-1351), (-1351), (-268), (-1351), (-268), 208.18472875025);
      String string0 = student0.getNationality();
      assertEquals("", student0.getStatusStr());
      assertEquals("CANCELAMENTO DE MATRICULA ", student0.getStatusTerm());
      assertEquals(", affirmativePolicy='", student0.getDisabilities());
      assertEquals("com.google.common.primitives.Doubles$DoubleConverter", student0.getCurriculumCode());
      assertEquals("7G8", student0.getNationalId());
      assertEquals("7G8", student0.getGender());
      assertEquals("Z3})79fylmsdg3w[!:[", student0.getMaritalStatus());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getRace());
      assertEquals("7G8", student0.getName());
      assertEquals("(/W\"P~kJ8!p'", student0.getAdmissionStr());
      assertEquals("7G8", student0.getEmail());
      assertNull(string0);
      assertEquals("7G8", student0.getBirthDate());
      assertEquals("7G8", student0.getCountry());
      assertEquals(", completedTerms=", student0.getPlaceOfBirth());
      assertEquals("", student0.getCourseCode());
      assertEquals("7G8", student0.getAffirmativePolicy());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student(",aUX", "UNFEASIBLE", "!k_a", "UNFEASIBLE", "UNFEASIBLE", ",aUX", "!k_a", "Ul}(^Wn$L", "UNFEASIBLE", "Ul}(^Wn$L", ",aUX", "0=|\"D.fp$EAk", studentStatus0, "Ul}(^Wn$L", "Predicates.contains(", ", complementaryCredits=", "o&R_g4&^^6{XpQ|", "X9fyPY%X{IP\"OV:Q> ", "Predicates.contains(", "", ", statusStr='", "Ul}(^Wn$L", (Curriculum) null, 0, 0, (-2425), 0, 0, 14, 0, (-767.0), 0, (-1278.6685487954715), (-266), 9, 0, 14, 0, (-1278.6685487954715));
      String string0 = student0.getNationality();
      assertEquals(", complementaryCredits=", student0.getAdmissionTerm());
      assertEquals("o&R_g4&^^6{XpQ|", student0.getDisabilities());
      assertEquals("0=|\"D.fp$EAk", student0.getStatusStr());
      assertEquals("Ul}(^Wn$L", student0.getStatusTerm());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals("!k_a", student0.getMaritalStatus());
      assertEquals("Predicates.contains(", student0.getAdmissionStr());
      assertEquals("Ul}(^Wn$L", string0);
      assertEquals(", statusStr='", student0.getCourseCode());
      assertEquals(",aUX", student0.getRace());
      assertEquals("Predicates.contains(", student0.getSecondarySchool());
      assertEquals("UNFEASIBLE", student0.getCountry());
      assertEquals("Ul}(^Wn$L", student0.getPlaceOfBirth());
      assertEquals(",aUX", student0.getGender());
      assertEquals("Ul}(^Wn$L", student0.getCurriculumCode());
      assertEquals("!k_a", student0.getName());
      assertEquals("UNFEASIBLE", student0.getEmail());
      assertEquals("X9fyPY%X{IP\"OV:Q> ", student0.getAffirmativePolicy());
      assertEquals("UNFEASIBLE", student0.getNationalId());
      assertEquals("UNFEASIBLE", student0.getBirthDate());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Curriculum curriculum0 = new Curriculum(", curriculumCode='", (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-757), (-757), 0, 2288, 0, 2288, 9, 9, 2, 0, linkedList0, linkedList0, linkedList0, linkedList0, linkedList0);
      Student student0 = new Student(" Rg?[iHnO`iMN>H6,wc", " Rg?[iHnO`iMN>H6,wc", " Rg?[iHnO`iMN>H6,wc", " Rg?[iHnO`iMN>H6,wc", "w;L", ", curriculumCode='", "w;L", " Rg?[iHnO`iMN>H6,wc", "", "w;L", ", curriculumCode='", "Longs.stringConverter()", studentStatus0, "w;L", " Rg?[iHnO`iMN>H6,wc", "fiSN<FZf]E!Vg0zV", "fiSN<FZf]E!Vg0zV", "", (String) null, "Longs.stringConverter()", (String) null, "K&AE/[ka`q]1VM_}P5", curriculum0, (-757), 0, 2, (-1985), 0, 0, 2, 0, (-658.48208551), 9, 2288, 9, 612, 0, 0, 0);
      String string0 = student0.getNationalId();
      assertEquals(" Rg?[iHnO`iMN>H6,wc", string0);
      assertNotNull(string0);
      assertEquals(" Rg?[iHnO`iMN>H6,wc", student0.getBirthDate());
      assertEquals("Longs.stringConverter()", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("w;L", student0.getEmail());
      assertEquals(" Rg?[iHnO`iMN>H6,wc", student0.getName());
      assertEquals("w;L", student0.getStatusTerm());
      assertEquals("", student0.getCountry());
      assertEquals(" Rg?[iHnO`iMN>H6,wc", student0.getAdmissionStr());
      assertEquals("Longs.stringConverter()", student0.getStatusStr());
      assertEquals(", curriculumCode='", student0.getGender());
      assertEquals("fiSN<FZf]E!Vg0zV", student0.getDisabilities());
      assertEquals(", curriculumCode='", student0.getRace());
      assertEquals("K&AE/[ka`q]1VM_}P5", student0.getCurriculumCode());
      assertEquals("fiSN<FZf]E!Vg0zV", student0.getAdmissionTerm());
      assertEquals(" Rg?[iHnO`iMN>H6,wc", student0.getNationality());
      assertEquals("w;L", student0.getMaritalStatus());
      assertEquals("w;L", student0.getPlaceOfBirth());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student("MiJ0U", "", " returned null keys or values from loadAll", "MiJ0U", "QDOr", " d|", "QDOr", "=mgY`W,+", "9kH~D", " d|", "com.google.common.base.SmallCharMatcher", "k$[}.|", studentStatus0, ", affirmativePolicy='", "mHh\"mA93~~", "M", (String) null, "*\"IEG", "k$[}.|", ", nationality='", "", "Enums.stringConverter(", (Curriculum) null, (-10), 2287, 1449, (-10), 1449, 0, 649, 0.0, (-1327.1635498962955), 649, (-10), 6060, 6060, 2287, 1449, 0.0);
      String string0 = student0.getNationalId();
      assertEquals("Enums.stringConverter(", student0.getCurriculumCode());
      assertEquals("=mgY`W,+", student0.getNationality());
      assertEquals("QDOr", student0.getEmail());
      assertEquals("k$[}.|", student0.getStatusStr());
      assertEquals("*\"IEG", student0.getAffirmativePolicy());
      assertEquals("M", student0.getAdmissionTerm());
      assertEquals("MiJ0U", student0.getBirthDate());
      assertEquals("k$[}.|", student0.getSecondarySchool());
      assertEquals(", affirmativePolicy='", student0.getStatusTerm());
      assertEquals("", student0.getCourseCode());
      assertEquals("QDOr", student0.getMaritalStatus());
      assertEquals(" d|", student0.getPlaceOfBirth());
      assertEquals("mHh\"mA93~~", student0.getAdmissionStr());
      assertEquals(", nationality='", student0.getSecondarySchoolGraduationYear());
      assertEquals("com.google.common.base.SmallCharMatcher", student0.getRace());
      assertEquals(" d|", student0.getGender());
      assertEquals(" returned null keys or values from loadAll", student0.getName());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("4ip3}z.*u4", (String) null, (String) null, "", (String) null, (String) null, (String) null, "", "', '", (String) null, "", "vV,(wh", studentStatus0, "", ".Lv3l", (String) null, "", ", minActivitiesNeeded=", "w!;", "', '", ", nationality='", "P4N<UU", (Curriculum) null, 0, (-1161), 0, 0, (-1161), (-1161), 0, 0, (-1161), 0.0, 0, 0, (-1833), (-1833), 0, 0.0);
      String string0 = student0.getName();
      assertEquals(", nationality='", student0.getCourseCode());
      assertEquals(", minActivitiesNeeded=", student0.getAffirmativePolicy());
      assertEquals("P4N<UU", student0.getCurriculumCode());
      assertEquals("', '", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getDisabilities());
      assertNull(string0);
      assertEquals(".Lv3l", student0.getAdmissionStr());
      assertEquals("", student0.getRace());
      assertEquals("', '", student0.getCountry());
      assertEquals("vV,(wh", student0.getStatusStr());
      assertEquals("", student0.getStatusTerm());
      assertEquals("", student0.getNationality());
      assertEquals("w!;", student0.getSecondarySchool());
      assertEquals("", student0.getBirthDate());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("nfq>C+ZP\"", "Z3|t[a1", "", "nfq>C+ZP\"", "", "Z3|t[a1", "Z3|t[a1", "nfq>C+ZP\"", "nfq>C+ZP\"", "mtH|a|q~M`Cos%", "", "BCO>a'", studentStatus0, "Z3|t[a1", "Z3|t[a1", "p>=|=fOidv/P.*:l:]", (String) null, "BCO>a'", "p>=|=fOidv/P.*:l:]", "Z3|t[a1", "c_,4]=m6t5<$N`{_", (String) null, (Curriculum) null, 8202, 8202, (-3169), (-3169), 0, 0, 8202, 1739.7493, 50.3, 50.3, (-1137), 8202, 1519, 4594, (-3169), (-721.295514356));
      String string0 = student0.getName();
      assertEquals("Z3|t[a1", student0.getStatusTerm());
      assertEquals("", student0.getRace());
      assertEquals("mtH|a|q~M`Cos%", student0.getPlaceOfBirth());
      assertEquals("", string0);
      assertEquals("p>=|=fOidv/P.*:l:]", student0.getSecondarySchool());
      assertEquals("c_,4]=m6t5<$N`{_", student0.getCourseCode());
      assertEquals("BCO>a'", student0.getAffirmativePolicy());
      assertEquals("nfq>C+ZP\"", student0.getBirthDate());
      assertEquals("nfq>C+ZP\"", student0.getNationality());
      assertEquals("Z3|t[a1", student0.getMaritalStatus());
      assertEquals("nfq>C+ZP\"", student0.getCountry());
      assertEquals("Z3|t[a1", student0.getGender());
      assertEquals("Z3|t[a1", student0.getNationalId());
      assertEquals("Z3|t[a1", student0.getAdmissionStr());
      assertEquals("BCO>a'", student0.getStatusStr());
      assertEquals("p>=|=fOidv/P.*:l:]", student0.getAdmissionTerm());
      assertEquals("", student0.getEmail());
      assertEquals("Z3|t[a1", student0.getSecondarySchoolGraduationYear());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("JM'u%d1&=bS\"uPS#q", "JM'u%d1&=bS\"uPS#q", "", "", ", suspendedTerms=", ", suspendedTerms=", "!kk^[H", "", "", ", enrolledCredits=", ", suspendedTerms=", "", studentStatus0, "/I[t*]cHWfk", "", "ZsfY)D_ioy-=$;n", ", suspendedTerms=", "/I[t*]cHWfk", "", "", "JM'u%d1&=bS\"uPS#q", "", (Curriculum) null, 39, (-3127), 39, 39, (-3127), (-349), 39, 515.340056677437, 515.340056677437, 4.0, 39, 39, 10, 0, (-3127), 515.340056677437);
      int int0 = student0.getMobilityTerms();
      assertEquals("", student0.getAdmissionStr());
      assertEquals(", suspendedTerms=", student0.getDisabilities());
      assertEquals(", suspendedTerms=", student0.getRace());
      assertEquals("", student0.getSecondarySchool());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getStatusStr());
      assertEquals("/I[t*]cHWfk", student0.getAffirmativePolicy());
      assertEquals(", suspendedTerms=", student0.getEmail());
      assertEquals("ZsfY)D_ioy-=$;n", student0.getAdmissionTerm());
      assertEquals("", student0.getCountry());
      assertEquals("/I[t*]cHWfk", student0.getStatusTerm());
      assertEquals("JM'u%d1&=bS\"uPS#q", student0.getCourseCode());
      assertEquals("!kk^[H", student0.getMaritalStatus());
      assertEquals("", student0.getBirthDate());
      assertEquals("", student0.getName());
      assertEquals(0, int0);
      assertEquals("JM'u%d1&=bS\"uPS#q", student0.getNationalId());
      assertEquals("", student0.getCurriculumCode());
      assertEquals(", suspendedTerms=", student0.getGender());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Curriculum curriculum0 = new Curriculum((String) null, (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 2743, 0, 0, 39, (-707), (-417), 0, 2, 3196, 3, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null);
      Student student0 = new Student("", "", "M~I|/Fs'q|2gqcbgw", "M~I|/Fs'q|2gqcbgw", "", "com.google.common.collect.BoundType", "com.google.common.collect.BoundType", "M~I|/Fs'q|2gqcbgw", "", "com.google.common.collect.BoundType", "com.google.common.collect.BoundType", "&86", studentStatus0, "", "&86", "", "", "/P7fKWl2ntvwxbDn", (String) null, "", "", "/P7fKWl2ntvwxbDn", curriculum0, 164, 164, 0, 5, 3, (-417), 0, 0, 1.0, 4.0, 164, 0, 3196, (-345), 5, 1.0);
      student0.getMobilityTerms();
      assertEquals("&86", student0.getStatusStr());
      assertEquals("/P7fKWl2ntvwxbDn", student0.getAffirmativePolicy());
      assertEquals("", student0.getCourseCode());
      assertEquals("com.google.common.collect.BoundType", student0.getPlaceOfBirth());
      assertEquals("", student0.getDisabilities());
      assertEquals("/P7fKWl2ntvwxbDn", student0.getCurriculumCode());
      assertEquals("&86", student0.getAdmissionStr());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("", student0.getNationalId());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals("M~I|/Fs'q|2gqcbgw", student0.getNationality());
      assertEquals("M~I|/Fs'q|2gqcbgw", student0.getBirthDate());
      assertEquals("", student0.getEmail());
      assertEquals("", student0.getStatusTerm());
      assertEquals("com.google.common.collect.BoundType", student0.getMaritalStatus());
      assertEquals("com.google.common.collect.BoundType", student0.getRace());
      assertEquals("com.google.common.collect.BoundType", student0.getGender());
      assertEquals("M~I|/Fs'q|2gqcbgw", student0.getName());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("CharMatcher.or(", "CharMatcher.or(", (String) null, "CharMatcher.or(", "h{.4mz", ", statusTerm='", ", statusTerm='", "M=~2J0#NKS^<-jg", "M=~2J0#NKS^<-jg", (String) null, (String) null, "{l-Xf", studentStatus0, "CharMatcher.or(", "", ", statusTerm='", ", statusTerm='", "M=~2J0#NKS^<-jg", "~.ds{ED4@<7G|S<b", "~s ]o", "", "The array of prefixes must not be null", (Curriculum) null, 1315, (-11), 471, 1132, 1315, 471, 1132, 1315, 0.0, (-2575.03933), 0, 471, 1315, 1315, 415, 0.0);
      student0.getMc();
      assertEquals(", statusTerm='", student0.getDisabilities());
      assertEquals("h{.4mz", student0.getEmail());
      assertEquals("CharMatcher.or(", student0.getNationalId());
      assertEquals("{l-Xf", student0.getStatusStr());
      assertEquals("", student0.getCourseCode());
      assertEquals("M=~2J0#NKS^<-jg", student0.getCountry());
      assertEquals("~s ]o", student0.getSecondarySchoolGraduationYear());
      assertEquals(", statusTerm='", student0.getGender());
      assertEquals(", statusTerm='", student0.getMaritalStatus());
      assertEquals(", statusTerm='", student0.getAdmissionTerm());
      assertEquals("~.ds{ED4@<7G|S<b", student0.getSecondarySchool());
      assertEquals("The array of prefixes must not be null", student0.getCurriculumCode());
      assertEquals("M=~2J0#NKS^<-jg", student0.getAffirmativePolicy());
      assertEquals("M=~2J0#NKS^<-jg", student0.getNationality());
      assertEquals("CharMatcher.or(", student0.getBirthDate());
      assertEquals("CharMatcher.or(", student0.getStatusTerm());
      assertEquals("", student0.getAdmissionStr());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      TreeSet<String> treeSet0 = new TreeSet<String>(comparator0);
      Curriculum curriculum0 = new Curriculum("", "P!|ov|C^ Z5C=YVy3", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 0, 0, 0, 1, 2609, 0, 0, (-721), (-839), (-2121), treeSet0, treeSet0, treeSet0, treeSet0, treeSet0);
      Student student0 = new Student((String) null, (String) null, "", (String) null, "", "P!|ov|C^ Z5C=YVy3", "6 ^(7vm", "N+t!%", "", "", "6 ^(7vm", "com.google.common.base.Converter$ReverseConverter", studentStatus0, "com.google.common.base.Converter$ReverseConverter", "6 ^(7vm", (String) null, "MBh^gRE", "com.google.common.base.Converter$ReverseConverter", "(?ba=", (String) null, "N+t!%", "6 ^(7vm", curriculum0, 11, 0, 6, 11, (-839), 0, 2609, 0, (-721), 0.0, 0, 0, 2609, 1133, (-753), 6);
      double double0 = student0.getMc();
      assertEquals("6 ^(7vm", student0.getAdmissionStr());
      assertEquals("P!|ov|C^ Z5C=YVy3", student0.getGender());
      assertEquals("N+t!%", student0.getCourseCode());
      assertEquals("com.google.common.base.Converter$ReverseConverter", student0.getStatusStr());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("com.google.common.base.Converter$ReverseConverter", student0.getAffirmativePolicy());
      assertEquals("", student0.getCountry());
      assertEquals("6 ^(7vm", student0.getCurriculumCode());
      assertEquals("MBh^gRE", student0.getDisabilities());
      assertEquals("", student0.getName());
      assertEquals("6 ^(7vm", student0.getRace());
      assertEquals("6 ^(7vm", student0.getMaritalStatus());
      assertEquals("(?ba=", student0.getSecondarySchool());
      assertEquals("com.google.common.base.Converter$ReverseConverter", student0.getStatusTerm());
      assertEquals("N+t!%", student0.getNationality());
      assertEquals("", student0.getEmail());
      assertEquals((-721.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student("Cu<%06sxQM`$?", "Cu<%06sxQM`$?", "Cu<%06sxQM`$?", "Cu<%06sxQM`$?", "IGNORE_TYPE_VARIABLE_OR_WILDCARD", "<", (String) null, "<", ", mobilityTerms=", "!QQb3<yP-h", "!QQb3<yP-h", "IGNORE_TYPE_VARIABLE_OR_WILDCARD", studentStatus0, "9Yxp]ZX$nF=5.a]g", "Cu<%06sxQM`$?", "j_^3KR:4*D1", "", "j_^3KR:4*D1", (String) null, "!QQb3<yP-h", "br.edu.ufcg.computacao.eureca.backend.core.models.Student", "Cu<%06sxQM`$?", (Curriculum) null, 125, 125, 125, 125, 2667, 2667, 2667, 2667, 2667, 2667, 2667, 125, 125, 2667, 9, (-2721.820703));
      String string0 = student0.getMaritalStatus();
      assertEquals("j_^3KR:4*D1", student0.getAffirmativePolicy());
      assertEquals("!QQb3<yP-h", student0.getSecondarySchoolGraduationYear());
      assertEquals("Cu<%06sxQM`$?", student0.getAdmissionStr());
      assertEquals("Cu<%06sxQM`$?", student0.getNationalId());
      assertEquals("<", student0.getNationality());
      assertEquals("Cu<%06sxQM`$?", student0.getCurriculumCode());
      assertEquals("9Yxp]ZX$nF=5.a]g", student0.getStatusTerm());
      assertEquals("j_^3KR:4*D1", student0.getAdmissionTerm());
      assertNull(string0);
      assertEquals(", mobilityTerms=", student0.getCountry());
      assertEquals("Cu<%06sxQM`$?", student0.getBirthDate());
      assertEquals("!QQb3<yP-h", student0.getPlaceOfBirth());
      assertEquals("", student0.getDisabilities());
      assertEquals("!QQb3<yP-h", student0.getRace());
      assertEquals("<", student0.getGender());
      assertEquals("Cu<%06sxQM`$?", student0.getName());
      assertEquals("IGNORE_TYPE_VARIABLE_OR_WILDCARD", student0.getEmail());
      assertEquals("IGNORE_TYPE_VARIABLE_OR_WILDCARD", student0.getStatusStr());
      assertEquals("br.edu.ufcg.computacao.eureca.backend.core.models.Student", student0.getCourseCode());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      PriorityQueue<String> priorityQueue0 = new PriorityQueue<String>(comparator0);
      Curriculum curriculum0 = new Curriculum("", "~$Dsv/4-+d3F~9F_j_", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, (-509), 0, (-509), (-509), 0, 0, (-509), 0, (-1474), (-509), priorityQueue0, priorityQueue0, priorityQueue0, priorityQueue0, priorityQueue0);
      Student student0 = new Student("com.google.common.base.Converter", "com.google.common.base.Converter", "~$Dsv/4-+d3F~9F_j_", "com.google.common.base.Converter", "", "KQQ>", "", "KQQ>", "", "", "{H<erm?", "", studentStatus0, "", "", "'0ARK(.0[|[uG", "", "", "", "", "{H<erm?", "\"3,&", curriculum0, 0, 0, (-509), (-509), 6, 6, (-509), (-509), (-1474), (-877.5643), 3172, (-2049), (-1144), 3172, (-1144), (-1144));
      String string0 = student0.getMaritalStatus();
      assertEquals("{H<erm?", student0.getCourseCode());
      assertEquals("com.google.common.base.Converter", student0.getBirthDate());
      assertEquals("KQQ>", student0.getGender());
      assertEquals("", string0);
      assertEquals("{H<erm?", student0.getRace());
      assertEquals("", student0.getEmail());
      assertEquals("", student0.getStatusTerm());
      assertEquals("", student0.getSecondarySchool());
      assertEquals("\"3,&", student0.getCurriculumCode());
      assertEquals("", student0.getStatusStr());
      assertEquals("", student0.getAdmissionStr());
      assertEquals("KQQ>", student0.getNationality());
      assertEquals("com.google.common.base.Converter", student0.getNationalId());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals("'0ARK(.0[|[uG", student0.getAdmissionTerm());
      assertEquals("", student0.getDisabilities());
      assertEquals("~$Dsv/4-+d3F~9F_j_", student0.getName());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("", student0.getCountry());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("", "", "", "", "R+98IMZGaV=q", "t@", "", "", "", "c0rX'pGJzKL$wh'S", "", "", studentStatus0, "iEk*EazOfGWE", "R+98IMZGaV=q", "InputStream", "", "The FilenameFilter must not be null", "", "'|(S:y&?zuS`\"", "vxX(yi%$g", "gT@>Zd9Hc|)", (Curriculum) null, 0, 343, 0, 0, 0, (-1021), 343, 0, (-4640.4434932), 343, 0, 343, 0, (-1021), (-1209), (-1404.632231));
      int int0 = student0.getMandatoryHours();
      assertEquals("R+98IMZGaV=q", student0.getAdmissionStr());
      assertEquals("", student0.getMaritalStatus());
      assertEquals("R+98IMZGaV=q", student0.getEmail());
      assertEquals(0, int0);
      assertEquals("The FilenameFilter must not be null", student0.getAffirmativePolicy());
      assertEquals("", student0.getStatusStr());
      assertEquals("", student0.getName());
      assertEquals("iEk*EazOfGWE", student0.getStatusTerm());
      assertEquals("", student0.getCountry());
      assertEquals("", student0.getRace());
      assertEquals("InputStream", student0.getAdmissionTerm());
      assertEquals("c0rX'pGJzKL$wh'S", student0.getPlaceOfBirth());
      assertEquals("t@", student0.getGender());
      assertEquals("gT@>Zd9Hc|)", student0.getCurriculumCode());
      assertEquals("", student0.getBirthDate());
      assertEquals("", student0.getNationalId());
      assertEquals("'|(S:y&?zuS`\"", student0.getSecondarySchoolGraduationYear());
      assertEquals("vxX(yi%$g", student0.getCourseCode());
      assertEquals("", student0.getNationality());
      assertEquals("", student0.getSecondarySchool());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Curriculum curriculum0 = new Curriculum(", admissionTerm='", "2%>I2a9QC>", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 14, 127, (-2775), (-723), 0, 14, 133, (-1394), (-501), (-1951), linkedList0, linkedList0, linkedList0, linkedList0, linkedList0);
      Student student0 = new Student("CONCLUIDO - NAO COLOU GRAU", "", ", suspendedTerms=", "", "", "CONCLUIDO - NAO COLOU GRAU", ", suspendedTerms=", ", suspendedTerms=", "CANCELAMENTO P/ DECISAO JUDICIAL", "CharMatcher.singleWidth()", "CharMatcher.singleWidth()", "mwpa)c`", studentStatus0, "CONCLUIDO - NAO COLOU GRAU", "K#R_#K", "K#R_#K", ", suspendedTerms=", ", admissionTerm='", "K#R_#K", "79/g2[^ <W;OB4k=", "rjgSpy:r,f0jWk-G", ", email='", curriculum0, 593, 127, 14, (-1951), (-723), 0, 5, 260.4, 1482.1, 3472.02, 2733, 0, 1533, 706, 0, (-1951));
      int int0 = student0.getMandatoryHours();
      assertEquals(593, int0);
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getStatusTerm());
      assertEquals("mwpa)c`", student0.getStatusStr());
      assertEquals(", suspendedTerms=", student0.getName());
      assertEquals("79/g2[^ <W;OB4k=", student0.getSecondarySchoolGraduationYear());
      assertEquals("CANCELAMENTO P/ DECISAO JUDICIAL", student0.getCountry());
      assertEquals("", student0.getBirthDate());
      assertEquals(", admissionTerm='", student0.getAffirmativePolicy());
      assertEquals(", email='", student0.getCurriculumCode());
      assertEquals("", student0.getEmail());
      assertEquals("rjgSpy:r,f0jWk-G", student0.getCourseCode());
      assertEquals(", suspendedTerms=", student0.getMaritalStatus());
      assertEquals("", student0.getNationalId());
      assertEquals(", suspendedTerms=", student0.getDisabilities());
      assertEquals("CharMatcher.singleWidth()", student0.getRace());
      assertEquals("K#R_#K", student0.getSecondarySchool());
      assertEquals("CharMatcher.singleWidth()", student0.getPlaceOfBirth());
      assertEquals("K#R_#K", student0.getAdmissionStr());
      assertEquals("K#R_#K", student0.getAdmissionTerm());
      assertEquals(", suspendedTerms=", student0.getNationality());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getGender());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Curriculum curriculum0 = new Curriculum((String) null, "|X&eh}BOJ--!Sy@Zs", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2093, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null);
      Student student0 = new Student("c0R&huXji'2G[", "c0R&huXji'2G[", "c0R&huXji'2G[", "", "c0R&huXji'2G[", ", gpa=", "", "", (String) null, "", "com.google.common.collect.Cut", "|X&eh}BOJ--!Sy@Zs", studentStatus0, "", "", "", (String) null, (String) null, ", courseCode='", "pjs3zg.2<", "", "com.google.common.collect.Cut", curriculum0, 0, 0, 0, 675, 0, (-3510), 0, (-1.0), 0.0, (-5319.991850448366), (-2898), 1, 924, 675, 0, (-1.0));
      student0.getMandatoryCredits();
      assertEquals("", student0.getMaritalStatus());
      assertEquals("com.google.common.collect.Cut", student0.getCurriculumCode());
      assertEquals("c0R&huXji'2G[", student0.getNationalId());
      assertEquals("", student0.getCourseCode());
      assertEquals("|X&eh}BOJ--!Sy@Zs", student0.getStatusStr());
      assertEquals("c0R&huXji'2G[", student0.getEmail());
      assertEquals("c0R&huXji'2G[", student0.getName());
      assertEquals("", student0.getBirthDate());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("", student0.getStatusTerm());
      assertEquals("", student0.getNationality());
      assertEquals("com.google.common.collect.Cut", student0.getRace());
      assertEquals(", courseCode='", student0.getSecondarySchool());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("", student0.getAdmissionStr());
      assertEquals(", gpa=", student0.getGender());
      assertEquals("pjs3zg.2<", student0.getSecondarySchoolGraduationYear());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      PriorityQueue<String> priorityQueue0 = new PriorityQueue<String>();
      Stack<String> stack0 = new Stack<String>();
      Curriculum curriculum0 = new Curriculum("J6=m-", "", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 0, 481, 481, 481, 0, 0, 0, 0, 0, 0, priorityQueue0, priorityQueue0, priorityQueue0, priorityQueue0, stack0);
      Student student0 = new Student(", maxNumberOfTerms=", ", maxNumberOfTerms=", "", "#Rf3O0P'EC`uD'|,{AX", "=7${n#sM}xWKZ&am", "CANCELAMENTO P/ DECISAO JUDICIAL", "J6=m-", "", "'TJ", (String) null, "LjzAIYAb!Nm", "J6=m-", studentStatus0, "\"$A+", ":&^3)\"xP~F9%S,{(0", ", curriculumCode='", ":&^3)\"xP~F9%S,{(0", "'TJ", "*(FtpGjJxO", "com.google.common.base.Equivalence$EquivalentToPredicate", "'TJ", "S", curriculum0, 481, (-2721), 89, 3130, 0, 89, 125, (-293.0880021429), 0, 125, 89, 0, 0, 0, 0, (-1.0));
      int int0 = student0.getMandatoryCredits();
      assertEquals(", maxNumberOfTerms=", student0.getNationalId());
      assertEquals("J6=m-", student0.getMaritalStatus());
      assertEquals(", curriculumCode='", student0.getAdmissionTerm());
      assertEquals("S", student0.getCurriculumCode());
      assertEquals("'TJ", student0.getCourseCode());
      assertEquals((-2721), int0);
      assertEquals("J6=m-", student0.getStatusStr());
      assertEquals("LjzAIYAb!Nm", student0.getRace());
      assertEquals("=7${n#sM}xWKZ&am", student0.getEmail());
      assertEquals("com.google.common.base.Equivalence$EquivalentToPredicate", student0.getSecondarySchoolGraduationYear());
      assertEquals("*(FtpGjJxO", student0.getSecondarySchool());
      assertEquals("#Rf3O0P'EC`uD'|,{AX", student0.getBirthDate());
      assertEquals("", student0.getNationality());
      assertEquals(":&^3)\"xP~F9%S,{(0", student0.getAdmissionStr());
      assertEquals("'TJ", student0.getAffirmativePolicy());
      assertEquals("\"$A+", student0.getStatusTerm());
      assertEquals(":&^3)\"xP~F9%S,{(0", student0.getDisabilities());
      assertEquals("'TJ", student0.getCountry());
      assertEquals("CANCELAMENTO P/ DECISAO JUDICIAL", student0.getGender());
      assertEquals("", student0.getName());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Vector<String> vector0 = new Vector<String>();
      Curriculum curriculum0 = new Curriculum("lWa<`t", "Shorts.stringConverter()", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 7, 7, 7, 0, 7, 791, 0, 7, 0, 7, vector0, vector0, vector0, vector0, vector0);
      Student student0 = new Student("vr\"l:=k;'$0E)", "CANCELADO REPROVOU TODAS POR FALTAS", "vr\"l:=k;'$0E)", "lWa<`t", "lWa<`t", "N)`;$6igfBr;l,!tk", "", "", "#DFu^\u0005{xrNP=::", ", enrolledCredits=", "CANCELADO REPROVOU TODAS POR FALTAS", "", studentStatus0, "", "CANCELADO REPROVOU TODAS POR FALTAS", "", "=h=-'b.n__{ A]Vryj", "CANCELADO REPROVOU TODAS POR FALTAS", "", "Shorts.stringConverter()", "", "#DFu^\u0005{xrNP=::", curriculum0, 7, 0, 10, 0, 10, 10, 20, 948.8707961, 1985.0, 1985.0, 10, (-1008), 0, 0, 10, 1.0);
      int int0 = student0.getInstitutionalEnrollments();
      assertEquals("CANCELADO REPROVOU TODAS POR FALTAS", student0.getAdmissionStr());
      assertEquals("", student0.getStatusStr());
      assertEquals(0, int0);
      assertEquals("", student0.getCourseCode());
      assertEquals("CANCELADO REPROVOU TODAS POR FALTAS", student0.getNationalId());
      assertEquals("", student0.getSecondarySchool());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("#DFu^\u0005{xrNP=::", student0.getCountry());
      assertEquals("#DFu^\u0005{xrNP=::", student0.getCurriculumCode());
      assertEquals("CANCELADO REPROVOU TODAS POR FALTAS", student0.getRace());
      assertEquals("lWa<`t", student0.getEmail());
      assertEquals(", enrolledCredits=", student0.getPlaceOfBirth());
      assertEquals("", student0.getNationality());
      assertEquals("vr\"l:=k;'$0E)", student0.getName());
      assertEquals("", student0.getStatusTerm());
      assertEquals("N)`;$6igfBr;l,!tk", student0.getGender());
      assertEquals("=h=-'b.n__{ A]Vryj", student0.getDisabilities());
      assertEquals("Shorts.stringConverter()", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getMaritalStatus());
      assertEquals("lWa<`t", student0.getBirthDate());
      assertEquals("CANCELADO REPROVOU TODAS POR FALTAS", student0.getAffirmativePolicy());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Vector<String> vector0 = new Vector<String>();
      Curriculum curriculum0 = new Curriculum("lWa<`t", "Shorts.stringConverter()", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 7, 7, 7, 0, 7, 791, 0, 7, (-3), 7, vector0, vector0, vector0, vector0, vector0);
      Student student0 = new Student("vr\"l:=k;'$0E)", "CANCELADO REPROVOU TODAS POR FALTAS", "vr\"l:=k;'$0E)", "lWa<`t", "lWa<`t", "N)`;$6igfBr;l,!tk", "", "", "#DFu^\u0005{xrNP=::", ", enrolledCredits=", "CANCELADO REPROVOU TODAS POR FALTAS", "", studentStatus0, "", "CANCELADO REPROVOU TODAS POR FALTAS", ":B", "=h=-'b.n__{ A]Vryj", "CANCELADO REPROVOU TODAS POR FALTAS", "", "Shorts.stringConverter()", "1", "#DFu^\u0005{xrNP=::", curriculum0, 7, (-3), 10, 0, 10, 10, 20, 948.8707961, 1985.0, 1985.0, 10, (-1008), (-67), 0, 10, 1.0);
      int int0 = student0.getInstitutionalEnrollments();
      assertEquals("#DFu^\u0005{xrNP=::", student0.getCurriculumCode());
      assertEquals(", enrolledCredits=", student0.getPlaceOfBirth());
      assertEquals((-67), int0);
      assertEquals("N)`;$6igfBr;l,!tk", student0.getGender());
      assertEquals("lWa<`t", student0.getEmail());
      assertEquals("", student0.getMaritalStatus());
      assertEquals("vr\"l:=k;'$0E)", student0.getName());
      assertEquals("CANCELADO REPROVOU TODAS POR FALTAS", student0.getRace());
      assertEquals("lWa<`t", student0.getBirthDate());
      assertEquals("CANCELADO REPROVOU TODAS POR FALTAS", student0.getAdmissionStr());
      assertEquals("Shorts.stringConverter()", student0.getSecondarySchoolGraduationYear());
      assertEquals("=h=-'b.n__{ A]Vryj", student0.getDisabilities());
      assertEquals("CANCELADO REPROVOU TODAS POR FALTAS", student0.getAffirmativePolicy());
      assertEquals("", student0.getSecondarySchool());
      assertEquals("1", student0.getCourseCode());
      assertEquals("", student0.getNationality());
      assertEquals(":B", student0.getAdmissionTerm());
      assertEquals("CANCELADO REPROVOU TODAS POR FALTAS", student0.getNationalId());
      assertEquals("", student0.getStatusStr());
      assertEquals("#DFu^\u0005{xrNP=::", student0.getCountry());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("org.apache.commons.io.filefilter.AgeFileFilter", "com.google.common.collect.Maps$BiMapConverter", "{#}xwSpm@3KA", "+K7,F*s^q", "org.apache.commons.io.filefilter.AgeFileFilter", "org.apache.commons.io.filefilter.AgeFileFilter", "", "", "com.google.common.collect.Maps$BiMapConverter", "loadSuccessCount", "", (String) null, studentStatus0, "", "{#}xwSpm@3KA", (String) null, "o}8Du^!1v5,q]Oro", "{#}xwSpm@3KA", "", ",\"pAQoe+-:&s+wU\t", "CANCELADO 3 REPROV MESMA DISCIPLINA", "+K7,F*s^q", (Curriculum) null, 0, 0, 1096, (-373), 1096, 6, 6, 0, 0.0, 0, 0, 0, 1, (-373), 1096, 706.01);
      double double0 = student0.getIea();
      assertEquals("", student0.getStatusTerm());
      assertEquals("", student0.getNationality());
      assertEquals("CANCELADO 3 REPROV MESMA DISCIPLINA", student0.getCourseCode());
      assertEquals("", student0.getRace());
      assertEquals("loadSuccessCount", student0.getPlaceOfBirth());
      assertEquals("+K7,F*s^q", student0.getBirthDate());
      assertEquals("+K7,F*s^q", student0.getCurriculumCode());
      assertEquals("", student0.getSecondarySchool());
      assertEquals(0.0, double0, 0.01);
      assertEquals("org.apache.commons.io.filefilter.AgeFileFilter", student0.getGender());
      assertEquals("com.google.common.collect.Maps$BiMapConverter", student0.getNationalId());
      assertEquals("o}8Du^!1v5,q]Oro", student0.getDisabilities());
      assertEquals("", student0.getMaritalStatus());
      assertEquals("com.google.common.collect.Maps$BiMapConverter", student0.getCountry());
      assertEquals("org.apache.commons.io.filefilter.AgeFileFilter", student0.getEmail());
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      Curriculum curriculum0 = new Curriculum("", "", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-654), 8192, 8192, 3597, (-654), 92, (-654), 92, (-654), 8192, linkedList0, linkedList0, linkedList0, linkedList0, arrayDeque0);
      Student student0 = new Student("com.google.common.base.CharMatcher$FastMatcher", "", "ys:5", "com.google.common.base.CharMatcher$FastMatcher", "@", ", mobilityTerms=", "c[k", "[ez^", "ys:5", "@", "", "ys:5", studentStatus0, "/0$", "ys:5", "", "", "", (String) null, "\u0000\u05BE\u05D0\u05F3\u0600\u0750\u0E00\u1E00\u2100\uFB50\uFE70\uFF61", "?ui,>)-ynyT:^>z", "ys:5", curriculum0, 8192, (-654), 8192, 92, 0, 8192, 8192, (-3232.52503426832), 3597, (-1.0), 1898, 5, 0, (-654), (-1160), 92);
      student0.getIea();
      assertEquals("@", student0.getPlaceOfBirth());
      assertEquals("", student0.getDisabilities());
      assertEquals("ys:5", student0.getCurriculumCode());
      assertEquals("", student0.getRace());
      assertEquals("ys:5", student0.getStatusStr());
      assertEquals("ys:5", student0.getAdmissionStr());
      assertEquals("\u0000\u05BE\u05D0\u05F3\u0600\u0750\u0E00\u1E00\u2100\uFB50\uFE70\uFF61", student0.getSecondarySchoolGraduationYear());
      assertEquals("ys:5", student0.getName());
      assertEquals("c[k", student0.getMaritalStatus());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals(", mobilityTerms=", student0.getGender());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("/0$", student0.getStatusTerm());
      assertEquals("", student0.getNationalId());
      assertEquals("ys:5", student0.getCountry());
      assertEquals("com.google.common.base.CharMatcher$FastMatcher", student0.getBirthDate());
      assertEquals("?ui,>)-ynyT:^>z", student0.getCourseCode());
      assertEquals("@", student0.getEmail());
      assertEquals("[ez^", student0.getNationality());
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student((String) null, "6Vg(5;7e/rO&5p,O1`,", (String) null, (String) null, "3>NNoEZ/OPI:.!?", "3z7OIKbQ", "3>NNoEZ/OPI:.!?", "6Vg(5;7e/rO&5p,O1`,", "6Vg(5;7e/rO&5p,O1`,", (String) null, "", "3>NNoEZ/OPI:.!?", studentStatus0, "", "", "3>NNoEZ/OPI:.!?", "", "com.google.common.collect.Range", "6Vg(5;7e/rO&5p,O1`,", "3z7OIKbQ", "com.google.common.collect.Range", "8sBY(tR-", (Curriculum) null, 0, 3505, 3505, 12, 0, 12, 12, 1693.1, (-113.70989444), 1.0, 12, 3505, (-1046), 806, (-1046), (-113.70989444));
      double double0 = student0.getGpa();
      assertEquals("", student0.getAdmissionStr());
      assertEquals("3>NNoEZ/OPI:.!?", student0.getMaritalStatus());
      assertEquals("3>NNoEZ/OPI:.!?", student0.getStatusStr());
      assertEquals("3z7OIKbQ", student0.getGender());
      assertEquals("6Vg(5;7e/rO&5p,O1`,", student0.getSecondarySchool());
      assertEquals("", student0.getRace());
      assertEquals("", student0.getDisabilities());
      assertEquals("3z7OIKbQ", student0.getSecondarySchoolGraduationYear());
      assertEquals("6Vg(5;7e/rO&5p,O1`,", student0.getNationalId());
      assertEquals("3>NNoEZ/OPI:.!?", student0.getEmail());
      assertEquals("com.google.common.collect.Range", student0.getAffirmativePolicy());
      assertEquals("3>NNoEZ/OPI:.!?", student0.getAdmissionTerm());
      assertEquals("6Vg(5;7e/rO&5p,O1`,", student0.getNationality());
      assertEquals("8sBY(tR-", student0.getCurriculumCode());
      assertEquals("", student0.getStatusTerm());
      assertEquals(1693.1, double0, 0.01);
      assertEquals("com.google.common.collect.Range", student0.getCourseCode());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("T|y7qy,b", "T|y7qy,b", ", statusTerm='", "", "rw=anp]bQ6%C-;/f.P", "", "zQ", "Y3;$ju", "Y3;$ju", "T|y7qy,b", "", "", studentStatus0, "T|y7qy,b", ", statusTerm='", "$6@xRal\"a>5", "$6@xRal\"a>5", "zaBvK@", "T|y7qy,b", "CANCELADO 3 REPROV MESMA DISCIPLINA", ", statusStr='", "?TUw/f{y", (Curriculum) null, 2374, 0, 0, 65535, Integer.MIN_VALUE, (-3903), 2374, (-1243.12223457719), (-135.6), 65535, (-470), 1973, 65535, 65535, 558, (-1243.12223457719));
      student0.getGpa();
      assertEquals("$6@xRal\"a>5", student0.getDisabilities());
      assertEquals("Y3;$ju", student0.getNationality());
      assertEquals("", student0.getStatusStr());
      assertEquals("", student0.getGender());
      assertEquals("T|y7qy,b", student0.getPlaceOfBirth());
      assertEquals("rw=anp]bQ6%C-;/f.P", student0.getEmail());
      assertEquals("Y3;$ju", student0.getCountry());
      assertEquals("CANCELADO 3 REPROV MESMA DISCIPLINA", student0.getSecondarySchoolGraduationYear());
      assertEquals("T|y7qy,b", student0.getSecondarySchool());
      assertEquals("T|y7qy,b", student0.getStatusTerm());
      assertEquals(", statusStr='", student0.getCourseCode());
      assertEquals("T|y7qy,b", student0.getNationalId());
      assertEquals("?TUw/f{y", student0.getCurriculumCode());
      assertEquals("$6@xRal\"a>5", student0.getAdmissionTerm());
      assertEquals(", statusTerm='", student0.getName());
      assertEquals("", student0.getBirthDate());
      assertEquals("zaBvK@", student0.getAffirmativePolicy());
      assertEquals("zQ", student0.getMaritalStatus());
      assertEquals("", student0.getRace());
      assertEquals(", statusTerm='", student0.getAdmissionStr());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum((String) null, "\"<^B]", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 5, (-1837), (-1837), 1390, 246, 1390, 246, 246, (-1837), (-1837), set0, set0, set0, set0, set0);
      Student student0 = new Student("", "", "", "", "05h`g<<0$EZd3W", "05h`g<<0$EZd3W", (String) null, "CANCELAMENTO P/ SOLICITACAO ALUNO", "", "", "", "LOW", studentStatus0, "CANCELAMENTO P/ SOLICITACAO ALUNO", "CANCELAMENTO P/ SOLICITACAO ALUNO", (String) null, "w+)Afxyy&V[4IkR", "", "-GQmp;)", "yy5f8Nf.lC-", "\"<^B]", "Cfu*", curriculum0, 9, 1390, 4131, 246, 9, 1390, 246, 0.0, (-1837), 5, 4131, (-1837), 1390, (-1837), 246, 1390);
      assertEquals("05h`g<<0$EZd3W", student0.getGender());
      
      student0.setGender((String) null);
      student0.getGender();
      assertEquals("05h`g<<0$EZd3W", student0.getEmail());
      assertEquals("-GQmp;)", student0.getSecondarySchool());
      assertEquals("w+)Afxyy&V[4IkR", student0.getDisabilities());
      assertEquals("", student0.getNationalId());
      assertEquals("", student0.getBirthDate());
      assertEquals("", student0.getName());
      assertEquals("Cfu*", student0.getCurriculumCode());
      assertEquals("", student0.getCountry());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("", student0.getRace());
      assertEquals("\"<^B]", student0.getCourseCode());
      assertEquals("LOW", student0.getStatusStr());
      assertEquals("CANCELAMENTO P/ SOLICITACAO ALUNO", student0.getAdmissionStr());
      assertEquals("CANCELAMENTO P/ SOLICITACAO ALUNO", student0.getNationality());
      assertEquals("CANCELAMENTO P/ SOLICITACAO ALUNO", student0.getStatusTerm());
      assertEquals("yy5f8Nf.lC-", student0.getSecondarySchoolGraduationYear());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("", "r{hUK|X=B9ddB", "r{hUK|X=B9ddB", ", optionalCredits=", ", optionalCredits=", "~`FE!$gc=3F", "", ", optionalCredits=", "", "", "dvDTa3WW5'v_", "", studentStatus0, ", optionalCredits=", "~`FE!$gc=3F", "com.google.common.collect.Ordering", "", "com.google.common.collect.Ordering", ", statusStr='", "r{hUK|X=B9ddB", "", "", (Curriculum) null, 44, 44, 44, 0, 44, 0, 0, 44, 0.0, 0, 0, (-4811), (-4811), 0, 6, 0.0);
      String string0 = student0.getGender();
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("", student0.getMaritalStatus());
      assertEquals(", optionalCredits=", student0.getEmail());
      assertEquals(", optionalCredits=", student0.getNationality());
      assertEquals("", student0.getCourseCode());
      assertEquals("com.google.common.collect.Ordering", student0.getAffirmativePolicy());
      assertEquals(", optionalCredits=", student0.getBirthDate());
      assertEquals("", student0.getDisabilities());
      assertEquals("r{hUK|X=B9ddB", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getCountry());
      assertEquals("", student0.getStatusStr());
      assertEquals("dvDTa3WW5'v_", student0.getRace());
      assertEquals("", student0.getCurriculumCode());
      assertEquals("~`FE!$gc=3F", student0.getAdmissionStr());
      assertEquals("~`FE!$gc=3F", string0);
      assertEquals(", statusStr='", student0.getSecondarySchool());
      assertEquals("com.google.common.collect.Ordering", student0.getAdmissionTerm());
      assertEquals("r{hUK|X=B9ddB", student0.getName());
      assertEquals(", optionalCredits=", student0.getStatusTerm());
      assertEquals("r{hUK|X=B9ddB", student0.getNationalId());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student((String) null, (String) null, " returned null keys or values from loadAll", (String) null, (String) null, (String) null, (String) null, " returned null keys or values from loadAll", ", gpa=", ">L2v*&C;C\u0000O(kl", "I,2[mH/$v$u: y7", ":e+5YH:lti~N", studentStatus0, (String) null, ":e+5YH:lti~N", ">L2v*&C;C\u0000O(kl", (String) null, "br.edu.ufcg.computacao.eureca.backend.core.models.Student", " returned null keys or values from loadAll", "Ww!McSi|}(ds:b5vE9.", "Ww!McSi|}(ds:b5vE9.", "org.apache.commons.io.filefilter.WildcardFileFilter", (Curriculum) null, 8, (-1196), 92, 6, 2, 2, (-2182), (-1256.36944), 0.0, 0.0, 8, 0, 8, 1, 797, (-2231.5192934273864));
      student0.getEnrolledCredits();
      assertEquals(">L2v*&C;C\u0000O(kl", student0.getAdmissionTerm());
      assertEquals(" returned null keys or values from loadAll", student0.getNationality());
      assertEquals("I,2[mH/$v$u: y7", student0.getRace());
      assertEquals("br.edu.ufcg.computacao.eureca.backend.core.models.Student", student0.getAffirmativePolicy());
      assertEquals("Ww!McSi|}(ds:b5vE9.", student0.getSecondarySchoolGraduationYear());
      assertEquals(" returned null keys or values from loadAll", student0.getSecondarySchool());
      assertEquals(":e+5YH:lti~N", student0.getStatusStr());
      assertEquals(", gpa=", student0.getCountry());
      assertEquals(":e+5YH:lti~N", student0.getAdmissionStr());
      assertEquals("org.apache.commons.io.filefilter.WildcardFileFilter", student0.getCurriculumCode());
      assertEquals(">L2v*&C;C\u0000O(kl", student0.getPlaceOfBirth());
      assertEquals("Ww!McSi|}(ds:b5vE9.", student0.getCourseCode());
      assertEquals(" returned null keys or values from loadAll", student0.getName());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student("rg@O7K:*CC_Qtb", (String) null, (String) null, "rg@O7K:*CC_Qtb", "rg@O7K:*CC_Qtb", "rg@O7K:*CC_Qtb", "CANCELADO NOVO INGRESSO MESMO CURSO", (String) null, "&1sS) k", "_I6 6i_^", (String) null, "CANCELADO NOVO INGRESSO MESMO CURSO", studentStatus0, "", "6h", ", admissionTerm='", "&1sS) k", "&1sS) k", "The prefix must not be null", "CANCELADO NOVO INGRESSO MESMO CURSO", (String) null, "", (Curriculum) null, (-19), (-2160), 7, (-19), 5196, 3900, 3900, 0.0, 0.0, 0.0, 7, 424, (-2160), 2219, (-1025), (-254.277942523007));
      student0.getEnrolledCredits();
      assertEquals("&1sS) k", student0.getAffirmativePolicy());
      assertEquals("CANCELADO NOVO INGRESSO MESMO CURSO", student0.getStatusStr());
      assertEquals("The prefix must not be null", student0.getSecondarySchool());
      assertEquals("rg@O7K:*CC_Qtb", student0.getGender());
      assertEquals("", student0.getStatusTerm());
      assertEquals(", admissionTerm='", student0.getAdmissionTerm());
      assertEquals("rg@O7K:*CC_Qtb", student0.getBirthDate());
      assertEquals("&1sS) k", student0.getDisabilities());
      assertEquals("&1sS) k", student0.getCountry());
      assertEquals("", student0.getCurriculumCode());
      assertEquals("CANCELADO NOVO INGRESSO MESMO CURSO", student0.getSecondarySchoolGraduationYear());
      assertEquals("rg@O7K:*CC_Qtb", student0.getEmail());
      assertEquals("6h", student0.getAdmissionStr());
      assertEquals("_I6 6i_^", student0.getPlaceOfBirth());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student((String) null, "n", (String) null, (String) null, (String) null, (String) null, "n", "gTKfl*Q1N>=F6", "gTKfl*Q1N>=F6", "QNxyx^7lF2!Z]%|Y", "gTKfl*Q1N>=F6", (String) null, studentStatus0, "", "?Me'b*\"|u", "com.google.common.base.CharMatcher$RangesMatcher", (String) null, "", (String) null, "QNxyx^7lF2!Z]%|Y", "com.google.common.base.CharMatcher$RangesMatcher", "%;<>QE+A-2O3h", (Curriculum) null, 373, (-2141), (-5104), 373, 1091, 1091, (-5104), (-1.0), (-5104), 1091, 5124, 1091, 5124, (-5104), 3053, 0.0);
      String string0 = student0.getEmail();
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("", student0.getStatusTerm());
      assertEquals("com.google.common.base.CharMatcher$RangesMatcher", student0.getAdmissionTerm());
      assertEquals("n", student0.getMaritalStatus());
      assertEquals("gTKfl*Q1N>=F6", student0.getRace());
      assertEquals("gTKfl*Q1N>=F6", student0.getCountry());
      assertEquals("QNxyx^7lF2!Z]%|Y", student0.getSecondarySchoolGraduationYear());
      assertEquals("n", student0.getNationalId());
      assertEquals("com.google.common.base.CharMatcher$RangesMatcher", student0.getCourseCode());
      assertEquals("%;<>QE+A-2O3h", student0.getCurriculumCode());
      assertEquals("gTKfl*Q1N>=F6", student0.getNationality());
      assertEquals("QNxyx^7lF2!Z]%|Y", student0.getPlaceOfBirth());
      assertEquals("?Me'b*\"|u", student0.getAdmissionStr());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Curriculum curriculum0 = new Curriculum("", "", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, arrayList0, arrayList0, 0, 0, 919, 0, 0, (-3112), 0, 0, 0, 853, treeSet0, treeSet0, treeSet0, treeSet0, treeSet0);
      Student student0 = new Student("d?.yj0Bcvl=Wqv]i", "C,(eZ9", "Kkl{pxQ|", "d?.yj0Bcvl=Wqv]i", "C,(eZ9", "", "d?.yj0Bcvl=Wqv]i", "c7GQ+3o_", "", "C,(eZ9", "&!u_t{", "", studentStatus0, "&!u_t{", (String) null, "-D", "1-:", "Zcl=<PcP{hHhPj[yBuR", ">", "", "Kkl{pxQ|", "1-:", curriculum0, 0, 0, (-2627), 0, 919, 0, 578, (-626.2284528825), 853, 1169.24, 715, 715, 0, (-1812), 919, 0.0);
      String string0 = student0.getEmail();
      assertEquals("", student0.getStatusStr());
      assertEquals(">", student0.getSecondarySchool());
      assertEquals("C,(eZ9", student0.getNationalId());
      assertEquals("d?.yj0Bcvl=Wqv]i", student0.getBirthDate());
      assertEquals("&!u_t{", student0.getRace());
      assertEquals("c7GQ+3o_", student0.getNationality());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals("1-:", student0.getDisabilities());
      assertEquals("1-:", student0.getCurriculumCode());
      assertEquals("C,(eZ9", string0);
      assertEquals("d?.yj0Bcvl=Wqv]i", student0.getMaritalStatus());
      assertEquals("Kkl{pxQ|", student0.getCourseCode());
      assertEquals("C,(eZ9", student0.getPlaceOfBirth());
      assertEquals("", student0.getCountry());
      assertEquals("&!u_t{", student0.getStatusTerm());
      assertEquals("Zcl=<PcP{hHhPj[yBuR", student0.getAffirmativePolicy());
      assertEquals("", student0.getGender());
      assertEquals("-D", student0.getAdmissionTerm());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("nfq>C+ZP\"", "Z3|t[a1", "", "nfq>C+ZP\"", "", "Z3|t[a1", "Z3|t[a1", "nfq>C+ZP\"", "nfq>C+ZP\"", "mtH|a|q~M`Cos%", "", "BCO>a'", studentStatus0, "Z3|t[a1", "Z3|t[a1", "p>=|=fOidv/P.*:l:]", (String) null, "BCO>a'", "p>=|=fOidv/P.*:l:]", "Z3|t[a1", "c_,4]=m6t5<$N`{_", (String) null, (Curriculum) null, 8202, 8202, (-3169), (-3169), 0, 0, 8202, 1739.7493, 50.3, 50.3, (-1137), 8202, 1519, 4594, (-3169), (-721.295514356));
      String string0 = student0.getDisabilities();
      assertEquals("p>=|=fOidv/P.*:l:]", student0.getSecondarySchool());
      assertEquals("BCO>a'", student0.getStatusStr());
      assertEquals("nfq>C+ZP\"", student0.getNationality());
      assertEquals("Z3|t[a1", student0.getMaritalStatus());
      assertEquals("c_,4]=m6t5<$N`{_", student0.getCourseCode());
      assertEquals("Z3|t[a1", student0.getStatusTerm());
      assertEquals("Z3|t[a1", student0.getGender());
      assertEquals("", student0.getRace());
      assertEquals("Z3|t[a1", student0.getAdmissionStr());
      assertEquals("Z3|t[a1", student0.getNationalId());
      assertEquals("", student0.getEmail());
      assertEquals("", student0.getName());
      assertNull(string0);
      assertEquals("nfq>C+ZP\"", student0.getCountry());
      assertEquals("BCO>a'", student0.getAffirmativePolicy());
      assertEquals("mtH|a|q~M`Cos%", student0.getPlaceOfBirth());
      assertEquals("nfq>C+ZP\"", student0.getBirthDate());
      assertEquals("Z3|t[a1", student0.getSecondarySchoolGraduationYear());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student((String) null, "6Vg(5;7e/rO&5p,O1`,", (String) null, (String) null, "3>NNoEZ/OPI:.!?", "3z7OIKbQ", "3>NNoEZ/OPI:.!?", "6Vg(5;7e/rO&5p,O1`,", "6Vg(5;7e/rO&5p,O1`,", (String) null, "", "3>NNoEZ/OPI:.!?", studentStatus0, "", "", "3>NNoEZ/OPI:.!?", "", "com.google.common.collect.Range", "6Vg(5;7e/rO&5p,O1`,", "3z7OIKbQ", "com.google.common.collect.Range", "8sBY(tR-", (Curriculum) null, 0, 3505, 3505, 17, 0, 17, 17, 1693.1, (-113.70989444), 1.0, 17, 3505, (-1046), 806, (-1046), (-113.70989444));
      String string0 = student0.getDisabilities();
      assertEquals("3>NNoEZ/OPI:.!?", student0.getAdmissionTerm());
      assertEquals("6Vg(5;7e/rO&5p,O1`,", student0.getSecondarySchool());
      assertEquals("", string0);
      assertEquals("3z7OIKbQ", student0.getSecondarySchoolGraduationYear());
      assertEquals("6Vg(5;7e/rO&5p,O1`,", student0.getNationality());
      assertEquals("com.google.common.collect.Range", student0.getCourseCode());
      assertEquals("3>NNoEZ/OPI:.!?", student0.getStatusStr());
      assertEquals("", student0.getRace());
      assertEquals("6Vg(5;7e/rO&5p,O1`,", student0.getNationalId());
      assertEquals("8sBY(tR-", student0.getCurriculumCode());
      assertEquals("3>NNoEZ/OPI:.!?", student0.getMaritalStatus());
      assertEquals("6Vg(5;7e/rO&5p,O1`,", student0.getCountry());
      assertEquals("", student0.getAdmissionStr());
      assertNotNull(string0);
      assertEquals("3>NNoEZ/OPI:.!?", student0.getEmail());
      assertEquals("", student0.getStatusTerm());
      assertEquals("3z7OIKbQ", student0.getGender());
      assertEquals("com.google.common.collect.Range", student0.getAffirmativePolicy());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Locale locale0 = Locale.KOREA;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      Curriculum curriculum0 = new Curriculum("omFz", "", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 14, 0, (-2587), (-12931), 14, 0, (-12931), (-87), (-12931), 14, set0, set0, set0, set0, set0);
      Student student0 = new Student("omFz", "omFz", "omFz", "omFz", "~0%:NWKMRiP~!H", "M&e~5@tGsi", "M&e~5@tGsi", "omFz", ", name='", "~0%:NWKMRiP~!H", "com.google.common.primitives.Shorts$ShortConverter", "~0%:NWKMRiP~!H", studentStatus0, ",B6+~l=zL", "com.google.common.primitives.Shorts$ShortConverter", ",B6+~l=zL", "omFz", "", (String) null, "~0%:NWKMRiP~!H", "", "S", curriculum0, (-87), (-64), (-64), (-12931), 14, 14, (-2582), (-3502.2384), (-87), 347.7833463201301, (-12931), (-2587), (-87), (-12931), (-3417), (-1213.0));
      String string0 = student0.getCurriculumCode();
      assertEquals(",B6+~l=zL", student0.getAdmissionTerm());
      assertEquals("", student0.getCourseCode());
      assertEquals("com.google.common.primitives.Shorts$ShortConverter", student0.getAdmissionStr());
      assertEquals("omFz", student0.getDisabilities());
      assertEquals("omFz", student0.getNationalId());
      assertEquals("~0%:NWKMRiP~!H", student0.getEmail());
      assertEquals(",B6+~l=zL", student0.getStatusTerm());
      assertEquals("omFz", student0.getName());
      assertEquals("M&e~5@tGsi", student0.getGender());
      assertEquals("S", string0);
      assertEquals("omFz", student0.getBirthDate());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals(", name='", student0.getCountry());
      assertEquals("com.google.common.primitives.Shorts$ShortConverter", student0.getRace());
      assertEquals("omFz", student0.getNationality());
      assertEquals("~0%:NWKMRiP~!H", student0.getStatusStr());
      assertEquals("~0%:NWKMRiP~!H", student0.getSecondarySchoolGraduationYear());
      assertEquals("~0%:NWKMRiP~!H", student0.getPlaceOfBirth());
      assertEquals("M&e~5@tGsi", student0.getMaritalStatus());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("$n^", "]1NbYYUf@RZ`.&", "2Z3$ew'^d0RE4", "", "", "$n^", "", "2Z3$ew'^d0RE4", "$n^", "", "", "T7*C;ZD,=JY2UhM", studentStatus0, "", "", "", "$n^", "CANCELAMENTO P/ SOLICITACAO ALUNO", "qw6#~~D,OM-L", "", "", "", (Curriculum) null, 11, 3290, 11, 3290, (-1439), (-1439), (-2204), 1.0, 136.4, (-1439), 4031, 11, (-957), 4031, (-2204), (-1.0));
      String string0 = student0.getCurriculumCode();
      assertEquals("$n^", student0.getGender());
      assertEquals("", student0.getAdmissionStr());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals("2Z3$ew'^d0RE4", student0.getNationality());
      assertEquals("qw6#~~D,OM-L", student0.getSecondarySchool());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("$n^", student0.getCountry());
      assertEquals("", student0.getCourseCode());
      assertEquals("T7*C;ZD,=JY2UhM", student0.getStatusStr());
      assertEquals("", student0.getEmail());
      assertEquals("", student0.getBirthDate());
      assertEquals("", student0.getRace());
      assertEquals("]1NbYYUf@RZ`.&", student0.getNationalId());
      assertEquals("", student0.getStatusTerm());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("", string0);
      assertEquals("", student0.getMaritalStatus());
      assertEquals("CANCELAMENTO P/ SOLICITACAO ALUNO", student0.getAffirmativePolicy());
      assertEquals("2Z3$ew'^d0RE4", student0.getName());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student("Cu<%06sxQM`$?", "Cu<%06sxQM`$?", "Cu<%06sxQM`$?", "Cu<%06sxQM`$?", "IGNORE_TYPE_VARIABLE_OR_WILDCARD", "<", (String) null, "<", ", mobilityTerms=", "!QQb3<yP-h", "!QQb3<yP-h", "IGNORE_TYPE_VARIABLE_OR_WILDCARD", studentStatus0, "9Yxp]ZX$nF=5.a]g", "Cu<%06sxQM`$?", "j_^3KR:4*D1", "", "j_^3KR:4*D1", (String) null, "!QQb3<yP-h", "br.edu.ufcg.computacao.eureca.backend.core.models.Student", "Cu<%06sxQM`$?", (Curriculum) null, 125, 125, 125, 125, 2667, 2667, 2667, 2667, 2667, 2667, 2667, 125, 125, 2667, 9, (-2721.820703));
      student0.getCurriculum();
      assertEquals("Cu<%06sxQM`$?", student0.getNationalId());
      assertEquals("j_^3KR:4*D1", student0.getAffirmativePolicy());
      assertEquals("!QQb3<yP-h", student0.getSecondarySchoolGraduationYear());
      assertEquals("Cu<%06sxQM`$?", student0.getAdmissionStr());
      assertEquals(", mobilityTerms=", student0.getCountry());
      assertEquals("Cu<%06sxQM`$?", student0.getBirthDate());
      assertEquals("Cu<%06sxQM`$?", student0.getName());
      assertEquals("Cu<%06sxQM`$?", student0.getCurriculumCode());
      assertEquals("!QQb3<yP-h", student0.getPlaceOfBirth());
      assertEquals("!QQb3<yP-h", student0.getRace());
      assertEquals("9Yxp]ZX$nF=5.a]g", student0.getStatusTerm());
      assertEquals("j_^3KR:4*D1", student0.getAdmissionTerm());
      assertEquals("", student0.getDisabilities());
      assertEquals("IGNORE_TYPE_VARIABLE_OR_WILDCARD", student0.getEmail());
      assertEquals("<", student0.getGender());
      assertEquals("br.edu.ufcg.computacao.eureca.backend.core.models.Student", student0.getCourseCode());
      assertEquals("IGNORE_TYPE_VARIABLE_OR_WILDCARD", student0.getStatusStr());
      assertEquals("<", student0.getNationality());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Curriculum curriculum0 = new Curriculum("7k`XEY0@WUu{EoE(47F", "1>RSf", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 0, 0, 0, 0, 0, 0, 0, 433, 2016, 2016, linkedList0, linkedList0, linkedList0, linkedList0, linkedList0);
      Student student0 = new Student(", complementaryCredits=", "41zwK{:", "C#EL", "C#EL", "41zwK{:", "41zwK{:", "~^r)", ", minMandatoryCreditsNeeded=", ", complementaryCredits=", ", nationalId='", "ZK", "", studentStatus0, "", ", minMandatoryCreditsNeeded=", (String) null, (String) null, "C#EL", (String) null, "", "ZK", ", minMandatoryCreditsNeeded=", curriculum0, 7, 433, (-1307), 1096, 0, 0, 0, 2.0, (-3830.4304747), 2466.5376217, (-118), (-1164), 433, 0, 0, 1879.5444);
      student0.getCurriculum();
      assertEquals("C#EL", student0.getAffirmativePolicy());
      assertEquals("", student0.getStatusTerm());
      assertEquals(", minMandatoryCreditsNeeded=", student0.getCurriculumCode());
      assertEquals("~^r)", student0.getMaritalStatus());
      assertEquals(", nationalId='", student0.getPlaceOfBirth());
      assertEquals("ZK", student0.getCourseCode());
      assertEquals(", minMandatoryCreditsNeeded=", student0.getAdmissionStr());
      assertEquals("41zwK{:", student0.getGender());
      assertEquals("", student0.getStatusStr());
      assertEquals(", minMandatoryCreditsNeeded=", student0.getNationality());
      assertEquals("ZK", student0.getRace());
      assertEquals("41zwK{:", student0.getEmail());
      assertEquals(", complementaryCredits=", student0.getCountry());
      assertEquals("C#EL", student0.getBirthDate());
      assertEquals("C#EL", student0.getName());
      assertEquals("41zwK{:", student0.getNationalId());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum(", gpa=", "> Pa.-RUEt", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 125, 0, 1, 125, 0, 0, 10, 125, 0, 10, set0, set0, set0, set0, set0);
      Student student0 = new Student((String) null, (String) null, (String) null, ", gpa=", (String) null, (String) null, "", ", gpa=", "", "+V{m4?b>c=dPw'%3ir", ", gpa=", "", studentStatus0, (String) null, ", gpa=", "com.google.common.base.CharMatcher$Any", "> Pa.-RUEt", "", ", optionalHours=", "", ", gpa=", (String) null, curriculum0, 10, 1, 1, 125, (-223), (-223), 437, 0.0, 125, (-223), 0, 10, 0, 255, 39, 1073.97659571);
      student0.getCurriculum();
      assertEquals("com.google.common.base.CharMatcher$Any", student0.getAdmissionTerm());
      assertEquals("", student0.getMaritalStatus());
      assertEquals(", gpa=", student0.getRace());
      assertEquals("", student0.getStatusStr());
      assertEquals("", student0.getCountry());
      assertEquals("+V{m4?b>c=dPw'%3ir", student0.getPlaceOfBirth());
      assertEquals(", optionalHours=", student0.getSecondarySchool());
      assertEquals("> Pa.-RUEt", student0.getDisabilities());
      assertEquals(", gpa=", student0.getAdmissionStr());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals(", gpa=", student0.getBirthDate());
      assertEquals(", gpa=", student0.getCourseCode());
      assertEquals(", gpa=", student0.getNationality());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
      PriorityQueue<String> priorityQueue0 = new PriorityQueue<String>();
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) linkedList0, (Collection<String>) priorityQueue0);
      Curriculum curriculum0 = new Curriculum("CJb*g\"i9n&Bku'", "'%.jQ)p", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, (-256), 13, (-692), (-3545), 159, (-256), (-692), 13, 508, 508, list0, list0, list0, priorityQueue0, list0);
      Student student0 = new Student("", "", "", "yh$d9HDQ|<bzW0", "yh$d9HDQ|<bzW0", "", "CJb*g\"i9n&Bku'", "Cvn|y^*;-f=;", "CJb*g\"i9n&Bku'", "yh$d9HDQ|<bzW0", "", "yh$d9HDQ|<bzW0", studentStatus0, "tOyD9:", "9M[F3`2>i;td~", "9M[F3`2>i;td~", "Cvn|y^*;-f=;", "'%.jQ)p", "Cvn|y^*;-f=;", "", "9M[F3`2>i;td~", (String) null, curriculum0, 13, 92, 508, 92, 159, 0, 0, 0, 0, (-692), (-256), 0, 508, (-692), (-2428), 92);
      student0.getCurriculum();
      assertEquals("yh$d9HDQ|<bzW0", student0.getEmail());
      assertEquals("yh$d9HDQ|<bzW0", student0.getBirthDate());
      assertEquals("", student0.getName());
      assertEquals("9M[F3`2>i;td~", student0.getAdmissionTerm());
      assertEquals("CJb*g\"i9n&Bku'", student0.getMaritalStatus());
      assertEquals("Cvn|y^*;-f=;", student0.getDisabilities());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals("CJb*g\"i9n&Bku'", student0.getCountry());
      assertEquals("9M[F3`2>i;td~", student0.getAdmissionStr());
      assertEquals("'%.jQ)p", student0.getAffirmativePolicy());
      assertEquals("9M[F3`2>i;td~", student0.getCourseCode());
      assertEquals("", student0.getNationalId());
      assertEquals("tOyD9:", student0.getStatusTerm());
      assertEquals("Cvn|y^*;-f=;", student0.getNationality());
      assertEquals("", student0.getRace());
      assertEquals("Cvn|y^*;-f=;", student0.getSecondarySchool());
      assertEquals("yh$d9HDQ|<bzW0", student0.getPlaceOfBirth());
      assertEquals("yh$d9HDQ|<bzW0", student0.getStatusStr());
      assertEquals("", student0.getGender());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Locale locale0 = Locale.TAIWAN;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      Curriculum curriculum0 = new Curriculum("CLOSED", ", admissionTerm='", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 4074, 4074, (-5533), 0, 7, 7, 1096, 0, (-5533), 0, set0, set0, set0, set0, set0);
      Student student0 = new Student("AlcK%Urcnb58 ", "AlcK%Urcnb58 ", "%Uu u^", "", "", "AlcK%Urcnb58 ", "%Uu u^", "", "f$4=M|O", "", "AlcK%Urcnb58 ", ", iea=", studentStatus0, "f$4=M|O", "R6ld6+:g+4", "B0GE99Z[RI2NOS`/", "%Uu u^", "B0GE99Z[RI2NOS`/", "com.google.common.primitives.Longs$LongConverter", "B0GE99Z[RI2NOS`/", (String) null, "com.google.common.primitives.Longs$LongConverter", curriculum0, 0, (-5533), 0, (-5533), (-5533), 0, (-157), (-157), 0.0, 4074, 1096, 0, 0, 683, 7, 1233.88869);
      student0.getCurriculum();
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("B0GE99Z[RI2NOS`/", student0.getSecondarySchoolGraduationYear());
      assertEquals("B0GE99Z[RI2NOS`/", student0.getAffirmativePolicy());
      assertEquals("%Uu u^", student0.getMaritalStatus());
      assertEquals("AlcK%Urcnb58 ", student0.getNationalId());
      assertEquals("com.google.common.primitives.Longs$LongConverter", student0.getCurriculumCode());
      assertEquals("AlcK%Urcnb58 ", student0.getGender());
      assertEquals("com.google.common.primitives.Longs$LongConverter", student0.getSecondarySchool());
      assertEquals("%Uu u^", student0.getName());
      assertEquals("AlcK%Urcnb58 ", student0.getRace());
      assertEquals("f$4=M|O", student0.getStatusTerm());
      assertEquals("", student0.getNationality());
      assertEquals("", student0.getEmail());
      assertEquals("B0GE99Z[RI2NOS`/", student0.getAdmissionTerm());
      assertEquals(", iea=", student0.getStatusStr());
      assertEquals("", student0.getBirthDate());
      assertEquals("f$4=M|O", student0.getCountry());
      assertEquals("R6ld6+:g+4", student0.getAdmissionStr());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      HashSet<String> hashSet0 = new HashSet<String>();
      Curriculum curriculum0 = new Curriculum(":z]B0n", "~6d0", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 0, (-2144), (-6), (-6), (-2144), 0, 0, (-6), (-3867), (-1320), hashSet0, hashSet0, hashSet0, hashSet0, hashSet0);
      Student student0 = new Student("Y3|?i:z", "$)BX$jK7zF=Db!p", "", "Y3|?i:z", (String) null, "Y3|?i:z", "Y3|?i:z", "n,*;K2Bai%o@tBS", "n,*;K2Bai%o@tBS", "", "com.google.common.collect.BoundType", (String) null, studentStatus0, "3\"", "", "", "SENSITIVE", "", "{Z", (String) null, "com.google.common.collect.BoundType", "$)BX$jK7zF=Db!p", curriculum0, (-1320), (-1), (-6), 1588, 3885, (-2546), (-6), (-6), (-1126.867011017), 3885, 1603, 0, 1209, 0, 0, 6071.883005191);
      student0.getCurriculum();
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("3\"", student0.getStatusTerm());
      assertEquals("com.google.common.collect.BoundType", student0.getCourseCode());
      assertEquals("SENSITIVE", student0.getDisabilities());
      assertEquals("Y3|?i:z", student0.getGender());
      assertEquals("n,*;K2Bai%o@tBS", student0.getNationality());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("n,*;K2Bai%o@tBS", student0.getCountry());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("Y3|?i:z", student0.getMaritalStatus());
      assertEquals("$)BX$jK7zF=Db!p", student0.getNationalId());
      assertEquals("Y3|?i:z", student0.getBirthDate());
      assertEquals("", student0.getName());
      assertEquals("{Z", student0.getSecondarySchool());
      assertEquals("$)BX$jK7zF=Db!p", student0.getCurriculumCode());
      assertEquals("", student0.getAdmissionStr());
      assertEquals("com.google.common.collect.BoundType", student0.getRace());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("2ge~3^</oDIZ%T", "~Mp&Q},EocR*F", "com.google.common.collect.DiscreteDomain$1", "", "rG", (String) null, ", admissionGrade=", "", (String) null, "", "com.google.common.collect.DiscreteDomain$1", "%PUC8e=ncv", studentStatus0, "", "", "350IY_M~J4m'_P/L", "com.google.common.collect.DiscreteDomain$1", "", ", courseCode='", "=+s", (String) null, "", (Curriculum) null, 40, (-1228), (-73), 0, 586, (-73), 0, 0, 586, 0, 0, (-73), 0, 0, (-1228), (-2490));
      String string0 = student0.getCourseCode();
      assertEquals(", courseCode='", student0.getSecondarySchool());
      assertEquals("", student0.getStatusTerm());
      assertEquals("", student0.getBirthDate());
      assertEquals("=+s", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getNationality());
      assertNull(string0);
      assertEquals("350IY_M~J4m'_P/L", student0.getAdmissionTerm());
      assertEquals("", student0.getCurriculumCode());
      assertEquals("rG", student0.getEmail());
      assertEquals("~Mp&Q},EocR*F", student0.getNationalId());
      assertEquals(", admissionGrade=", student0.getMaritalStatus());
      assertEquals("%PUC8e=ncv", student0.getStatusStr());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("com.google.common.collect.DiscreteDomain$1", student0.getName());
      assertEquals("com.google.common.collect.DiscreteDomain$1", student0.getRace());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("", student0.getAdmissionStr());
      assertEquals("com.google.common.collect.DiscreteDomain$1", student0.getDisabilities());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("}j/U;.iE;=?)tae", "com.google.common.collect.FilteredEntryMultimap$ValuePredicate", "ALUMNUS", "}j/U;.iE;=?)tae", "cRFK &C5Mm6qN]", "com.google.common.collect.FilteredEntryMultimap$ValuePredicate", "ALUMNUS", "cRFK &C5Mm6qN]", "CANCELAMENTO DE MATRICULA ", "CANCELAMENTO DE MATRICULA ", "com.google.common.collect.Range$UpperBoundFn", "ALUMNUS", studentStatus0, "cRFK &C5Mm6qN]", (String) null, "CANCELAMENTO DE MATRICULA ", "", (String) null, "com.google.common.collect.Range$UpperBoundFn", "Predicates.contains(", "", "CharMatcher.none()", (Curriculum) null, (-953), (-953), (-953), (-953), (-953), (-12931), (-1), (-1), (-12931), (-953), 6, (-259), 0, (-953), 0, (-259));
      String string0 = student0.getCourseCode();
      assertEquals("ALUMNUS", student0.getStatusStr());
      assertEquals("com.google.common.collect.Range$UpperBoundFn", student0.getSecondarySchool());
      assertEquals("}j/U;.iE;=?)tae", student0.getBirthDate());
      assertEquals("ALUMNUS", student0.getMaritalStatus());
      assertEquals("com.google.common.collect.FilteredEntryMultimap$ValuePredicate", student0.getNationalId());
      assertEquals("com.google.common.collect.Range$UpperBoundFn", student0.getRace());
      assertEquals("cRFK &C5Mm6qN]", student0.getEmail());
      assertEquals("cRFK &C5Mm6qN]", student0.getNationality());
      assertEquals("ALUMNUS", student0.getName());
      assertEquals("", string0);
      assertEquals("Predicates.contains(", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getDisabilities());
      assertEquals("CANCELAMENTO DE MATRICULA ", student0.getCountry());
      assertEquals("CharMatcher.none()", student0.getCurriculumCode());
      assertEquals("com.google.common.collect.FilteredEntryMultimap$ValuePredicate", student0.getGender());
      assertEquals("CANCELAMENTO DE MATRICULA ", student0.getAdmissionTerm());
      assertEquals("CANCELAMENTO DE MATRICULA ", student0.getPlaceOfBirth());
      assertEquals("cRFK &C5Mm6qN]", student0.getStatusTerm());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Curriculum curriculum0 = new Curriculum((String) null, "|X&eh}BOJ--!Sy@Zs", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2093, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null);
      Student student0 = new Student("c0R&huXji'2G[", "c0R&huXji'2G[", "c0R&huXji'2G[", "", "c0R&huXji'2G[", ", gpa=", "", "", (String) null, "", "com.google.common.collect.Cut", "|X&eh}BOJ--!Sy@Zs", studentStatus0, "", "", "", (String) null, (String) null, ", courseCode='", "pjs3zg.2<", "", "com.google.common.collect.Cut", curriculum0, 0, 0, 0, 675, 0, (-3510), 0, (-1.0), 0.0, (-5319.991850448366), (-2898), 1, 924, 675, 0, (-1.0));
      String string0 = student0.getCountry();
      assertEquals("", student0.getMaritalStatus());
      assertNull(string0);
      assertEquals("", student0.getCourseCode());
      assertEquals("com.google.common.collect.Cut", student0.getCurriculumCode());
      assertEquals("com.google.common.collect.Cut", student0.getRace());
      assertEquals(", gpa=", student0.getGender());
      assertEquals("", student0.getBirthDate());
      assertEquals(", courseCode='", student0.getSecondarySchool());
      assertEquals("c0R&huXji'2G[", student0.getName());
      assertEquals("pjs3zg.2<", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getNationality());
      assertEquals("", student0.getAdmissionStr());
      assertEquals("", student0.getStatusTerm());
      assertEquals("c0R&huXji'2G[", student0.getEmail());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("|X&eh}BOJ--!Sy@Zs", student0.getStatusStr());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum("5*WlZ;U_3zC", "", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 0, 8232, 0, 8232, 8232, 2, 8232, 0, 1340, 8232, set0, set0, set0, set0, set0);
      Student student0 = new Student((String) null, "-eCp.>", "b#9g?0", (String) null, (String) null, "b#9g?0", ":*()G<QDc", "b#9g?0", "", "b#9g?0", "", "-eCp.>", studentStatus0, ":*()G<QDc", "b#9g?0", (String) null, (String) null, "T~T|PEckh%2+ k", ":*()G<QDc", "AZR!hYnAWU{]ZIOjb2", "", ":*()G<QDc", curriculum0, 1340, 1316, 2, 0, 1340, 1316, 1340, 1340, (-456.62367), 465.0293876307, 0, 1316, 4, 807, 1025, 0);
      String string0 = student0.getCountry();
      assertNotNull(string0);
      assertEquals("b#9g?0", student0.getPlaceOfBirth());
      assertEquals("-eCp.>", student0.getStatusStr());
      assertEquals("b#9g?0", student0.getNationality());
      assertEquals(":*()G<QDc", student0.getMaritalStatus());
      assertEquals("b#9g?0", student0.getAdmissionStr());
      assertEquals("", student0.getRace());
      assertEquals(":*()G<QDc", student0.getCurriculumCode());
      assertEquals(":*()G<QDc", student0.getSecondarySchool());
      assertEquals("", string0);
      assertEquals("b#9g?0", student0.getName());
      assertEquals("AZR!hYnAWU{]ZIOjb2", student0.getSecondarySchoolGraduationYear());
      assertEquals("-eCp.>", student0.getNationalId());
      assertEquals("b#9g?0", student0.getGender());
      assertEquals(":*()G<QDc", student0.getStatusTerm());
      assertEquals("", student0.getCourseCode());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student("n:|jO2?9-4XxZky'", (String) null, "n:|jO2?9-4XxZky'", "J:-&H", "p?^6sLk3", "sz&\"{Y(7D?l4Y$b#hQH", " 02Hz", (String) null, "^9C(", " 02Hz", "CANCELADO NOVO INGRESSO MESMO CURSO", (String) null, studentStatus0, "^9C(", "p?^6sLk3", "n:|jO2?9-4XxZky'", (String) null, "^9C(", "sz&\"{Y(7D?l4Y$b#hQH", ",6No@", " 02Hz", " 02Hz", (Curriculum) null, 0, 0, 1, (-2618), 1, 0, 11, 1, (-2618), 1.0, 11, 1, 0, 1, 10, (-235.9687472));
      int int0 = student0.getCompletedTerms();
      assertEquals(" 02Hz", student0.getPlaceOfBirth());
      assertEquals("sz&\"{Y(7D?l4Y$b#hQH", student0.getGender());
      assertEquals("n:|jO2?9-4XxZky'", student0.getAdmissionTerm());
      assertEquals("^9C(", student0.getCountry());
      assertEquals("sz&\"{Y(7D?l4Y$b#hQH", student0.getSecondarySchool());
      assertEquals(" 02Hz", student0.getCourseCode());
      assertEquals(11, int0);
      assertEquals(" 02Hz", student0.getMaritalStatus());
      assertEquals("p?^6sLk3", student0.getEmail());
      assertEquals(",6No@", student0.getSecondarySchoolGraduationYear());
      assertEquals("^9C(", student0.getStatusTerm());
      assertEquals("p?^6sLk3", student0.getAdmissionStr());
      assertEquals("^9C(", student0.getAffirmativePolicy());
      assertEquals(" 02Hz", student0.getCurriculumCode());
      assertEquals("n:|jO2?9-4XxZky'", student0.getName());
      assertEquals("CANCELADO NOVO INGRESSO MESMO CURSO", student0.getRace());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Curriculum curriculum0 = new Curriculum((String) null, "|X&eh}BOJ--!Sy@Zs", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2093, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null);
      Student student0 = new Student("c0R&huXji'2G[", "c0R&huXji'2G[", "c0R&huXji'2G[", "", "c0R&huXji'2G[", ", gpa=", "", "", (String) null, "", "com.google.common.collect.Cut", "|X&eh}BOJ--!Sy@Zs", studentStatus0, "", "", "", (String) null, (String) null, ", courseCode='", "pjs3zg.2<", "", "com.google.common.collect.Cut", curriculum0, 0, 0, 0, 675, 0, (-3510), 0, (-1.0), 0.0, (-5319.991850448366), (-2898), 1, 924, 675, 0, (-1.0));
      student0.getCompletedTerms();
      assertEquals(", courseCode='", student0.getSecondarySchool());
      assertEquals("|X&eh}BOJ--!Sy@Zs", student0.getStatusStr());
      assertEquals("", student0.getBirthDate());
      assertEquals("", student0.getCourseCode());
      assertEquals("com.google.common.collect.Cut", student0.getRace());
      assertEquals("c0R&huXji'2G[", student0.getNationalId());
      assertEquals("", student0.getAdmissionStr());
      assertEquals("com.google.common.collect.Cut", student0.getCurriculumCode());
      assertEquals("pjs3zg.2<", student0.getSecondarySchoolGraduationYear());
      assertEquals(", gpa=", student0.getGender());
      assertEquals("c0R&huXji'2G[", student0.getName());
      assertEquals("c0R&huXji'2G[", student0.getEmail());
      assertEquals("", student0.getAdmissionTerm());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("4ip3}z.*u4", (String) null, (String) null, (String) null, (String) null, (String) null, (String) null, "", "', '", (String) null, "", "vV,(wh", studentStatus0, "", ".Lv3l", (String) null, "", ", minActivitiesNeeded=", "w);", "', '", ", nationality='", "P4N<UU", (Curriculum) null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.0, 0, 0, (-1833), (-1833), 0, 0.0);
      int int0 = student0.getCompletedCredits();
      assertEquals(".Lv3l", student0.getAdmissionStr());
      assertEquals("", student0.getDisabilities());
      assertEquals("", student0.getRace());
      assertEquals("', '", student0.getCountry());
      assertEquals("w);", student0.getSecondarySchool());
      assertEquals(", minActivitiesNeeded=", student0.getAffirmativePolicy());
      assertEquals("", student0.getNationality());
      assertEquals("", student0.getStatusTerm());
      assertEquals("vV,(wh", student0.getStatusStr());
      assertEquals("', '", student0.getSecondarySchoolGraduationYear());
      assertEquals("P4N<UU", student0.getCurriculumCode());
      assertEquals(0, int0);
      assertEquals(", nationality='", student0.getCourseCode());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("com.google.common.base.CharMatcher$RangesMatcher", "com.google.common.base.CharMatcher$RangesMatcher", "com.google.common.base.CharMatcher$RangesMatcher", "|C-Q@q_S1", "com.google.common.base.CharMatcher$RangesMatcher", "", "com.google.common.base.CharMatcher$RangesMatcher", "", "R2>?6PJ3/oV:(?|_", "", " %KfhCI(djjm*gjH8", "OyepOKe$L@Np|=", studentStatus0, ", iea=", "R2>?6PJ3/oV:(?|_", "R2>?6PJ3/oV:(?|_", "OyepOKe$L@Np|=", "+Ht", "|C-Q@q_S1", "+Ht", "com.google.common.collect.Range$UpperBoundFn", "", (Curriculum) null, 875, 875, 995, 995, (-610), 995, 3434, 4.9E-324, 0.0, (-1476.921284), 875, 875, 3434, 0, 0, 1.0);
      int int0 = student0.getCompletedCredits();
      assertEquals("OyepOKe$L@Np|=", student0.getStatusStr());
      assertEquals("", student0.getNationality());
      assertEquals("com.google.common.base.CharMatcher$RangesMatcher", student0.getName());
      assertEquals("R2>?6PJ3/oV:(?|_", student0.getCountry());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("+Ht", student0.getAffirmativePolicy());
      assertEquals("|C-Q@q_S1", student0.getSecondarySchool());
      assertEquals("|C-Q@q_S1", student0.getBirthDate());
      assertEquals("+Ht", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getCurriculumCode());
      assertEquals("com.google.common.base.CharMatcher$RangesMatcher", student0.getMaritalStatus());
      assertEquals("com.google.common.collect.Range$UpperBoundFn", student0.getCourseCode());
      assertEquals(" %KfhCI(djjm*gjH8", student0.getRace());
      assertEquals("", student0.getGender());
      assertEquals(", iea=", student0.getStatusTerm());
      assertEquals("R2>?6PJ3/oV:(?|_", student0.getAdmissionStr());
      assertEquals("com.google.common.base.CharMatcher$RangesMatcher", student0.getNationalId());
      assertEquals("R2>?6PJ3/oV:(?|_", student0.getAdmissionTerm());
      assertEquals("OyepOKe$L@Np|=", student0.getDisabilities());
      assertEquals(2865, int0);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("", "", "", "", "", "", "", "0", "", "", "}", "xDx^#SNlxvQ`", studentStatus0, "", "!;NA3$v_3", "", "0", "}", "erph/WX-_)|FB8M/vH", "0", "~VD<", "", (Curriculum) null, 0, 0, 1450, 0, 0, (-461), 0, 0, 0, 1450, 1450, (-461), 10, (-461), 4, 0);
      student0.getComplementaryHours();
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("", student0.getCountry());
      assertEquals("xDx^#SNlxvQ`", student0.getStatusStr());
      assertEquals("0", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getMaritalStatus());
      assertEquals("}", student0.getRace());
      assertEquals("0", student0.getNationality());
      assertEquals("", student0.getStatusTerm());
      assertEquals("", student0.getGender());
      assertEquals("}", student0.getAffirmativePolicy());
      assertEquals("0", student0.getDisabilities());
      assertEquals("", student0.getNationalId());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("", student0.getName());
      assertEquals("", student0.getEmail());
      assertEquals("erph/WX-_)|FB8M/vH", student0.getSecondarySchool());
      assertEquals("!;NA3$v_3", student0.getAdmissionStr());
      assertEquals("~VD<", student0.getCourseCode());
      assertEquals("", student0.getCurriculumCode());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("", "", "", "", "", "", "", "", "", "", "TRANSFERIDO PARA OUTRA IES", "#ylcb. |t9_ALCz`", studentStatus0, "", "#ylcb. |t9_ALCz`", "", "", "CharMatcher.anyOf(\"", "#ylcb. |t9_ALCz`", "!SEM=[", "!SEM=[", "3$O", (Curriculum) null, 0, 0, 0, 8192, (-168), 0, 8192, (-168), 0, 0, 0, 0, 8192, 0, 8287, (-168));
      student0.getComplementaryHours();
      assertEquals("#ylcb. |t9_ALCz`", student0.getSecondarySchool());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("", student0.getStatusTerm());
      assertEquals("", student0.getEmail());
      assertEquals("#ylcb. |t9_ALCz`", student0.getStatusStr());
      assertEquals("", student0.getNationality());
      assertEquals("#ylcb. |t9_ALCz`", student0.getAdmissionStr());
      assertEquals("!SEM=[", student0.getSecondarySchoolGraduationYear());
      assertEquals("CharMatcher.anyOf(\"", student0.getAffirmativePolicy());
      assertEquals("", student0.getMaritalStatus());
      assertEquals("3$O", student0.getCurriculumCode());
      assertEquals("", student0.getGender());
      assertEquals("", student0.getCountry());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("", student0.getDisabilities());
      assertEquals("", student0.getBirthDate());
      assertEquals("", student0.getNationalId());
      assertEquals("", student0.getName());
      assertEquals("TRANSFERIDO PARA OUTRA IES", student0.getRace());
      assertEquals("!SEM=[", student0.getCourseCode());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student(",aUX", "UNFEASIBLE", "!k_a", "UNFEASIBLE", "UNFEASIBLE", ",aUX", "!k_a", "Ul}(^Wn$L", "UNFEASIBLE", "Ul}(^Wn$L", ",aUX", "0=|\"D.fp$EAk", studentStatus0, "Ul}(^Wn$L", "Predicates.contains(", ", complementaryCredits=", "o&R_g4&^^6{XpQ|", "X9fyPY%X{IP\"OV:Q> ", "Predicates.contains(", "", ", statusStr='", "Ul}(^Wn$L", (Curriculum) null, 0, 0, (-2425), 0, 0, 14, 0, (-767.0), 0, (-1278.6685487954715), (-266), 9, 0, 14, 0, (-1278.6685487954715));
      student0.getComplementaryCredits();
      assertEquals("o&R_g4&^^6{XpQ|", student0.getDisabilities());
      assertEquals(",aUX", student0.getGender());
      assertEquals(", complementaryCredits=", student0.getAdmissionTerm());
      assertEquals("Ul}(^Wn$L", student0.getNationality());
      assertEquals("0=|\"D.fp$EAk", student0.getStatusStr());
      assertEquals("X9fyPY%X{IP\"OV:Q> ", student0.getAffirmativePolicy());
      assertEquals("UNFEASIBLE", student0.getNationalId());
      assertEquals("UNFEASIBLE", student0.getBirthDate());
      assertEquals(", statusStr='", student0.getCourseCode());
      assertEquals("Predicates.contains(", student0.getAdmissionStr());
      assertEquals("Ul}(^Wn$L", student0.getCurriculumCode());
      assertEquals("Ul}(^Wn$L", student0.getPlaceOfBirth());
      assertEquals("!k_a", student0.getName());
      assertEquals("Predicates.contains(", student0.getSecondarySchool());
      assertEquals("UNFEASIBLE", student0.getCountry());
      assertEquals("UNFEASIBLE", student0.getEmail());
      assertEquals("Ul}(^Wn$L", student0.getStatusTerm());
      assertEquals(",aUX", student0.getRace());
      assertEquals("!k_a", student0.getMaritalStatus());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Stack<String> stack0 = new Stack<String>();
      Curriculum curriculum0 = new Curriculum((String) null, "P!Y62QA;We4Xa!8}A?F", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 1627, 1627, 10, 1627, 4660, 550, 550, 378, (-635), 4, stack0, stack0, stack0, stack0, stack0);
      Student student0 = new Student("(d*]G?9]1yt", (String) null, (String) null, "=,\"", "=,\"", "(d*]G?9]1yt", "Q4Tw{-!'$'i`Yl", (String) null, (String) null, "r!@nQ66* xdsd;Ed3=>", "Q^4 o1M=.Z", "Q4Tw{-!'$'i`Yl", studentStatus0, "8y-{|}oL0&v", "/::*N;Z1nVWvg\"(}AWQ", (String) null, "=,\"", "mdTqACF&F>K_M_$5f", "Q^4 o1M=.Z", (String) null, "CANCELADO NOVO INGRESSO OUTRO CURSO", (String) null, curriculum0, 4660, 1627, (-1111), (-1111), (-635), (-1652), 10, (-1111), 0.0, 0.0, (-1111), 550, 0, 0, 14, 0.5);
      student0.getComplementaryCredits();
      assertEquals("=,\"", student0.getDisabilities());
      assertEquals("8y-{|}oL0&v", student0.getStatusTerm());
      assertEquals("Q^4 o1M=.Z", student0.getSecondarySchool());
      assertEquals("=,\"", student0.getBirthDate());
      assertEquals("=,\"", student0.getEmail());
      assertEquals("(d*]G?9]1yt", student0.getGender());
      assertEquals("/::*N;Z1nVWvg\"(}AWQ", student0.getAdmissionStr());
      assertEquals("Q^4 o1M=.Z", student0.getRace());
      assertEquals("r!@nQ66* xdsd;Ed3=>", student0.getPlaceOfBirth());
      assertEquals("CANCELADO NOVO INGRESSO OUTRO CURSO", student0.getCourseCode());
      assertEquals("Q4Tw{-!'$'i`Yl", student0.getMaritalStatus());
      assertEquals("mdTqACF&F>K_M_$5f", student0.getAffirmativePolicy());
      assertEquals("Q4Tw{-!'$'i`Yl", student0.getStatusStr());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student((String) null, "6Vg(5;7e/rO&5p,O1`,", (String) null, (String) null, "3>NNoEZ/OPI:.!?", "3z7OIKbQ", "3>NNoEZ/OPI:.!?", "6Vg(5;7e/rO&5p,O1`,", "6Vg(5;7e/rO&5p,O1`,", (String) null, "", "3>NNoEZ/OPI:.!?", studentStatus0, "", "", "3>NNoEZ/OPI:.!?", "", "com.google.common.collect.Range", "6Vg(5;7e/rO&5p,O1`,", "3z7OIKbQ", "com.google.common.collect.Range", "8sBY(tR-", (Curriculum) null, 0, 3505, 3505, 12, 0, 12, 12, 1693.1, (-113.70989444), 1.0, 12, 3505, (-1046), 806, (-1046), (-113.70989444));
      String string0 = student0.getBirthDate();
      assertEquals("8sBY(tR-", student0.getCurriculumCode());
      assertEquals("3>NNoEZ/OPI:.!?", student0.getMaritalStatus());
      assertEquals("", student0.getRace());
      assertEquals("", student0.getAdmissionStr());
      assertEquals("6Vg(5;7e/rO&5p,O1`,", student0.getNationalId());
      assertEquals("3>NNoEZ/OPI:.!?", student0.getStatusStr());
      assertEquals("3>NNoEZ/OPI:.!?", student0.getAdmissionTerm());
      assertEquals("6Vg(5;7e/rO&5p,O1`,", student0.getNationality());
      assertEquals("", student0.getDisabilities());
      assertEquals("6Vg(5;7e/rO&5p,O1`,", student0.getSecondarySchool());
      assertEquals("3z7OIKbQ", student0.getGender());
      assertEquals("com.google.common.collect.Range", student0.getCourseCode());
      assertEquals("3>NNoEZ/OPI:.!?", student0.getEmail());
      assertNull(string0);
      assertEquals("com.google.common.collect.Range", student0.getAffirmativePolicy());
      assertEquals("3z7OIKbQ", student0.getSecondarySchoolGraduationYear());
      assertEquals("6Vg(5;7e/rO&5p,O1`,", student0.getCountry());
      assertEquals("", student0.getStatusTerm());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("T|y7qy,b", "T|y7qy,b", ", statusTerm='", "", "rw=anp]bQ6%C-;/f.P", "", "zQ", "Y3;$ju", "Y3;$ju", "T|y7qy,b", "", "", studentStatus0, "T|y7qy,b", ", statusTerm='", "$6@xRal\"a>5", "$6@xRal\"a>5", "zaBvK@", "T|y7qy,b", "CANCELADO 3 REPROV MESMA DISCIPLINA", ", statusStr='", "?TUw/f{y", (Curriculum) null, 2374, 0, 0, 65535, Integer.MIN_VALUE, (-3903), 2374, (-1243.12223457719), (-135.6), 65535, (-470), 1973, 65535, 65535, 558, (-1243.12223457719));
      String string0 = student0.getBirthDate();
      assertEquals("T|y7qy,b", student0.getStatusTerm());
      assertEquals("rw=anp]bQ6%C-;/f.P", student0.getEmail());
      assertEquals("zaBvK@", student0.getAffirmativePolicy());
      assertEquals("T|y7qy,b", student0.getPlaceOfBirth());
      assertEquals("", student0.getGender());
      assertEquals(", statusTerm='", student0.getName());
      assertEquals("", student0.getStatusStr());
      assertEquals("", student0.getRace());
      assertEquals("", string0);
      assertEquals("CANCELADO 3 REPROV MESMA DISCIPLINA", student0.getSecondarySchoolGraduationYear());
      assertEquals(", statusTerm='", student0.getAdmissionStr());
      assertEquals("Y3;$ju", student0.getCountry());
      assertEquals("Y3;$ju", student0.getNationality());
      assertEquals("$6@xRal\"a>5", student0.getAdmissionTerm());
      assertEquals("$6@xRal\"a>5", student0.getDisabilities());
      assertEquals("T|y7qy,b", student0.getNationalId());
      assertEquals("T|y7qy,b", student0.getSecondarySchool());
      assertEquals("zQ", student0.getMaritalStatus());
      assertEquals("?TUw/f{y", student0.getCurriculumCode());
      assertEquals(", statusStr='", student0.getCourseCode());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Stack<String> stack0 = new Stack<String>();
      Curriculum curriculum0 = new Curriculum("XO[}}!9}4<jl>a", "YuGD{iEux9J0qK\"HK", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 92, 92, 92, 92, 92, (-1999), (-1999), 92, 92, 92, stack0, stack0, stack0, stack0, stack0);
      Student student0 = new Student("Enums.stringConverter(", "j9saEN#M#NaY(I&9]k-", "j9saEN#M#NaY(I&9]k-", "j9saEN#M#NaY(I&9]k-", "j9saEN#M#NaY(I&9]k-", "XO[}}!9}4<jl>a", "!7\"Plx*h:7", "j9saEN#M#NaY(I&9]k-", "XO[}}!9}4<jl>a", "j9saEN#M#NaY(I&9]k-", "XO[}}!9}4<jl>a", "cRO:0 LXlRGU", studentStatus0, "Enums.stringConverter(", "XO[}}!9}4<jl>a", "Enums.stringConverter(", "ogp?-U[", "!7\"Plx*h:7", "j9saEN#M#NaY(I&9]k-", "Wm{ tEYG", ", placeOfBirth='", "%:>xAlm7K(k", curriculum0, 92, (-1999), (-1), 16, 0, 0, 0, 0, 16, 0, (-1547), 5259, 0, 4, (-1547), 393.054872756429);
      student0.getAttemptedCredits();
      assertEquals("XO[}}!9}4<jl>a", student0.getAdmissionStr());
      assertEquals("!7\"Plx*h:7", student0.getMaritalStatus());
      assertEquals("Wm{ tEYG", student0.getSecondarySchoolGraduationYear());
      assertEquals("j9saEN#M#NaY(I&9]k-", student0.getPlaceOfBirth());
      assertEquals("%:>xAlm7K(k", student0.getCurriculumCode());
      assertEquals("Enums.stringConverter(", student0.getAdmissionTerm());
      assertEquals("ogp?-U[", student0.getDisabilities());
      assertEquals("XO[}}!9}4<jl>a", student0.getCountry());
      assertEquals("!7\"Plx*h:7", student0.getAffirmativePolicy());
      assertEquals("XO[}}!9}4<jl>a", student0.getRace());
      assertEquals(", placeOfBirth='", student0.getCourseCode());
      assertEquals("j9saEN#M#NaY(I&9]k-", student0.getNationalId());
      assertEquals("j9saEN#M#NaY(I&9]k-", student0.getName());
      assertEquals("XO[}}!9}4<jl>a", student0.getGender());
      assertEquals("j9saEN#M#NaY(I&9]k-", student0.getSecondarySchool());
      assertEquals("cRO:0 LXlRGU", student0.getStatusStr());
      assertEquals("j9saEN#M#NaY(I&9]k-", student0.getBirthDate());
      assertEquals("Enums.stringConverter(", student0.getStatusTerm());
      assertEquals("j9saEN#M#NaY(I&9]k-", student0.getEmail());
      assertEquals("j9saEN#M#NaY(I&9]k-", student0.getNationality());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("$n^", "]1NbYYUf@RZ`.&", "2Z3$ew'^d0RE4", "", "", "$n^", "", "2Z3$ew'^d0RE4", "$n^", "", "", "T7*C;ZD,=JY2UhM", studentStatus0, "", "", "", "$n^", "CANCELAMENTO P/ SOLICITACAO ALUNO", "qw6#~~D,OM-L", "", "", "", (Curriculum) null, 11, 3290, 11, 3290, (-1439), (-1439), (-2204), 1.0, 136.4, (-1439), 4031, 11, (-957), 4031, (-2204), (-1.0));
      student0.getAttemptedCredits();
      assertEquals("2Z3$ew'^d0RE4", student0.getName());
      assertEquals("2Z3$ew'^d0RE4", student0.getNationality());
      assertEquals("qw6#~~D,OM-L", student0.getSecondarySchool());
      assertEquals("$n^", student0.getDisabilities());
      assertEquals("$n^", student0.getGender());
      assertEquals("", student0.getCourseCode());
      assertEquals("CANCELAMENTO P/ SOLICITACAO ALUNO", student0.getAffirmativePolicy());
      assertEquals("", student0.getMaritalStatus());
      assertEquals("]1NbYYUf@RZ`.&", student0.getNationalId());
      assertEquals("", student0.getBirthDate());
      assertEquals("", student0.getEmail());
      assertEquals("", student0.getStatusTerm());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals("T7*C;ZD,=JY2UhM", student0.getStatusStr());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("", student0.getRace());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("$n^", student0.getCountry());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Curriculum curriculum0 = new Curriculum("oJi4L^lyIofN'P", "v{?w)Qda_NM", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 1, 1, (-5004), 1889, 1, (-5004), (-863), 2400, 1184, (-5004), (Collection<String>) null, linkedList0, linkedList0, (Collection<String>) null, (Collection<String>) null);
      Student student0 = new Student("oJi4L^lyIofN'P", "v{?w)Qda_NM", "oJi4L^lyIofN'P", "oJi4L^lyIofN'P", "v{?w)Qda_NM", "oJi4L^lyIofN'P", "/#d_`_Pi7}%^'LB!M|", "P6fnnX+I^U-PmSh/0W", "oJi4L^lyIofN'P", "oJi4L^lyIofN'P", "oJi4L^lyIofN'P", "", studentStatus0, "P6fnnX+I^U-PmSh/0W", "org.apache.commons.io.filefilter.AgeFileFilter", "oJi4L^lyIofN'P", "", ", mandatoryHours=", ":8~e[sN+#ySon@ND>O", "P6fnnX+I^U-PmSh/0W", "oJi4L^lyIofN'P", "org.apache.commons.io.filefilter.AgeFileFilter", curriculum0, 424, 1, 2012, (-863), 10, 2400, 424, (-4019.746945), 424, (-1795.364688989031), (-1800), (-1800), (-1800), 3058, 1, 2400);
      String string0 = student0.getAffirmativePolicy();
      assertEquals("oJi4L^lyIofN'P", student0.getName());
      assertEquals("", student0.getDisabilities());
      assertEquals("v{?w)Qda_NM", student0.getEmail());
      assertEquals(", mandatoryHours=", string0);
      assertEquals("oJi4L^lyIofN'P", student0.getPlaceOfBirth());
      assertEquals("oJi4L^lyIofN'P", student0.getAdmissionTerm());
      assertEquals("", student0.getStatusStr());
      assertEquals("oJi4L^lyIofN'P", student0.getCountry());
      assertEquals(":8~e[sN+#ySon@ND>O", student0.getSecondarySchool());
      assertEquals("oJi4L^lyIofN'P", student0.getRace());
      assertEquals("org.apache.commons.io.filefilter.AgeFileFilter", student0.getAdmissionStr());
      assertEquals("oJi4L^lyIofN'P", student0.getGender());
      assertEquals("P6fnnX+I^U-PmSh/0W", student0.getSecondarySchoolGraduationYear());
      assertEquals("oJi4L^lyIofN'P", student0.getCourseCode());
      assertEquals("org.apache.commons.io.filefilter.AgeFileFilter", student0.getCurriculumCode());
      assertEquals("P6fnnX+I^U-PmSh/0W", student0.getStatusTerm());
      assertEquals("v{?w)Qda_NM", student0.getNationalId());
      assertEquals("/#d_`_Pi7}%^'LB!M|", student0.getMaritalStatus());
      assertEquals("P6fnnX+I^U-PmSh/0W", student0.getNationality());
      assertEquals("oJi4L^lyIofN'P", student0.getBirthDate());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("", (String) null, (String) null, (String) null, "", "", "r#y@P(GQqql&!NyhM\"x", "", "tJJ/G|b=G=6`Y", "tJJ/G|b=G=6`Y", " ;blS9lb*f:/)kq!aq", (String) null, studentStatus0, "", "", (String) null, "]9.6%(^TztPSibzX^/c", "", "]9.6%(^TztPSibzX^/c", "tJJ/G|b=G=6`Y", "", "F<E`f2MLhP?!Z)|*+PF", (Curriculum) null, (-500), (-715), (-1552), (-831), (-1552), (-500), (-177), (-500), (-177), 126.97, (-2156), (-1476), 171, (-847), (-500), 126.97);
      String string0 = student0.getAffirmativePolicy();
      assertEquals("F<E`f2MLhP?!Z)|*+PF", student0.getCurriculumCode());
      assertEquals("r#y@P(GQqql&!NyhM\"x", student0.getMaritalStatus());
      assertEquals("tJJ/G|b=G=6`Y", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getNationality());
      assertEquals(" ;blS9lb*f:/)kq!aq", student0.getRace());
      assertEquals("", student0.getEmail());
      assertEquals("", student0.getCourseCode());
      assertEquals("]9.6%(^TztPSibzX^/c", student0.getDisabilities());
      assertEquals("tJJ/G|b=G=6`Y", student0.getPlaceOfBirth());
      assertEquals("", student0.getAdmissionStr());
      assertEquals("", string0);
      assertEquals("tJJ/G|b=G=6`Y", student0.getCountry());
      assertEquals("", student0.getGender());
      assertEquals("]9.6%(^TztPSibzX^/c", student0.getSecondarySchool());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student("Nnid j", "Nnid j", "Nnid j", (String) null, "Nnid j", "", "/]vmzi^baFw}$i^NRc", "", (String) null, "", "", (String) null, studentStatus0, "", "~?_@(0&Gg", (String) null, "", "", "", "", "", "Npyr", (Curriculum) null, 0, 31, 0, (-131), (-131), (-131), 0, (-131), 1559.36800278491, (-625.259), 5760, (-920), (-893), 5760, 0, 0.0);
      String string0 = student0.getAdmissionTerm();
      assertEquals("", student0.getNationality());
      assertEquals("", student0.getStatusTerm());
      assertEquals("", student0.getAffirmativePolicy());
      assertNull(string0);
      assertEquals("", student0.getSecondarySchool());
      assertEquals("~?_@(0&Gg", student0.getAdmissionStr());
      assertEquals("Npyr", student0.getCurriculumCode());
      assertEquals("", student0.getCourseCode());
      assertEquals("", student0.getGender());
      assertEquals("Nnid j", student0.getNationalId());
      assertEquals("Nnid j", student0.getName());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("Nnid j", student0.getEmail());
      assertEquals("", student0.getRace());
      assertEquals("", student0.getDisabilities());
      assertEquals("/]vmzi^baFw}$i^NRc", student0.getMaritalStatus());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("", "", "", "", (String) null, (String) null, ", nationality='", "A/#51vC.bzQpZ%8CH#Y", "", "A/#51vC.bzQpZ%8CH#Y", "O=opW", "org.apache.commons.io.filefilter.TrueFileFilter", studentStatus0, ">|516c?rrke2s", "6+!J:", "", ", nationality='", "k]o/g0Fe+;", "", "k]o/g0Fe+;", "Exception thrown by removal listener", "", (Curriculum) null, (-3641), (-3238), (-3238), 64, (-3641), 1073741823, (-3641), (-3641), (-759.25), (-759.25), (-3641), (-1318), 64, (-3641), 0, 0.03);
      String string0 = student0.getAdmissionTerm();
      assertEquals("k]o/g0Fe+;", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getName());
      assertEquals("", student0.getBirthDate());
      assertEquals("org.apache.commons.io.filefilter.TrueFileFilter", student0.getStatusStr());
      assertEquals("A/#51vC.bzQpZ%8CH#Y", student0.getNationality());
      assertEquals("k]o/g0Fe+;", student0.getAffirmativePolicy());
      assertEquals("", student0.getCountry());
      assertEquals(", nationality='", student0.getMaritalStatus());
      assertEquals("O=opW", student0.getRace());
      assertEquals(", nationality='", student0.getDisabilities());
      assertEquals("", string0);
      assertEquals("Exception thrown by removal listener", student0.getCourseCode());
      assertEquals("", student0.getSecondarySchool());
      assertEquals("", student0.getNationalId());
      assertEquals("A/#51vC.bzQpZ%8CH#Y", student0.getPlaceOfBirth());
      assertEquals("6+!J:", student0.getAdmissionStr());
      assertEquals("", student0.getCurriculumCode());
      assertEquals(">|516c?rrke2s", student0.getStatusTerm());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Curriculum curriculum0 = new Curriculum("CANCELADO REPROVOU TODAS POR FALTAS", "9\"|jBcc", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, (-1323), 0, 1780, 0, (-1), (-1008), (-1323), (-2152), 1813, 0, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null);
      Student student0 = new Student("CANCELAMENTO DE MATRICULA ", "pLCj..", "pLCj..", (String) null, (String) null, "pLCj..", "2", "2", "jnItK~7Cz'X'", "jnItK~7Cz'X'", "'", "hitCount", studentStatus0, (String) null, (String) null, "", "", "CANCELADO REPROVOU TODAS POR FALTAS", "C1c63X'6)|SBr", (String) null, "CANCELAMENTO DE MATRICULA ", "{Dz<+Q(\"/D", curriculum0, 0, 0, 11, 1780, 0, 1813, 0, 0, (-1), 0.0, (-1775), 0, (-379), (-2152), (-2119), 0.0);
      String string0 = student0.getAdmissionStr();
      assertEquals("hitCount", student0.getStatusStr());
      assertEquals("CANCELADO REPROVOU TODAS POR FALTAS", student0.getAffirmativePolicy());
      assertEquals("pLCj..", student0.getName());
      assertEquals("'", student0.getRace());
      assertEquals("C1c63X'6)|SBr", student0.getSecondarySchool());
      assertEquals("pLCj..", student0.getNationalId());
      assertEquals("", student0.getDisabilities());
      assertEquals("2", student0.getNationality());
      assertEquals("jnItK~7Cz'X'", student0.getPlaceOfBirth());
      assertEquals("jnItK~7Cz'X'", student0.getCountry());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("{Dz<+Q(\"/D", student0.getCurriculumCode());
      assertNull(string0);
      assertEquals("pLCj..", student0.getGender());
      assertEquals("2", student0.getMaritalStatus());
      assertEquals("CANCELAMENTO DE MATRICULA ", student0.getCourseCode());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("AG", "com.google.common.base.CharMatcher$None", (String) null, "$\"1Q+7", "A2OXBZsryt~m%?vGSK", "", (String) null, (String) null, "$\"1Q+7", "", "", ", status=", studentStatus0, "{(-?H^pdZ|glS)RK8", "", "$W>nz3e(5:3}", "", "$\"1Q+7", (String) null, "$ecW?", "com.google.common.base.CharMatcher$None", "", (Curriculum) null, 193, 0, (-4453), (-4453), 546, 0, (-4453), 0, 0.0, 193, 1943, 546, 754, 546, (-1301), (-473.89117668486074));
      String string0 = student0.getAdmissionStr();
      assertEquals("", student0.getGender());
      assertEquals(", status=", student0.getStatusStr());
      assertEquals("$ecW?", student0.getSecondarySchoolGraduationYear());
      assertEquals("com.google.common.base.CharMatcher$None", student0.getCourseCode());
      assertEquals("$\"1Q+7", student0.getCountry());
      assertEquals("$\"1Q+7", student0.getBirthDate());
      assertEquals("", string0);
      assertEquals("com.google.common.base.CharMatcher$None", student0.getNationalId());
      assertEquals("$W>nz3e(5:3}", student0.getAdmissionTerm());
      assertEquals("$\"1Q+7", student0.getAffirmativePolicy());
      assertEquals("{(-?H^pdZ|glS)RK8", student0.getStatusTerm());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("", student0.getDisabilities());
      assertEquals("A2OXBZsryt~m%?vGSK", student0.getEmail());
      assertEquals("", student0.getRace());
      assertNotNull(string0);
      assertEquals("", student0.getCurriculumCode());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("", ", disabilities='", "", ".!7rKz", "~`FE!$gc=3F", "", "CANCELAMENTO POR ABANDONO", ", placeOfBirth='", "@wB6*>EWryRz,E4}f", ": ", "r{hUK|X=B9ddB", "@wB6*>EWryRz,E4}f", studentStatus0, "", "", "dvDTa3WW5'v_", ": ", "", "[]-U4[b3Zh6", "", "\n}nL$#J", "gdM5%I", (Curriculum) null, 6, 0, 0, 2141, 6, 0, 0, (-397.073908), 0.0, (-2035.46760729), 0, 0, 346, 0, 1072, 0.0);
      student0.getAdmissionGrade();
      assertEquals(".!7rKz", student0.getBirthDate());
      assertEquals(", disabilities='", student0.getNationalId());
      assertEquals("", student0.getName());
      assertEquals("", student0.getStatusTerm());
      assertEquals("[]-U4[b3Zh6", student0.getSecondarySchool());
      assertEquals("CANCELAMENTO POR ABANDONO", student0.getMaritalStatus());
      assertEquals("dvDTa3WW5'v_", student0.getAdmissionTerm());
      assertEquals(": ", student0.getDisabilities());
      assertEquals(": ", student0.getPlaceOfBirth());
      assertEquals("~`FE!$gc=3F", student0.getEmail());
      assertEquals(", placeOfBirth='", student0.getNationality());
      assertEquals("\n}nL$#J", student0.getCourseCode());
      assertEquals("gdM5%I", student0.getCurriculumCode());
      assertEquals("", student0.getAdmissionStr());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("@wB6*>EWryRz,E4}f", student0.getCountry());
      assertEquals("@wB6*>EWryRz,E4}f", student0.getStatusStr());
      assertEquals("", student0.getGender());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      String string0 = "S%D9ETyo;;\\u(f";
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student(", race='", ", race='", ", race='", "", (String) null, string0, (String) null, "k&mE]Bj,Bp", (String) null, "", "", "hGS4vP`3nZ[^P95+lW'", studentStatus0, "", ", race='", ")S[3 =1CDV3GPG_t/&m", "s", ")S[3 =1CDV3GPG_t/&m", "jpaR#", "", "s", "", (Curriculum) null, 2224, 2224, 2224, 2224, 2224, 39, 39, 1382.7235194102875, 2224, 1382.7235194102875, 1192, (-1922), (-1922), (-552), 477, (-1922));
      student0.getAdmissionGrade();
      assertEquals("hGS4vP`3nZ[^P95+lW'", student0.getStatusStr());
      assertEquals("k&mE]Bj,Bp", student0.getNationality());
      assertEquals("s", student0.getDisabilities());
      assertEquals("S%D9ETyo;;\\u(f", student0.getGender());
      assertEquals(", race='", student0.getNationalId());
      assertEquals("", student0.getBirthDate());
      assertEquals("s", student0.getCourseCode());
      assertEquals("", student0.getStatusTerm());
      assertEquals(", race='", student0.getAdmissionStr());
      assertEquals(")S[3 =1CDV3GPG_t/&m", student0.getAdmissionTerm());
      assertEquals(", race='", student0.getName());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("", student0.getRace());
      assertEquals(")S[3 =1CDV3GPG_t/&m", student0.getAffirmativePolicy());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals("jpaR#", student0.getSecondarySchool());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      PriorityQueue<String> priorityQueue0 = new PriorityQueue<String>(comparator0);
      Curriculum curriculum0 = new Curriculum("", "~$Dsv/4-+d3F~9F_j_", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, (-509), 0, (-509), (-509), 0, 0, (-509), 0, 0, (-509), priorityQueue0, priorityQueue0, priorityQueue0, priorityQueue0, priorityQueue0);
      Student student0 = new Student("com.google.common.base.Converter", "com.google.common.base.Converter", "~$Dsv/4-+d3F~9F_j_", "com.google.common.base.Converter", "", "KQQ>", "", "KQQ>", "", "", "{H<erm?", "", studentStatus0, "", "", "'0ARK(.0[|[uG", "", "", "KQQ>", "", "{H<erm?", "\"3,&", curriculum0, 0, 0, (-509), (-509), 0, 0, (-509), (-509), 0, (-877.5643), 1, (-2049), (-1152), 1, (-1152), (-1152));
      student0.computeRiskClass();
      assertEquals("", student0.getStatusTerm());
      assertEquals("", student0.getCountry());
      assertEquals("~$Dsv/4-+d3F~9F_j_", student0.getName());
      assertEquals("'0ARK(.0[|[uG", student0.getAdmissionTerm());
      assertEquals("", student0.getDisabilities());
      assertEquals("", student0.getEmail());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("com.google.common.base.Converter", student0.getBirthDate());
      assertEquals("{H<erm?", student0.getRace());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("", student0.getAdmissionStr());
      assertEquals("KQQ>", student0.getGender());
      assertEquals("com.google.common.base.Converter", student0.getNationalId());
      assertEquals("\"3,&", student0.getCurriculumCode());
      assertEquals((-509), student0.getAttemptedCredits());
      assertEquals("KQQ>", student0.getSecondarySchool());
      assertEquals("", student0.getMaritalStatus());
      assertEquals("KQQ>", student0.getNationality());
      assertEquals((-509), student0.getCompletedCredits());
      assertEquals("{H<erm?", student0.getCourseCode());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Comparator<String> comparator0 = (Comparator<String>) mock(Comparator.class, new ViolatedAssumptionAnswer());
      PriorityQueue<String> priorityQueue0 = new PriorityQueue<String>(comparator0);
      Curriculum curriculum0 = new Curriculum("", "~$Dsv/4-+d3F~9F_j_", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, (-509), 0, (-509), (-509), 0, 0, (-509), 0, 0, (-509), priorityQueue0, priorityQueue0, priorityQueue0, priorityQueue0, priorityQueue0);
      Student student0 = new Student("com.google.common.base.Converter", "com.google.common.base.Converter", "~$Dsv/4-+d3F~9F_j_", "com.google.common.base.Converter", "", "KQQ>", "", "KQQ>", "", "", "{H<erm?", "", studentStatus0, "", "", "'0ARK(.0[|[uG", "", "", "KQQ>", "", "{H<erm?", "\"3,&", curriculum0, 0, 0, (-509), (-509), 0, 0, (-509), (-509), 0, (-877.5643), 1, (-2049), (-1152), 1, (-1152), (-1152));
      student0.compareTo(student0);
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("", student0.getCountry());
      assertEquals("'0ARK(.0[|[uG", student0.getAdmissionTerm());
      assertEquals("", student0.getDisabilities());
      assertEquals("", student0.getMaritalStatus());
      assertEquals("", student0.getEmail());
      assertEquals("~$Dsv/4-+d3F~9F_j_", student0.getName());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("KQQ>", student0.getGender());
      assertEquals("{H<erm?", student0.getRace());
      assertEquals("", student0.getAdmissionStr());
      assertEquals("com.google.common.base.Converter", student0.getNationalId());
      assertEquals("com.google.common.base.Converter", student0.getBirthDate());
      assertEquals("\"3,&", student0.getCurriculumCode());
      assertEquals("", student0.getStatusStr());
      assertEquals("KQQ>", student0.getNationality());
      assertEquals("KQQ>", student0.getSecondarySchool());
      assertEquals("", student0.getStatusTerm());
      assertEquals("{H<erm?", student0.getCourseCode());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student("=(]0g(+r+}tXnz", "=(]0g(+r+}tXnz", "=(]0g(+r+}tXnz", ", optionalHours=", "d%/M", "34\"=aS.~BG36", "=(]0g(+r+}tXnz", (String) null, "+pXwT)0L!;-@m\\<v$5", "d%/M", "=(]0g(+r+}tXnz", "do kiCXLILlE54v", studentStatus0, "=(]0g(+r+}tXnz", "d%/M", "", "34\"=aS.~BG36", (String) null, "KD/-6&a49", ", gpa=", "do kiCXLILlE54v", "+pXwT)0L!;-@m\\<v$5", (Curriculum) null, 3, 3, 2168, 2168, 0, 2168, 1442, 943.3531773183, 0.0, 1900.0, 4, 9, 5112, 3216, 0, 0.0);
      Student student1 = new Student("34\"=aS.~BG36", (String) null, "+pXwT)0L!;-@m\\<v$5", "34\"=aS.~BG36", ", mandatoryHours=", "", ", statusStr='", "`%l_GLSAZX8GLY#:b", "=(]0g(+r+}tXnz", "do kiCXLILlE54v", "d%/M", "", studentStatus0, "I]F", ", exceptionalAdditionalEnrolledCredits=", "", "=(]0g(+r+}tXnz", ", statusStr='", "+pXwT)0L!;-@m\\<v$5", "", "", "", (Curriculum) null, 5112, 4, 3216, (-1417), 2168, 0, 2168, 0.0, 0.0, 0, 2168, 1442, 5112, 5112, 0, 4);
      int int0 = student0.compareTo(student1);
      assertEquals(", gpa=", student0.getSecondarySchoolGraduationYear());
      assertEquals("=(]0g(+r+}tXnz", student1.getDisabilities());
      assertEquals("=(]0g(+r+}tXnz", student1.getCountry());
      assertEquals("", student1.getStatusStr());
      assertEquals("=(]0g(+r+}tXnz", student0.getNationalId());
      assertEquals("I]F", student1.getStatusTerm());
      assertEquals(", exceptionalAdditionalEnrolledCredits=", student1.getAdmissionStr());
      assertEquals(", statusStr='", student1.getMaritalStatus());
      assertEquals("`%l_GLSAZX8GLY#:b", student1.getNationality());
      assertEquals("+pXwT)0L!;-@m\\<v$5", student0.getCurriculumCode());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("d%/M", student1.getRace());
      assertEquals("KD/-6&a49", student0.getSecondarySchool());
      assertEquals("do kiCXLILlE54v", student0.getCourseCode());
      assertEquals(", mandatoryHours=", student1.getEmail());
      assertEquals("do kiCXLILlE54v", student1.getPlaceOfBirth());
      assertEquals(", statusStr='", student1.getAffirmativePolicy());
      assertEquals("34\"=aS.~BG36", student0.getGender());
      assertEquals("34\"=aS.~BG36", student1.getBirthDate());
      assertEquals(10, int0);
      assertEquals("+pXwT)0L!;-@m\\<v$5", student1.getName());
      assertEquals("d%/M", student0.getPlaceOfBirth());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student("rg@O7K:*CC_Qtb", (String) null, (String) null, "rg@O7K:*CC_Qtb", "rg@O7K:*CC_Qtb", "rg@O7K:*CC_Qtb", "CANCELADO NOVO INGRESSO MESMO CURSO", (String) null, "&1sS) k", "_I6 6i_^", (String) null, "com.google.common.cache.ForwardingLoadingCache$SimpleForwardingLoadingCache", studentStatus0, "", "6h", ", admissionTerm='", "&1sS) k", "&1sS) k", "The prefix must not be null", "CANCELADO NOVO INGRESSO MESMO CURSO", (String) null, "", (Curriculum) null, (-19), (-2160), 7, (-19), 5196, 3900, 3900, 0.0, 0.0, 0.0, 7, 424, (-2160), 2219, (-1025), (-254.277942523007));
      Registration registration0 = new Registration("i&C%CJI+x!(8F6b2$j");
      student0.setRegistration(registration0);
      Student student1 = new Student("rg@O7K:*CC_Qtb", "/j", (String) null, ", institutionalTerms=", "com.google.common.cache.ForwardingLoadingCache$SimpleForwardingLoadingCache", "WgMe~@4y/LqU=", "i&C%CJI+x!(8F6b2$j", "com.google.common.cache.ForwardingLoadingCache$SimpleForwardingLoadingCache", "R7", "WgMe~@4y/LqU=", "", "", studentStatus0, "The prefix must not be null", "rg@O7K:*CC_Qtb", "", "WgMe~@4y/LqU=", (String) null, "i&C%CJI+x!(8F6b2$j", "NEj`F`JsX+", "P0qU{ySah<FQ_Fg", "CANCELADO NOVO INGRESSO MESMO CURSO", (Curriculum) null, (-1025), (-1472), (-1025), 788, 0, (-2779), (-641), 0.0, 0.0, (-1025), 0, 0, (-727), 0, 2729, 3900);
      int int0 = student0.compareTo(student1);
      assertEquals("WgMe~@4y/LqU=", student1.getDisabilities());
      assertEquals("WgMe~@4y/LqU=", student1.getPlaceOfBirth());
      assertEquals("WgMe~@4y/LqU=", student1.getGender());
      assertEquals("", student1.getAdmissionTerm());
      assertEquals("i&C%CJI+x!(8F6b2$j", student1.getSecondarySchool());
      assertEquals("&1sS) k", student0.getAffirmativePolicy());
      assertEquals("i&C%CJI+x!(8F6b2$j", student1.getMaritalStatus());
      assertEquals("com.google.common.cache.ForwardingLoadingCache$SimpleForwardingLoadingCache", student1.getEmail());
      assertEquals("com.google.common.cache.ForwardingLoadingCache$SimpleForwardingLoadingCache", student1.getNationality());
      assertEquals("NEj`F`JsX+", student1.getSecondarySchoolGraduationYear());
      assertEquals("R7", student1.getCountry());
      assertEquals("&1sS) k", student0.getDisabilities());
      assertEquals("/j", student1.getNationalId());
      assertEquals("", student1.getStatusStr());
      assertEquals("The prefix must not be null", student1.getStatusTerm());
      assertEquals(", institutionalTerms=", student1.getBirthDate());
      assertEquals("", student1.getRace());
      assertEquals((-9), int0);
      assertEquals("6h", student0.getAdmissionStr());
      assertEquals("P0qU{ySah<FQ_Fg", student1.getCourseCode());
      assertEquals("rg@O7K:*CC_Qtb", student0.getBirthDate());
      assertEquals("CANCELADO NOVO INGRESSO MESMO CURSO", student1.getCurriculumCode());
      assertEquals("rg@O7K:*CC_Qtb", student1.getAdmissionStr());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("ZW\"riiI<#7E[>s[/", "ZW\"riiI<#7E[>s[/", "ZW\"riiI<#7E[>s[/", "ZW\"riiI<#7E[>s[/", "ZW\"riiI<#7E[>s[/", "LF", "!QRvA/g{uTf", "ZW\"riiI<#7E[>s[/", "<YPA", "92wKf@EI'P)qWkz", "ZW\"riiI<#7E[>s[/", "", studentStatus0, "ZW\"riiI<#7E[>s[/", "ZW\"riiI<#7E[>s[/", "", "r'!PHL}", "", "ZW\"riiI<#7E[>s[/", "", "", "LF", (Curriculum) null, 15, 15, 4, 15, 4, 15, 755, 755, 755, 15, 1073741823, 15, 15, 941, 4, 4);
      student0.setStatus((StudentStatus) null);
      // Undeclared exception!
      try { 
        student0.isDropout();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.core.models.Student", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student("7)l|jO", "7)l|jO", "7)l|jO", "", "", "7)l|jO", "7)l|jO", "-j", "com.google.common.cache.AbstractCache", "", "7)l|jO", (String) null, studentStatus0, "-j", (String) null, ", name='", ", name='", "]@(&B5.{mhd", "", "index", "-j", "7)l|jO", (Curriculum) null, 1892, 0, 996, 2, 2538, 4342, (-309), 0, 1892, 4342, 0, 2210, 0, 0, 1892, 0);
      // Undeclared exception!
      try { 
        student0.getStatusIndex();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student((String) null, (String) null, (String) null, (String) null, (String) null, (String) null, "n=Ebw>xUAZ@Xq'", (String) null, (String) null, "n=Ebw>xUAZ@Xq'", (String) null, "'|qT<IskC3f,C'pu?", studentStatus0, "'|qT<IskC3f,C'pu?", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", (String) null, "'|qT<IskC3f,C'pu?", (Curriculum) null, (-831), (-831), (-831), (-831), 5, (-831), (-2680), 0.0, (-2680), (-831), 5, (-2680), (-2680), (-2680), (-831), 5);
      // Undeclared exception!
      try { 
        student0.compareTo((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.core.models.Student", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("Z^", "5[)o2he ", "5[)o2he ", "Z^", "Z^", "HU>/\"$G,c!U", "5[)o2he ", "(wFRx4/U)@8+?AFn[]", (String) null, "5[)o2he ", ", mandatoryCredits=", "CANCELAMENTO P/ DECISAO JUDICIAL", studentStatus0, (String) null, ", mandatoryCredits=", "Z^", "28cgyA#3m9jns_fz", "28cgyA#3m9jns_fz", "(wFRx4/U)@8+?AFn[]", ", gpa=", ", gpa=", "", (Curriculum) null, 1216, 1, 1216, 1216, 1216, 1, 1, 0.0, 1216, 1, 1, 0, (-1104), (-1104), 1, 0.0);
      BoundType boundType0 = BoundType.CLOSED;
      // Undeclared exception!
      try { 
        student0.compareTo(boundType0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // com.google.common.collect.BoundType cannot be cast to br.edu.ufcg.computacao.eureca.backend.core.models.Student
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.core.models.Student", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student("", "", "", (String) null, (String) null, "", "%PUC8e=ncv", "", "wKlm'Ru#J}@CQ]_\r1", "", "", (String) null, studentStatus0, "0h6^xCkg+%", "%PUC8e=ncv", (String) null, (String) null, "", "", "%PUC8e=ncv", ":", "", (Curriculum) null, (-1228), 2, 2, 2, (-1228), (-1228), 2, (-1228), (-1228), (-1228), 0, 0, 2, (-2490), (-1228), (-2490));
      student0.getCompletedTerms();
      assertEquals("%PUC8e=ncv", student0.getAdmissionStr());
      assertEquals("%PUC8e=ncv", student0.getSecondarySchoolGraduationYear());
      assertEquals("wKlm'Ru#J}@CQ]_\r1", student0.getCountry());
      assertEquals("", student0.getSecondarySchool());
      assertEquals("0h6^xCkg+%", student0.getStatusTerm());
      assertEquals("", student0.getCurriculumCode());
      assertEquals(":", student0.getCourseCode());
      assertEquals("", student0.getNationalId());
      assertEquals("", student0.getName());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("", student0.getRace());
      assertEquals("%PUC8e=ncv", student0.getMaritalStatus());
      assertEquals("", student0.getGender());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student((String) null, " P", (String) null, "", "", (String) null, "*:YWNC", (String) null, "", "", (String) null, "", studentStatus0, "*:YWNC", "", "", " P", (String) null, "*:YWNC", "", "", "", (Curriculum) null, 125, 0, 4, 1711, 125, 4, 1711, (-1421.47882908), (-1421.47882908), 1711, 125, 0, 125, 1069, (-3167), 0.03);
      student0.getRegistration();
      assertEquals("", student0.getCourseCode());
      assertEquals("*:YWNC", student0.getStatusTerm());
      assertEquals("", student0.getCountry());
      assertEquals("", student0.getAdmissionStr());
      assertEquals("*:YWNC", student0.getSecondarySchool());
      assertEquals(" P", student0.getDisabilities());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getStatusStr());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("*:YWNC", student0.getMaritalStatus());
      assertEquals("", student0.getAdmissionTerm());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student("Cu<%06sxQM`$?", "Cu<%06sxQM`$?", "Cu<%06sxQM`$?", "Cu<%06sxQM`$?", "IGNORE_TYPE_VARIABLE_OR_WILDCARD", "<", (String) null, "<", ", mobilityTerms=", "!QQb3<yP-h", "!QQb3<yP-h", "IGNORE_TYPE_VARIABLE_OR_WILDCARD", studentStatus0, "9Yxp]ZX$nF=5.a]g", "Cu<%06sxQM`$?", "j_^3KR:4*D1", "", "j_^3KR:4*D1", (String) null, "!QQb3<yP-h", "br.edu.ufcg.computacao.eureca.backend.core.models.Student", "Cu<%06sxQM`$?", (Curriculum) null, 125, 125, 125, 125, 2667, 2667, 2667, 2667, 2667, 2667, 2667, 125, 125, 2667, 9, (-2721.820703));
      student0.getAttemptedCredits();
      assertEquals("<", student0.getGender());
      assertEquals("IGNORE_TYPE_VARIABLE_OR_WILDCARD", student0.getEmail());
      assertEquals("Cu<%06sxQM`$?", student0.getCurriculumCode());
      assertEquals("j_^3KR:4*D1", student0.getAdmissionTerm());
      assertEquals("Cu<%06sxQM`$?", student0.getAdmissionStr());
      assertEquals("9Yxp]ZX$nF=5.a]g", student0.getStatusTerm());
      assertEquals("j_^3KR:4*D1", student0.getAffirmativePolicy());
      assertEquals("Cu<%06sxQM`$?", student0.getName());
      assertEquals("br.edu.ufcg.computacao.eureca.backend.core.models.Student", student0.getCourseCode());
      assertEquals("IGNORE_TYPE_VARIABLE_OR_WILDCARD", student0.getStatusStr());
      assertEquals("<", student0.getNationality());
      assertEquals("Cu<%06sxQM`$?", student0.getNationalId());
      assertEquals("Cu<%06sxQM`$?", student0.getBirthDate());
      assertEquals("!QQb3<yP-h", student0.getRace());
      assertEquals("!QQb3<yP-h", student0.getPlaceOfBirth());
      assertEquals("!QQb3<yP-h", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getDisabilities());
      assertEquals(", mobilityTerms=", student0.getCountry());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student("Tmt", "b^/c`l>I3ua", "Tmt", ".reverse()", "Uha", "", "", "(8*F;#X1Jjv.", "BS>LZ]vlRBUbNE$HiRh", ".reverse()", "BS>LZ]vlRBUbNE$HiRh", "vsx}zw!", studentStatus0, "", "*=4!xbJ2h1#", "vsx}zw!", "vsx}zw!", "ONlL=sI?E@]mo}Vx5/=", "_D[V", "(", "BS>LZ]vlRBUbNE$HiRh", "vsx}zw!", (Curriculum) null, (-2562), (-1574), (-2562), (-2562), 1169, (-1574), (-1665), (-1665), (-1665), (-2562), (-2562), (-2562), (-62), 461845907, 0, (-1574));
      int int0 = student0.getCompletedCredits();
      assertEquals(".reverse()", student0.getPlaceOfBirth());
      assertEquals("_D[V", student0.getSecondarySchool());
      assertEquals("vsx}zw!", student0.getCurriculumCode());
      assertEquals("Uha", student0.getEmail());
      assertEquals((-5710), int0);
      assertEquals("vsx}zw!", student0.getStatusStr());
      assertEquals(".reverse()", student0.getBirthDate());
      assertEquals("vsx}zw!", student0.getAdmissionTerm());
      assertEquals("BS>LZ]vlRBUbNE$HiRh", student0.getRace());
      assertEquals("(", student0.getSecondarySchoolGraduationYear());
      assertEquals("vsx}zw!", student0.getDisabilities());
      assertEquals("", student0.getStatusTerm());
      assertEquals("BS>LZ]vlRBUbNE$HiRh", student0.getCourseCode());
      assertEquals("BS>LZ]vlRBUbNE$HiRh", student0.getCountry());
      assertEquals("*=4!xbJ2h1#", student0.getAdmissionStr());
      assertEquals("ONlL=sI?E@]mo}Vx5/=", student0.getAffirmativePolicy());
      assertEquals("b^/c`l>I3ua", student0.getNationalId());
      assertEquals("", student0.getGender());
      assertEquals("(8*F;#X1Jjv.", student0.getNationality());
      assertEquals("Tmt", student0.getName());
      assertEquals("", student0.getMaritalStatus());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student("n:|jO2?9-4XxZky'", (String) null, "n:|jO2?9-4XxZky'", "J:-&H", "p?^6sLk3", "sz&\"{Y(7D?l4Y$b#hQH", " 02Hz", (String) null, "^9C(", " 02Hz", "CANCELADO NOVO INGRESSO MESMO CURSO", (String) null, studentStatus0, "^9C(", "p?^6sLk3", "n:|jO2?9-4XxZky'", (String) null, "^9C(", "sz&\"{Y(7D?l4Y$b#hQH", ",6No@", " 02Hz", " 02Hz", (Curriculum) null, 0, 0, 1, (-2618), 1, 0, 11, 1, (-2618), 1.0, 11, 1, 0, 1, 10, (-235.9687472));
      int int0 = student0.getOptionalCredits();
      assertEquals("J:-&H", student0.getBirthDate());
      assertEquals("^9C(", student0.getCountry());
      assertEquals((-2618), int0);
      assertEquals(" 02Hz", student0.getPlaceOfBirth());
      assertEquals(" 02Hz", student0.getMaritalStatus());
      assertEquals("^9C(", student0.getAffirmativePolicy());
      assertEquals("p?^6sLk3", student0.getEmail());
      assertEquals("sz&\"{Y(7D?l4Y$b#hQH", student0.getGender());
      assertEquals("n:|jO2?9-4XxZky'", student0.getName());
      assertEquals("CANCELADO NOVO INGRESSO MESMO CURSO", student0.getRace());
      assertEquals(" 02Hz", student0.getCourseCode());
      assertEquals("sz&\"{Y(7D?l4Y$b#hQH", student0.getSecondarySchool());
      assertEquals("n:|jO2?9-4XxZky'", student0.getAdmissionTerm());
      assertEquals("^9C(", student0.getStatusTerm());
      assertEquals("p?^6sLk3", student0.getAdmissionStr());
      assertEquals(" 02Hz", student0.getCurriculumCode());
      assertEquals(",6No@", student0.getSecondarySchoolGraduationYear());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Curriculum curriculum0 = new Curriculum("", "", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 0, 0, 0, 4574, 0, 1184, 6, 0, 4812, 4812, linkedList0, linkedList0, linkedList0, linkedList0, linkedList0);
      Student student0 = new Student("", "", "", "", ")u`do1E>FH(()", "", "D", "", "", "Ativo", "KDv", "Student{registration='", studentStatus0, "D", "Student{registration='", "", "Student{registration='", (String) null, "CANCELAMENTO POR ABANDONO", "", "3oQVO`0lH*%'", "CANCELAMENTO POR ABANDONO", curriculum0, 0, 0, 20, 20, 1193, 0, (-1398), 2.0, 2.0, 0.0, 2630, 1293, 0, 4812, 0, 0.0);
      int int0 = student0.getComplementaryCredits();
      assertEquals("KDv", student0.getRace());
      assertEquals("", student0.getCountry());
      assertEquals("Student{registration='", student0.getAdmissionStr());
      assertEquals("", student0.getGender());
      assertEquals("CANCELAMENTO POR ABANDONO", student0.getCurriculumCode());
      assertEquals("D", student0.getMaritalStatus());
      assertEquals("", student0.getName());
      assertEquals("3oQVO`0lH*%'", student0.getCourseCode());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("", student0.getBirthDate());
      assertEquals("", student0.getNationalId());
      assertEquals(")u`do1E>FH(()", student0.getEmail());
      assertEquals("Student{registration='", student0.getStatusStr());
      assertEquals("Ativo", student0.getPlaceOfBirth());
      assertEquals("Student{registration='", student0.getDisabilities());
      assertEquals("D", student0.getStatusTerm());
      assertEquals("CANCELAMENTO POR ABANDONO", student0.getSecondarySchool());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Curriculum curriculum0 = new Curriculum(", courseCode='", (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (-862048943), 0, (-862048943), (-4536), (-862048943), 4986, 1208, 3877, 0, 0, treeSet0, treeSet0, treeSet0, treeSet0, treeSet0);
      Student student0 = new Student("", "", "<`6J*u g2?I,,>86", "<`6J*u g2?I,,>86", "<`6J*u g2?I,,>86", "<`6J*u g2?I,,>86", "<`6J*u g2?I,,>86", "", "40=x#", ", courseCode='", "<`6J*u g2?I,,>86", "40=x#", studentStatus0, ", courseCode='", "f+k9D0U_=If~NTIo>", "7JVvX=6", "", ", courseCode='", "<`6J*u g2?I,,>86", ", courseCode='", "f+k9D0U_=If~NTIo>", "A\"!C", curriculum0, 8232, 13, 4986, 0, 554, 0, 3649, 0, 0, 3877, 13, 125, 65535, 0, 347, 65535);
      student0.getMandatoryCredits();
      assertEquals(", courseCode='", student0.getPlaceOfBirth());
      assertEquals("<`6J*u g2?I,,>86", student0.getRace());
      assertEquals("A\"!C", student0.getCurriculumCode());
      assertEquals("40=x#", student0.getStatusStr());
      assertEquals("<`6J*u g2?I,,>86", student0.getMaritalStatus());
      assertEquals("f+k9D0U_=If~NTIo>", student0.getAdmissionStr());
      assertEquals(", courseCode='", student0.getStatusTerm());
      assertEquals("<`6J*u g2?I,,>86", student0.getBirthDate());
      assertEquals("<`6J*u g2?I,,>86", student0.getName());
      assertEquals("<`6J*u g2?I,,>86", student0.getEmail());
      assertEquals("40=x#", student0.getCountry());
      assertEquals("", student0.getNationality());
      assertEquals("", student0.getNationalId());
      assertEquals("7JVvX=6", student0.getAdmissionTerm());
      assertEquals("", student0.getDisabilities());
      assertEquals("<`6J*u g2?I,,>86", student0.getSecondarySchool());
      assertEquals("<`6J*u g2?I,,>86", student0.getGender());
      assertEquals(", courseCode='", student0.getAffirmativePolicy());
      assertEquals(", courseCode='", student0.getSecondarySchoolGraduationYear());
      assertEquals("f+k9D0U_=If~NTIo>", student0.getCourseCode());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum((String) null, "\"<^B]", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 5, (-1837), (-1837), 1390, 246, 1390, 246, 246, (-1837), (-1837), set0, set0, set0, set0, set0);
      Student student0 = new Student("", "", "", "", "05h`g<<0$EZd3W", "05h`g<<0$EZd3W", (String) null, "CANCELAMENTO P/ SOLICITACAO ALUNO", "", "", "", "LOW", studentStatus0, "CANCELAMENTO P/ SOLICITACAO ALUNO", "CANCELAMENTO P/ SOLICITACAO ALUNO", (String) null, "w+)Afxyy&V[4IkR", "", "-GQmp;)", "yy5f8Nf.lC-", "\"<^B]", "Cfu*", curriculum0, 9, 1390, 4131, 246, 9, 1390, 246, 0.0, (-1837), 5, 4131, (-1837), 1390, (-1837), 246, 1390);
      int int0 = student0.getInstitutionalEnrollments();
      assertEquals("CANCELAMENTO P/ SOLICITACAO ALUNO", student0.getStatusTerm());
      assertEquals("", student0.getNationalId());
      assertEquals("CANCELAMENTO P/ SOLICITACAO ALUNO", student0.getNationality());
      assertEquals("w+)Afxyy&V[4IkR", student0.getDisabilities());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("-GQmp;)", student0.getSecondarySchool());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("", student0.getCountry());
      assertEquals("05h`g<<0$EZd3W", student0.getEmail());
      assertEquals("", student0.getRace());
      assertEquals("CANCELAMENTO P/ SOLICITACAO ALUNO", student0.getAdmissionStr());
      assertEquals("Cfu*", student0.getCurriculumCode());
      assertEquals("", student0.getBirthDate());
      assertEquals("", student0.getName());
      assertEquals("yy5f8Nf.lC-", student0.getSecondarySchoolGraduationYear());
      assertEquals("05h`g<<0$EZd3W", student0.getGender());
      assertEquals("LOW", student0.getStatusStr());
      assertEquals(1390, int0);
      assertEquals("\"<^B]", student0.getCourseCode());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("", "", (String) null, "", "", (String) null, "", "", (String) null, "", (String) null, "TRANSFERIDO PARA OUTRA IES", studentStatus0, "TRANSFERIDO PARA OUTRA IES", "", "", (String) null, "TRANSFERIDO PARA OUTRA IES", "TRANSFERIDO PARA OUTRA IES", (String) null, "", "*#U}]O`Zy}3Zga", (Curriculum) null, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1);
      int int0 = student0.getStatusIndex();
      assertEquals("TRANSFERIDO PARA OUTRA IES", student0.getSecondarySchool());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("TRANSFERIDO PARA OUTRA IES", student0.getStatusTerm());
      assertEquals(10, int0);
      assertEquals("", student0.getAdmissionStr());
      assertEquals("TRANSFERIDO PARA OUTRA IES", student0.getAffirmativePolicy());
      assertEquals("", student0.getCourseCode());
      assertEquals("", student0.getBirthDate());
      assertEquals("*#U}]O`Zy}3Zga", student0.getCurriculumCode());
      assertEquals("", student0.getEmail());
      assertEquals("", student0.getNationality());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Curriculum curriculum0 = new Curriculum("&tghcu%=;Bqtb-E\"q0", "", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 2850, 2850, 2850, 138, 2850, 2850, 2850, 3170, 138, 3170, linkedList0, linkedList0, linkedList0, (Collection<String>) null, (Collection<String>) null);
      Student student0 = new Student("CharMatcher.0isNot('", "Eo#`hj(wS$'WT=", "Eo#`hj(wS$'WT=", "Eo#`hj(wS$'WT=", "CharMatcher.0isNot('", "CONCLUIDO - NAO COLOU GRAU", (String) null, "", "CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", "&tghcu%=;Bqtb-E\"q0", "CONCLUIDO - NAO COLOU GRAU", studentStatus0, "org.apache.commons.io.filefilter.DirectoryFileFilter", "&tghcu%=;Bqtb-E\"q0", "I1J07${kIEIlvJ.Y/", "", "org.apache.commons.io.filefilter.DirectoryFileFilter", "&tghcu%=;Bqtb-E\"q0", "Eo#`hj(wS$'WT=", "tblgt0CE", (String) null, curriculum0, 2850, 138, 2850, 2850, 2850, (-684), 125, 2850, 2850, 1.0, 138, 3170, 2850, 3170, 3170, 2850);
      int int0 = student0.getStatusIndex();
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getPlaceOfBirth());
      assertEquals("&tghcu%=;Bqtb-E\"q0", student0.getAdmissionStr());
      assertEquals("Eo#`hj(wS$'WT=", student0.getBirthDate());
      assertEquals(9, int0);
      assertEquals("org.apache.commons.io.filefilter.DirectoryFileFilter", student0.getStatusTerm());
      assertEquals("Eo#`hj(wS$'WT=", student0.getNationalId());
      assertEquals("", student0.getNationality());
      assertEquals("org.apache.commons.io.filefilter.DirectoryFileFilter", student0.getAffirmativePolicy());
      assertEquals("&tghcu%=;Bqtb-E\"q0", student0.getRace());
      assertEquals("&tghcu%=;Bqtb-E\"q0", student0.getSecondarySchool());
      assertEquals("tblgt0CE", student0.getCourseCode());
      assertEquals("", student0.getDisabilities());
      assertEquals("CharMatcher.0isNot('", student0.getEmail());
      assertEquals("Eo#`hj(wS$'WT=", student0.getName());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getCountry());
      assertEquals("I1J07${kIEIlvJ.Y/", student0.getAdmissionTerm());
      assertEquals("Eo#`hj(wS$'WT=", student0.getSecondarySchoolGraduationYear());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getGender());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student(", courseCode='", ", courseCode='", ", courseCode='", ", courseCode='", ", courseCode='", "ALWAYS_TRUE", ", courseCode='", ", courseCode='", ", courseCode='", ", courseCode='", ", courseCode='", "CANCELAMENTO POR ABANDONO", studentStatus0, ", courseCode='", "", ", courseCode='", "Insensitive", "", "CANCELAMENTO POR ABANDONO", ", courseCode='", "x@t?,*$8czGi", "a{K*8", (Curriculum) null, 1, (-2071), 1, 244, 1, 1, 244, 600.184342355325, 1, 847.407, 29, 29, 0, 1, (-2686), 1);
      int int0 = student0.getStatusIndex();
      assertEquals(", courseCode='", student0.getSecondarySchoolGraduationYear());
      assertEquals(", courseCode='", student0.getStatusTerm());
      assertEquals(", courseCode='", student0.getNationalId());
      assertEquals(", courseCode='", student0.getBirthDate());
      assertEquals("CANCELAMENTO POR ABANDONO", student0.getSecondarySchool());
      assertEquals(", courseCode='", student0.getNationality());
      assertEquals(", courseCode='", student0.getEmail());
      assertEquals(8, int0);
      assertEquals("Insensitive", student0.getDisabilities());
      assertEquals("", student0.getAdmissionStr());
      assertEquals(", courseCode='", student0.getCountry());
      assertEquals(", courseCode='", student0.getRace());
      assertEquals(", courseCode='", student0.getAdmissionTerm());
      assertEquals(", courseCode='", student0.getName());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals(", courseCode='", student0.getPlaceOfBirth());
      assertEquals("a{K*8", student0.getCurriculumCode());
      assertEquals("x@t?,*$8czGi", student0.getCourseCode());
      assertEquals(", courseCode='", student0.getMaritalStatus());
      assertEquals("ALWAYS_TRUE", student0.getGender());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("", "", "", "", "", ", mc=", ", mc=", ", mc=", ", mc=", (String) null, "", "CANCELAMENTO P/ SOLICITACAO ALUNO", studentStatus0, ", mc=", "", "CANCELAMENTO P/ SOLICITACAO ALUNO", "CANCELAMENTO P/ SOLICITACAO ALUNO", "CANCELAMENTO P/ SOLICITACAO ALUNO", "CANCELAMENTO P/ SOLICITACAO ALUNO", "", ", admisinSr='", "", (Curriculum) null, (-2723), (-2723), (-2723), 1, 1, (-2723), 1, (-642.027656), 1, (-642.027656), 5, 1, 5, 1, 1692, (-2723));
      int int0 = student0.getStatusIndex();
      assertEquals("CANCELAMENTO P/ SOLICITACAO ALUNO", student0.getSecondarySchool());
      assertEquals("", student0.getBirthDate());
      assertEquals("CANCELAMENTO P/ SOLICITACAO ALUNO", student0.getAdmissionTerm());
      assertEquals("", student0.getEmail());
      assertEquals(", mc=", student0.getMaritalStatus());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getNationalId());
      assertEquals("", student0.getRace());
      assertEquals(", mc=", student0.getCountry());
      assertEquals(", mc=", student0.getGender());
      assertEquals("", student0.getCurriculumCode());
      assertEquals(7, int0);
      assertEquals("", student0.getName());
      assertEquals("", student0.getAdmissionStr());
      assertEquals("CANCELAMENTO P/ SOLICITACAO ALUNO", student0.getAffirmativePolicy());
      assertEquals(", admisinSr='", student0.getCourseCode());
      assertEquals("CANCELAMENTO P/ SOLICITACAO ALUNO", student0.getDisabilities());
      assertEquals(", mc=", student0.getStatusTerm());
      assertEquals(", mc=", student0.getNationality());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("BloomFilters must have equal funnels (%s !=%s)", "BloomFilters must have equal funnels (%s !=%s)", "BloomFilters must have equal funnels (%s !=%s)", "BloomFilters must have equal funnels (%s !=%s)", "BloomFilters must have equal funnels (%s !=%s)", "CANCELAMENTO P/ MUDANCA CURSO", "CANCELAMENTO P/ MUDANCA CURSO", "BloomFilters must have equal funnels (%s !=%s)", "BloomFilters must have equal funnels (%s !=%s)", "BloomFilters must have equal funnels (%s !=%s)", "CANCELAMENTO P/ MUDANCA CURSO", "CANCELAMENTO P/ MUDANCA CURSO", studentStatus0, "BloomFilters must have equal funnels (%s !=%s)", "BloomFilters must have equal funnels (%s !=%s)", "BloomFilters must have equal funnels (%s !=%s)", "BloomFilters must have equal funnels (%s !=%s)", "CANCELAMENTO P/ MUDANCA CURSO", "BloomFilters must have equal funnels (%s !=%s)", "CANCELAMENTO P/ MUDANCA CURSO", "BloomFilters must have equal funnels (%s !=%s)", "CANCELAMENTO P/ MUDANCA CURSO", (Curriculum) null, (-89), (-89), (-89), (-89), (-89), (-89), (-89), (-89), (-89), (-89), (-89), (-89), (-89), (-89), (-89), (-89));
      int int0 = student0.getStatusIndex();
      assertEquals("CANCELAMENTO P/ MUDANCA CURSO", student0.getCurriculumCode());
      assertEquals("BloomFilters must have equal funnels (%s !=%s)", student0.getNationality());
      assertEquals("BloomFilters must have equal funnels (%s !=%s)", student0.getEmail());
      assertEquals("BloomFilters must have equal funnels (%s !=%s)", student0.getName());
      assertEquals("BloomFilters must have equal funnels (%s !=%s)", student0.getBirthDate());
      assertEquals("CANCELAMENTO P/ MUDANCA CURSO", student0.getRace());
      assertEquals("BloomFilters must have equal funnels (%s !=%s)", student0.getDisabilities());
      assertEquals("CANCELAMENTO P/ MUDANCA CURSO", student0.getAffirmativePolicy());
      assertEquals("BloomFilters must have equal funnels (%s !=%s)", student0.getAdmissionStr());
      assertEquals(6, int0);
      assertEquals("CANCELAMENTO P/ MUDANCA CURSO", student0.getGender());
      assertEquals("CANCELAMENTO P/ MUDANCA CURSO", student0.getMaritalStatus());
      assertEquals("BloomFilters must have equal funnels (%s !=%s)", student0.getCountry());
      assertEquals("BloomFilters must have equal funnels (%s !=%s)", student0.getPlaceOfBirth());
      assertEquals("BloomFilters must have equal funnels (%s !=%s)", student0.getAdmissionTerm());
      assertEquals("BloomFilters must have equal funnels (%s !=%s)", student0.getNationalId());
      assertEquals("CANCELAMENTO P/ MUDANCA CURSO", student0.getSecondarySchoolGraduationYear());
      assertEquals("BloomFilters must have equal funnels (%s !=%s)", student0.getCourseCode());
      assertEquals("BloomFilters must have equal funnels (%s !=%s)", student0.getSecondarySchool());
      assertEquals("BloomFilters must have equal funnels (%s !=%s)", student0.getStatusTerm());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("9^", "9^", "9^", "9^", "9^", "9^", "9^", "(wFRx4/U)@8+?AFn[]", "(wFRx4/U)@8+?AFn[]", "9^", ", mandatoryCredits=", "CANCELAMENTO P/ DECISAO JUDICIAL", studentStatus0, ", mandatoryCredits=", ", mandatoryCredits=", "9^", "(wFRx4/U)@8+?AFn[]", "(wFRx4/U)@8+?AFn[]", "(wFRx4/U)@8+?AFn[]", "(wFRx4/U)@8+?AFn[]", "(wFRx4/U)@8+?AFn[]", ", mandatoryCredits=", (Curriculum) null, 1216, 1, 1216, 1216, 1216, 1, 1, 0.0, 1216, 1, 1, 1, (-1153), (-1153), 1, 0.0);
      int int0 = student0.getStatusIndex();
      assertEquals("9^", student0.getBirthDate());
      assertEquals("(wFRx4/U)@8+?AFn[]", student0.getNationality());
      assertEquals("(wFRx4/U)@8+?AFn[]", student0.getAffirmativePolicy());
      assertEquals("(wFRx4/U)@8+?AFn[]", student0.getSecondarySchoolGraduationYear());
      assertEquals("9^", student0.getEmail());
      assertEquals("9^", student0.getAdmissionTerm());
      assertEquals(", mandatoryCredits=", student0.getAdmissionStr());
      assertEquals("9^", student0.getNationalId());
      assertEquals("9^", student0.getPlaceOfBirth());
      assertEquals("(wFRx4/U)@8+?AFn[]", student0.getSecondarySchool());
      assertEquals(", mandatoryCredits=", student0.getRace());
      assertEquals("9^", student0.getName());
      assertEquals("(wFRx4/U)@8+?AFn[]", student0.getCourseCode());
      assertEquals("9^", student0.getGender());
      assertEquals(5, int0);
      assertEquals("9^", student0.getMaritalStatus());
      assertEquals(", mandatoryCredits=", student0.getCurriculumCode());
      assertEquals("(wFRx4/U)@8+?AFn[]", student0.getCountry());
      assertEquals("(wFRx4/U)@8+?AFn[]", student0.getDisabilities());
      assertEquals(", mandatoryCredits=", student0.getStatusTerm());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("ZW\"riiI<#7E[>s[/", "ZW\"riiI<#7E[>s[/", "ZW\"riiI<#7E[>s[/", "ZW\"riiI<#7E[>s[/", "ZW\"riiI<#7E[>s[/", "LF", "!QRvA/g{uTf", "ZW\"riiI<#7E[>s[/", "<YPA", "92wKf@EI'P)qWkz", "ZW\"riiI<#7E[>s[/", "", studentStatus0, "ZW\"riiI<#7E[>s[/", "ZW\"riiI<#7E[>s[/", "", "r'!PHL}", "", "ZW\"riiI<#7E[>s[/", "", "", "LF", (Curriculum) null, 15, 15, 4, 15, 4, 15, 755, 755, 755, 15, 1073741823, 15, 15, 941, 4, 4);
      int int0 = student0.getStatusIndex();
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getSecondarySchool());
      assertEquals("92wKf@EI'P)qWkz", student0.getPlaceOfBirth());
      assertEquals("LF", student0.getGender());
      assertEquals("<YPA", student0.getCountry());
      assertEquals("r'!PHL}", student0.getDisabilities());
      assertEquals(11, int0);
      assertEquals("", student0.getStatusStr());
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getEmail());
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getName());
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getNationality());
      assertEquals("LF", student0.getCurriculumCode());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("", student0.getCourseCode());
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getStatusTerm());
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getRace());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getAdmissionStr());
      assertEquals("!QRvA/g{uTf", student0.getMaritalStatus());
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getBirthDate());
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getNationalId());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>();
      Stack<Locale.LanguageRange> stack0 = new Stack<Locale.LanguageRange>();
      Locale.FilteringMode locale_FilteringMode0 = Locale.FilteringMode.MAP_EXTENDED_RANGES;
      List<String> list0 = Locale.filterTags((List<Locale.LanguageRange>) stack0, (Collection<String>) arrayDeque0, locale_FilteringMode0);
      Curriculum curriculum0 = new Curriculum((String) null, "CANCELADO REPROVOU TODAS POR FALTAS", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 2520, 2520, 2340, 2520, (-1), 2520, 2520, 2520, 1302, 2520, arrayDeque0, list0, arrayDeque0, arrayDeque0, list0);
      Student student0 = new Student("CANCELADO REPROVOU TODAS POR FALTAS", "", "CANCELADO REPROVOU TODAS POR FALTAS", "com.google.common.base.Predicates", "", "com.google.common.base.Predicates", "", "com.google.common.base.Predicates", "com.google.common.base.Predicates", "com.google.common.base.Predicates", "com.google.common.base.Predicates", "CANCELADO REPROVOU TODAS POR FALTAS", studentStatus0, "CANCELADO REPROVOU TODAS POR FALTAS", "com.google.common.base.Predicates", "CANCELADO REPROVOU TODAS POR FALTAS", "CANCELADO REPROVOU TODAS POR FALTAS", (String) null, "com.google.common.base.Predicates", "com.google.common.base.Predicates", "@K?k`j.:Nr$m]", "CANCELADO REPROVOU TODAS POR FALTAS", curriculum0, 515, 1656, 2520, 2340, 2520, 0, 0, (-1), 2340, 515, 2520, 1, (-3789), 2520, 1, 2520);
      int int0 = student0.getStatusIndex();
      assertEquals("com.google.common.base.Predicates", student0.getCountry());
      assertEquals("com.google.common.base.Predicates", student0.getPlaceOfBirth());
      assertEquals("com.google.common.base.Predicates", student0.getRace());
      assertEquals("CANCELADO REPROVOU TODAS POR FALTAS", student0.getCurriculumCode());
      assertEquals("", student0.getMaritalStatus());
      assertEquals("@K?k`j.:Nr$m]", student0.getCourseCode());
      assertEquals("CANCELADO REPROVOU TODAS POR FALTAS", student0.getDisabilities());
      assertEquals("CANCELADO REPROVOU TODAS POR FALTAS", student0.getAdmissionTerm());
      assertEquals("", student0.getEmail());
      assertEquals("com.google.common.base.Predicates", student0.getGender());
      assertEquals(3, int0);
      assertEquals("com.google.common.base.Predicates", student0.getAdmissionStr());
      assertEquals("CANCELADO REPROVOU TODAS POR FALTAS", student0.getName());
      assertEquals("CANCELADO REPROVOU TODAS POR FALTAS", student0.getStatusTerm());
      assertEquals("com.google.common.base.Predicates", student0.getSecondarySchoolGraduationYear());
      assertEquals("com.google.common.base.Predicates", student0.getSecondarySchool());
      assertEquals("", student0.getNationalId());
      assertEquals("com.google.common.base.Predicates", student0.getBirthDate());
      assertEquals("com.google.common.base.Predicates", student0.getNationality());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student("Mzm)y9TZ<p", "Mzm)y9TZ<p", "Mzm)y9TZ<p", "CANCELADO NOVO INGRESSO OUTRO CURSO", "Mzm)y9TZ<p", "CANCELADO NOVO INGRESSO OUTRO CURSO", "Mzm)y9TZ<p", "Mzm)y9TZ<p", "Mzm)y9TZ<p", "Mzm)y9TZ<p", "CANCELADO NOVO INGRESSO OUTRO CURSO", "CANCELADO NOVO INGRESSO OUTRO CURSO", studentStatus0, "Mzm)y9TZ<p", "Mzm)y9TZ<p", "Mzm)y9TZ<p", "Mzm)y9TZ<p", "CharMatcher.inRange('", "Mzm)y9TZ<p", "CANCELAMENTO DE MATRICULA ", "", "CharMatcher.inRange('", (Curriculum) null, (-89), (-89), (-89), (-89), (-89), 0, (-89), 0, 0, (-89), 1, (-89), 0, 0, (-89), 3.7334780104483065);
      int int0 = student0.getStatusIndex();
      assertEquals("Mzm)y9TZ<p", student0.getSecondarySchool());
      assertEquals("CharMatcher.inRange('", student0.getCurriculumCode());
      assertEquals("CANCELADO NOVO INGRESSO OUTRO CURSO", student0.getBirthDate());
      assertEquals("Mzm)y9TZ<p", student0.getAdmissionStr());
      assertEquals("CharMatcher.inRange('", student0.getAffirmativePolicy());
      assertEquals("Mzm)y9TZ<p", student0.getNationalId());
      assertEquals("", student0.getCourseCode());
      assertEquals("CANCELADO NOVO INGRESSO OUTRO CURSO", student0.getRace());
      assertEquals("Mzm)y9TZ<p", student0.getMaritalStatus());
      assertEquals("Mzm)y9TZ<p", student0.getAdmissionTerm());
      assertEquals("Mzm)y9TZ<p", student0.getDisabilities());
      assertEquals("Mzm)y9TZ<p", student0.getPlaceOfBirth());
      assertEquals("CANCELAMENTO DE MATRICULA ", student0.getSecondarySchoolGraduationYear());
      assertEquals("Mzm)y9TZ<p", student0.getCountry());
      assertEquals("CANCELADO NOVO INGRESSO OUTRO CURSO", student0.getGender());
      assertEquals(2, int0);
      assertEquals("Mzm)y9TZ<p", student0.getEmail());
      assertEquals("Mzm)y9TZ<p", student0.getNationality());
      assertEquals("Mzm)y9TZ<p", student0.getStatusTerm());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("9#P*", "9#P*", "9#P*", "9#P*", "9#P*", "9#P*", "9#P*", "9#P*", "9#P*", "9#P*", "com.google.common.base.CharMatcher$None", "CANCELADO NOVO INGRESSO MESMO CURSO", studentStatus0, "CANCELADO NOVO INGRESSO MESMO CURSO", "9#P*", (String) null, "com.google.common.base.CharMatcher$None", "9#P*", "9#P*", "com.google.common.base.CharMatcher$None", "CANCELADO NOVO INGRESSO MESMO CURSO", "9#P*", (Curriculum) null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 11, 1, 11, 11, 1);
      int int0 = student0.getStatusIndex();
      assertEquals("9#P*", student0.getGender());
      assertEquals(1, int0);
      assertEquals("9#P*", student0.getAffirmativePolicy());
      assertEquals("9#P*", student0.getMaritalStatus());
      assertEquals("9#P*", student0.getAdmissionStr());
      assertEquals("9#P*", student0.getPlaceOfBirth());
      assertEquals("CANCELADO NOVO INGRESSO MESMO CURSO", student0.getStatusTerm());
      assertEquals("9#P*", student0.getCountry());
      assertEquals("CANCELADO NOVO INGRESSO MESMO CURSO", student0.getCourseCode());
      assertEquals("9#P*", student0.getName());
      assertEquals("9#P*", student0.getBirthDate());
      assertEquals("com.google.common.base.CharMatcher$None", student0.getSecondarySchoolGraduationYear());
      assertEquals("9#P*", student0.getNationalId());
      assertEquals("9#P*", student0.getEmail());
      assertEquals("com.google.common.base.CharMatcher$None", student0.getDisabilities());
      assertEquals("9#P*", student0.getNationality());
      assertEquals("com.google.common.base.CharMatcher$None", student0.getRace());
      assertEquals("9#P*", student0.getSecondarySchool());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      TreeSet<String> treeSet0 = new TreeSet<String>();
      Curriculum curriculum0 = new Curriculum("+aH?!_L~FjA}SLw1V)", "", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 3017, (-4046), (-4046), (-4046), 3017, 30, (-2837), (-2837), (-2837), 1, treeSet0, treeSet0, (Collection<String>) null, (Collection<String>) null, treeSet0);
      Student student0 = new Student("", "", "iF<'R+9;d:+s~FM,0vC", "iF<'R+9;d:+s~FM,0vC", "", "iF<'R+9;d:+s~FM,0vC", "", "CANCELADO 3 REPROV MESMA DISCIPLINA", "iF<'R+9;d:+s~FM,0vC", (String) null, "iF<'R+9;d:+s~FM,0vC", "CANCELADO 3 REPROV MESMA DISCIPLINA", studentStatus0, ", secondarySchoolGraduationYear='", "CANCELADO 3 REPROV MESMA DISCIPLINA", "", "YZ~GB?hd{oL;#l", "iF<'R+9;d:+s~FM,0vC", "iF<'R+9;d:+s~FM,0vC", "iF<'R+9;d:+s~FM,0vC", "", "iF<'R+9;d:+s~FM,0vC", curriculum0, (-4046), 30, (-4046), 9, (-2837), 1813, (-847), 1949.579745948524, 1813, 0.0, (-1217), 1813, (-1947), 1, (-1947), (-1947));
      int int0 = student0.getStatusIndex();
      assertEquals("", student0.getMaritalStatus());
      assertEquals(0, int0);
      assertEquals("", student0.getCourseCode());
      assertEquals("iF<'R+9;d:+s~FM,0vC", student0.getCountry());
      assertEquals("iF<'R+9;d:+s~FM,0vC", student0.getRace());
      assertEquals(", secondarySchoolGraduationYear='", student0.getStatusTerm());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("iF<'R+9;d:+s~FM,0vC", student0.getGender());
      assertEquals("YZ~GB?hd{oL;#l", student0.getDisabilities());
      assertEquals("iF<'R+9;d:+s~FM,0vC", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getEmail());
      assertEquals("CANCELADO 3 REPROV MESMA DISCIPLINA", student0.getNationality());
      assertEquals("iF<'R+9;d:+s~FM,0vC", student0.getAffirmativePolicy());
      assertEquals("", student0.getNationalId());
      assertEquals("iF<'R+9;d:+s~FM,0vC", student0.getSecondarySchool());
      assertEquals("iF<'R+9;d:+s~FM,0vC", student0.getCurriculumCode());
      assertEquals("CANCELADO 3 REPROV MESMA DISCIPLINA", student0.getAdmissionStr());
      assertEquals("iF<'R+9;d:+s~FM,0vC", student0.getName());
      assertEquals("iF<'R+9;d:+s~FM,0vC", student0.getBirthDate());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("", "", ", suspendedTerms=", "", "", ", suspendedTerms=", "Invalid IOCase name: ", "", "", "CANCELAMENTO DE MATRICULA ", "", "CANCELAMENTO DE MATRICULA ", studentStatus0, "", "", "Invalid IOCase name: ", "", "Y&cB:^p\"6}e+g,Gh4", "", "CANCELAMENTO DE MATRICULA ", "Y&cB:^p\"6}e+g,Gh4", "CANCELAMENTO DE MATRICULA ", (Curriculum) null, (-4999), 1, (-4999), (-4999), 1, 1, (-4999), 1, (-4999), 1, 700, 1, 340, 1, 700, 686.7);
      int int0 = student0.getStatusIndex();
      assertEquals("Invalid IOCase name: ", student0.getAdmissionTerm());
      assertEquals("Y&cB:^p\"6}e+g,Gh4", student0.getCourseCode());
      assertEquals("CANCELAMENTO DE MATRICULA ", student0.getCurriculumCode());
      assertEquals(4, int0);
      assertEquals("CANCELAMENTO DE MATRICULA ", student0.getSecondarySchoolGraduationYear());
      assertEquals(", suspendedTerms=", student0.getGender());
      assertEquals("", student0.getDisabilities());
      assertEquals("", student0.getCountry());
      assertEquals("", student0.getRace());
      assertEquals("", student0.getAdmissionStr());
      assertEquals("Y&cB:^p\"6}e+g,Gh4", student0.getAffirmativePolicy());
      assertEquals("CANCELAMENTO DE MATRICULA ", student0.getPlaceOfBirth());
      assertEquals("", student0.getNationalId());
      assertEquals(", suspendedTerms=", student0.getName());
      assertEquals("", student0.getNationality());
      assertEquals("", student0.getBirthDate());
      assertEquals("", student0.getEmail());
      assertEquals("Invalid IOCase name: ", student0.getMaritalStatus());
      assertEquals("", student0.getStatusTerm());
      assertEquals("", student0.getSecondarySchool());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("ZW\"riiI<#7E[>s[/", "ZW\"riiI<#7E[>s[/", "ZW\"riiI<#7E[>s[/", "ZW\"riiI<#7E[>s[/", "ZW\"riiI<#7E[>s[/", "LF", "!QRvA/g{uTf", "ZW\"riiI<#7E[>s[/", "<YPA", "92wKf@EI'P)qWkz", "ZW\"riiI<#7E[>s[/", "", studentStatus0, "ZW\"riiI<#7E[>s[/", "ZW\"riiI<#7E[>s[/", "", "r'!PHL}", "", "ZW\"riiI<#7E[>s[/", "", "", "LF", (Curriculum) null, 15, 15, 4, 15, 4, 15, 755, 755, 755, 15, 1073741823, 15, 15, 941, 4, 4);
      student0.setAdmissionGrade(755);
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getSecondarySchool());
      assertEquals("!QRvA/g{uTf", student0.getMaritalStatus());
      assertEquals("LF", student0.getGender());
      assertEquals("<YPA", student0.getCountry());
      assertEquals("", student0.getCourseCode());
      assertEquals("", student0.getStatusStr());
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getName());
      assertEquals("r'!PHL}", student0.getDisabilities());
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getBirthDate());
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getStatusTerm());
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getEmail());
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getNationality());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getRace());
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getNationalId());
      assertEquals("92wKf@EI'P)qWkz", student0.getPlaceOfBirth());
      assertEquals("LF", student0.getCurriculumCode());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      Curriculum curriculum0 = new Curriculum((String) null, "", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 125, 125, 125, 125, 0, 0, 125, 125, 0, 10, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0, linkedHashSet0);
      Student student0 = new Student((String) null, (String) null, (String) null, (String) null, (String) null, (String) null, "", (String) null, "", "+V{m4?b>c=dPw'%3ir", (String) null, "", studentStatus0, (String) null, (String) null, (String) null, "", "", "", "", (String) null, (String) null, curriculum0, 125, 125, 125, 125, (-223), (-223), 10, 0, 125, (-223), 0, 125, 125, 255, 125, 125);
      student0.setMandatoryHours(0);
      assertEquals("+V{m4?b>c=dPw'%3ir", student0.getPlaceOfBirth());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", ", placeOfBirth='", ", placeOfBirth='", "CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", studentStatus0, "CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", ", placeOfBirth='", "", ", placeOfBirth='", "", "CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", (Curriculum) null, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567);
      String string0 = student0.toString();
      student0.setEmail(string0);
      assertEquals(", placeOfBirth='", student0.getCountry());
      assertEquals(", placeOfBirth='", student0.getDisabilities());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getGender());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getCurriculumCode());
      assertEquals(", placeOfBirth='", student0.getSecondarySchool());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getAdmissionTerm());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getMaritalStatus());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getName());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getBirthDate());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getNationalId());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getCourseCode());
      assertEquals(", placeOfBirth='", student0.getPlaceOfBirth());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getNationality());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("C<%06sQM`$?", "C<%06sQM`$?", "C<%06sQM`$?", "C<%06sQM`$?", "IGNORE_TYPE_VIABLE_OR_WLDCARD", "C<%06sQM`$?", "IGNORE_TYPE_VIABLE_OR_WLDCARD", "C<%06sQM`$?", ", mobilityTerms=", ", mobilityTerms=", ", mobilityTerms=", "IGNORE_TYPE_VIABLE_OR_WLDCARD", studentStatus0, "9Yxp]ZX$nF=5.a]g", "C<%06sQM`$?", "j_^3KR:4*D1", "9Yxp]ZX$nF=5.a]g", "j_^3KR:4*D1", (String) null, ", mobilityTerms=", "br.edu.ufcg.computacao.eureca.backend.core.models.Student", "C<%06sQM`$?", (Curriculum) null, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125);
      student0.getIea();
      assertEquals("C<%06sQM`$?", student0.getCurriculumCode());
      assertEquals("IGNORE_TYPE_VIABLE_OR_WLDCARD", student0.getEmail());
      assertEquals("C<%06sQM`$?", student0.getAdmissionStr());
      assertEquals(", mobilityTerms=", student0.getPlaceOfBirth());
      assertEquals(", mobilityTerms=", student0.getSecondarySchoolGraduationYear());
      assertEquals("C<%06sQM`$?", student0.getGender());
      assertEquals(", mobilityTerms=", student0.getCountry());
      assertEquals(", mobilityTerms=", student0.getRace());
      assertEquals("j_^3KR:4*D1", student0.getAffirmativePolicy());
      assertEquals("C<%06sQM`$?", student0.getName());
      assertEquals("C<%06sQM`$?", student0.getBirthDate());
      assertEquals("9Yxp]ZX$nF=5.a]g", student0.getDisabilities());
      assertEquals("IGNORE_TYPE_VIABLE_OR_WLDCARD", student0.getMaritalStatus());
      assertEquals("9Yxp]ZX$nF=5.a]g", student0.getStatusTerm());
      assertEquals("j_^3KR:4*D1", student0.getAdmissionTerm());
      assertEquals("C<%06sQM`$?", student0.getNationalId());
      assertEquals("IGNORE_TYPE_VIABLE_OR_WLDCARD", student0.getStatusStr());
      assertEquals("C<%06sQM`$?", student0.getNationality());
      assertEquals("br.edu.ufcg.computacao.eureca.backend.core.models.Student", student0.getCourseCode());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("", "", "", "", "", "{[t-rQ,UYH6Hj]X9X", ", iea=", "", "", (String) null, "", "", studentStatus0, "", ", iea=", "", "", "", ", iea=", (String) null, "", (String) null, (Curriculum) null, 0, 0, 0, 5760, 0, 0, 0, 0, 5760, 5760, 5760, 0, 0, (-1084), 5760, 5760);
      student0.setComplementaryHours((-321));
      assertEquals(", iea=", student0.getSecondarySchool());
      assertEquals("", student0.getStatusStr());
      assertEquals("", student0.getName());
      assertEquals(", iea=", student0.getAdmissionStr());
      assertEquals("", student0.getNationalId());
      assertEquals("", student0.getBirthDate());
      assertEquals("{[t-rQ,UYH6Hj]X9X", student0.getGender());
      assertEquals("", student0.getCourseCode());
      assertEquals("", student0.getEmail());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum("", "", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 5, (-1837), (-1837), 5, 246, 5, 246, 246, (-1837), (-1837), set0, set0, set0, set0, set0);
      Student student0 = new Student("", "", "", "", "05h`g<<0$EZd3W", "05h`g<<0$EZd3W", "05h`g<<0$EZd3W", "", "", "", "", "LOW", studentStatus0, "", "", "05h`g<<0$EZd3W", "05h`g<<0$EZd3W", "", "", "", "", "Cfu*", curriculum0, 5, 5, 5, 246, 5, 5, 246, 5, (-1837), 5, 5, (-1837), 5, (-1837), 246, 5);
      student0.setIea(5);
      assertEquals("Cfu*", student0.getCurriculumCode());
      assertEquals("LOW", student0.getStatusStr());
      assertEquals("", student0.getCountry());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("", student0.getSecondarySchool());
      assertEquals("05h`g<<0$EZd3W", student0.getAdmissionTerm());
      assertEquals("", student0.getRace());
      assertEquals("05h`g<<0$EZd3W", student0.getEmail());
      assertEquals("", student0.getNationality());
      assertEquals("", student0.getName());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals("05h`g<<0$EZd3W", student0.getDisabilities());
      assertEquals("", student0.getStatusTerm());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("05h`g<<0$EZd3W", student0.getMaritalStatus());
      assertEquals("05h`g<<0$EZd3W", student0.getGender());
      assertEquals("", student0.getBirthDate());
      assertEquals("", student0.getNationalId());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("C<%06sQM`$?", "C<%06sQM`$?", "C<%06sQM`$?", "C<%06sQM`$?", "IGNORE_TYPE_VIABLE_OR_WLDCARD", "C<%06sQM`$?", "IGNORE_TYPE_VIABLE_OR_WLDCARD", "C<%06sQM`$?", ", mobilityTerms=", ", mobilityTerms=", ", mobilityTerms=", "IGNORE_TYPE_VIABLE_OR_WLDCARD", studentStatus0, "9Yxp]ZX$nF=5.a]g", "C<%06sQM`$?", "j_^3KR:4*D1", "9Yxp]ZX$nF=5.a]g", "j_^3KR:4*D1", (String) null, ", mobilityTerms=", "br.edu.ufcg.computacao.eureca.backend.core.models.Student", "C<%06sQM`$?", (Curriculum) null, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125);
      assertEquals("C<%06sQM`$?", student0.getBirthDate());
      
      student0.setBirthDate("j_^3KR:4*D1");
      assertEquals("C<%06sQM`$?", student0.getCurriculumCode());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student((String) null, "?P", (String) null, (String) null, (String) null, (String) null, "?P", (String) null, (String) null, (String) null, (String) null, "?P", studentStatus0, "?P", "", (String) null, "?P", (String) null, "?P", (String) null, (String) null, (String) null, (Curriculum) null, 131, 131, 131, 1699, 131, 131, 1699, (-1421.47882908), (-1421.47882908), 1699, 131, 131, 131, 1699, (-3167), (-3167));
      assertEquals("?P", student0.getStatusTerm());
      
      student0.setStatusTerm((String) null);
      assertEquals("", student0.getAdmissionStr());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student((String) null, (String) null, (String) null, (String) null, (String) null, (String) null, "n=Ebw>xUAZ@Xq'", (String) null, (String) null, "n=Ebw>xUAZ@Xq'", (String) null, "'|qT<IskC3f,C'pu?", studentStatus0, "'|qT<IskC3f,C'pu?", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", (String) null, "'|qT<IskC3f,C'pu?", (Curriculum) null, (-831), (-831), (-831), (-831), 5, (-831), (-2680), 0.0, (-2680), (-831), 5, (-2680), (-2680), (-2680), (-831), 5);
      student0.setCountry((String) null);
      assertEquals("'|qT<IskC3f,C'pu?", student0.getStatusTerm());
      assertEquals("n=Ebw>xUAZ@Xq'", student0.getAffirmativePolicy());
      assertEquals("n=Ebw>xUAZ@Xq'", student0.getPlaceOfBirth());
      assertEquals("'|qT<IskC3f,C'pu?", student0.getStatusStr());
      assertEquals("'|qT<IskC3f,C'pu?", student0.getCurriculumCode());
      assertEquals("n=Ebw>xUAZ@Xq'", student0.getSecondarySchool());
      assertEquals("n=Ebw>xUAZ@Xq'", student0.getMaritalStatus());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Stack<String> stack0 = new Stack<String>();
      Curriculum curriculum0 = new Curriculum("", "", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 0, 0, 0, 0, 2305, 0, 0, Integer.MAX_VALUE, 2305, 0, stack0, stack0, stack0, stack0, stack0);
      Student student0 = new Student("", "", "", "", "", "", "", "", "", "", "", "", studentStatus0, "", "", "", "", "", "", "*iubK{6L'L`)CF7ihQ", "*iubK{6L'L`)CF7ihQ", "~$&mp", curriculum0, 0, 0, 0, 0, 0, 0, Integer.MAX_VALUE, (-123.10257), Integer.MAX_VALUE, 0, 0, 2305, 0, 0, 0, Integer.MAX_VALUE);
      String string0 = student0.getRace();
      assertEquals("*iubK{6L'L`)CF7ihQ", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getAdmissionStr());
      assertEquals("*iubK{6L'L`)CF7ihQ", student0.getCourseCode());
      assertEquals("", string0);
      assertEquals("", student0.getNationalId());
      assertEquals("", student0.getSecondarySchool());
      assertEquals("~$&mp", student0.getCurriculumCode());
      assertEquals("", student0.getMaritalStatus());
      assertEquals("", student0.getEmail());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student("7)l|jO", "7)l|jO", "7)l|jO", "", "", "7)l|jO", "7)l|jO", "-j", "com.google.common.cache.AbstractCache", "", "7)l|jO", (String) null, studentStatus0, "-j", (String) null, ", name='", ", name='", "]@(&B5.{mhd", "", "index", "-j", "7)l|jO", (Curriculum) null, 1892, 0, 996, 2, 2538, 4342, (-309), 0, 1892, 4342, 0, 2210, 0, 0, 1892, 0);
      student0.setAttemptedCredits(2538);
      assertEquals(2538, student0.getAttemptedCredits());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("4ip3}z.*u4", (String) null, "4ip3}z.*u4", (String) null, "4ip3}z.*u4", "4ip3}z.*u4", "4ip3}z.*u4", "", "4ip3}z.*u4", (String) null, (String) null, "fV,xwbx8", studentStatus0, "", "4ip3}z.*u4", (String) null, "", ", minActivitiesNHeded=", "w);", "4ip3}z.*u4", ", nationality='", ", minActivitiesNHeded=", (Curriculum) null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (-1833), (-1833), 0, 0);
      String string0 = student0.getName();
      assertEquals(", nationality='", student0.getCourseCode());
      assertEquals("fV,xwbx8", student0.getStatusStr());
      assertEquals(", minActivitiesNHeded=", student0.getCurriculumCode());
      assertEquals("4ip3}z.*u4", student0.getAdmissionStr());
      assertEquals("w);", student0.getSecondarySchool());
      assertNotNull(string0);
      assertEquals("", student0.getDisabilities());
      assertEquals("4ip3}z.*u4", student0.getEmail());
      assertEquals("4ip3}z.*u4", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getStatusTerm());
      assertEquals(", minActivitiesNHeded=", student0.getAffirmativePolicy());
      assertEquals("4ip3}z.*u4", student0.getCountry());
      assertEquals("", student0.getNationality());
      assertEquals("4ip3}z.*u4", string0);
      assertEquals("4ip3}z.*u4", student0.getGender());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("ZW\"riiI<#7E[>s[/", "ZW\"riiI<#7E[>s[/", "ZW\"riiI<#7E[>s[/", "ZW\"riiI<#7E[>s[/", "ZW\"riiI<#7E[>s[/", "LF", "!QRvA/g{uTf", "ZW\"riiI<#7E[>s[/", "<YPA", "92wKf@EI'P)qWkz", "ZW\"riiI<#7E[>s[/", "", studentStatus0, "ZW\"riiI<#7E[>s[/", "ZW\"riiI<#7E[>s[/", "", "r'!PHL}", "", "ZW\"riiI<#7E[>s[/", "", "", "LF", (Curriculum) null, 15, 15, 4, 15, 4, 15, 755, 755, 755, 15, 1073741823, 15, 15, 941, 4, 4);
      student0.setCompletedTerms(0);
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getRace());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals("92wKf@EI'P)qWkz", student0.getPlaceOfBirth());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("r'!PHL}", student0.getDisabilities());
      assertEquals("<YPA", student0.getCountry());
      assertEquals("LF", student0.getGender());
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getAdmissionStr());
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getSecondarySchool());
      assertEquals("", student0.getCourseCode());
      assertEquals("LF", student0.getCurriculumCode());
      assertEquals("", student0.getStatusStr());
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getName());
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getStatusTerm());
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getNationality());
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getEmail());
      assertEquals("!QRvA/g{uTf", student0.getMaritalStatus());
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getBirthDate());
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getNationalId());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("4ip3}z.*u4", (String) null, "4ip3}z.*u4", (String) null, "4ip3}z.*u4", "4ip3}z.*u4", "4ip3}z.*u4", "", "4ip3}z.*u4", (String) null, (String) null, "fV,xwbx8", studentStatus0, "", "4ip3}z.*u4", (String) null, "", ", minActivitiesNHeded=", "w);", "4ip3}z.*u4", ", nationality='", ", minActivitiesNHeded=", (Curriculum) null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (-1833), (-1833), 0, 0);
      student0.setSecondarySchoolGraduationYear("");
      assertEquals("", student0.getStatusTerm());
      assertEquals(", minActivitiesNHeded=", student0.getAffirmativePolicy());
      assertEquals("4ip3}z.*u4", student0.getEmail());
      assertEquals("4ip3}z.*u4", student0.getGender());
      assertEquals(", nationality='", student0.getCourseCode());
      assertEquals("fV,xwbx8", student0.getStatusStr());
      assertEquals("", student0.getNationality());
      assertEquals("4ip3}z.*u4", student0.getCountry());
      assertEquals("w);", student0.getSecondarySchool());
      assertEquals("4ip3}z.*u4", student0.getMaritalStatus());
      assertEquals(", minActivitiesNHeded=", student0.getCurriculumCode());
      assertEquals("", student0.getDisabilities());
      assertEquals("4ip3}z.*u4", student0.getName());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Curriculum curriculum0 = new Curriculum("", "", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null);
      Student student0 = new Student("c0R&huXji'2G[", "c0R&huXji'2G[", "c0R&huXji'2G[", "", "c0R&huXji'2G[", "", "", "", "c0R&huXji'2G[", "", "c0R&huXji'2G[", "", studentStatus0, "", "", "", "c0R&huXji'2G[", (String) null, ", courseCode='", "", "", "c0R&huXji'2G[", curriculum0, 0, 0, 0, 675, 0, (-3510), 0, (-1.0), 0.0, (-5319.991850448366), (-2898), 1, 924, 675, 0, (-1.0));
      String string0 = student0.getStatusTerm();
      assertEquals(", courseCode='", student0.getSecondarySchool());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("", student0.getMaritalStatus());
      assertEquals("", student0.getCourseCode());
      assertEquals("", student0.getNationality());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getAdmissionStr());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("", student0.getStatusStr());
      assertEquals("c0R&huXji'2G[", student0.getEmail());
      assertEquals("c0R&huXji'2G[", student0.getNationalId());
      assertEquals("c0R&huXji'2G[", student0.getCurriculumCode());
      assertEquals("", string0);
      assertEquals("", student0.getGender());
      assertEquals("c0R&huXji'2G[", student0.getName());
      assertEquals("c0R&huXji'2G[", student0.getCountry());
      assertEquals("c0R&huXji'2G[", student0.getDisabilities());
      assertEquals("c0R&huXji'2G[", student0.getRace());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student("", "", "", "", "", "", "%PUC8e=ncv", "", "wKlm'Ru#J}@CQ]_\r1", "", "", "", studentStatus0, "%PUC8e=ncv", "%PUC8e=ncv", "", "%PUC8e=ncv", "", "", "%PUC8e=ncv", "wKlm'Ru#J}@CQ]_\r1", "", (Curriculum) null, (-1228), 2, 2, 2, (-1228), (-1228), 2, (-1228), (-1228), (-1228), (-1228), (-1228), 2, (-2490), (-1228), (-2490));
      assertEquals("", student0.getNationality());
      
      student0.setNationality("=+s");
      assertEquals("wKlm'Ru#J}@CQ]_\r1", student0.getCountry());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("4ip3}z.*u4", (String) null, "4ip3}z.*u4", (String) null, "4ip3}z.*u4", "4ip3}z.*u4", "4ip3}z.*u4", "", "4ip3}z.*u4", (String) null, (String) null, "fV,xwbx8", studentStatus0, "", "4ip3}z.*u4", (String) null, "", ", minActivitiesNHeded=", "w);", "4ip3}z.*u4", ", nationality='", ", minActivitiesNHeded=", (Curriculum) null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (-1833), (-1833), 0, 0);
      assertEquals("4ip3}z.*u4", student0.getMaritalStatus());
      
      student0.setMaritalStatus("");
      assertEquals(", minActivitiesNHeded=", student0.getCurriculumCode());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("Q!*]2", "Q!*]2", "Q!*]2", "Q!*]2", "Q!*]2", "Q!*]2", "Q!*]2", "Q!*]2", "Q!*]2", "Q!*]2", "", "Q!*]2", studentStatus0, "Q!*]2", "Q!*]2", "Q!*]2", "Q!*]2", "Q!*]2", "", "Q!*]2", "", "", (Curriculum) null, (-1545), (-1545), (-1545), (-1545), 3348, 3348, (-1545), (-1545), (-1545), (-1545), (-1545), (-1545), (-1545), 3348, 0, 0);
      student0.getMandatoryHours();
      assertEquals("Q!*]2", student0.getBirthDate());
      assertEquals("Q!*]2", student0.getStatusTerm());
      assertEquals("", student0.getCourseCode());
      assertEquals("Q!*]2", student0.getEmail());
      assertEquals("", student0.getCurriculumCode());
      assertEquals("Q!*]2", student0.getNationalId());
      assertEquals("", student0.getRace());
      assertEquals("Q!*]2", student0.getGender());
      assertEquals("Q!*]2", student0.getStatusStr());
      assertEquals("Q!*]2", student0.getCountry());
      assertEquals("Q!*]2", student0.getAdmissionStr());
      assertEquals("Q!*]2", student0.getPlaceOfBirth());
      assertEquals("Q!*]2", student0.getSecondarySchoolGraduationYear());
      assertEquals("Q!*]2", student0.getAffirmativePolicy());
      assertEquals("", student0.getSecondarySchool());
      assertEquals("Q!*]2", student0.getDisabilities());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student((String) null, "?P", (String) null, (String) null, (String) null, (String) null, "?P", (String) null, (String) null, (String) null, (String) null, "?P", studentStatus0, "?P", "", (String) null, "?P", (String) null, "?P", (String) null, (String) null, (String) null, (Curriculum) null, 131, 131, 131, 1699, 131, 131, 1699, (-1421.47882908), (-1421.47882908), 1699, 131, 131, 131, 1699, (-3167), (-3167));
      student0.getMobilityTerms();
      assertEquals("?P", student0.getMaritalStatus());
      assertEquals("", student0.getAdmissionStr());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum(", optionalHours=", (String) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 0, 0, 0, 0, 0, 0, 2403, 0, 2403, 0, set0, set0, set0, set0, set0);
      Student student0 = new Student((String) null, (String) null, (String) null, (String) null, (String) null, (String) null, (String) null, "", (String) null, (String) null, (String) null, (String) null, studentStatus0, (String) null, (String) null, ", optionalHours=", (String) null, (String) null, ", optionalHours=", (String) null, (String) null, "", curriculum0, 0, 0, 2403, 0, 4278, 0, 0, 0, 0, 4278, 2403, 4278, 0, 0, 2403, 15.4908793544);
      int int0 = student0.getComplementaryHours();
      assertEquals("", student0.getCurriculumCode());
      assertEquals("", student0.getNationality());
      assertEquals(4278, int0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("ZW\"riiI<#7E[>s[/", "ZW\"riiI<#7E[>s[/", "ZW\"riiI<#7E[>s[/", "ZW\"riiI<#7E[>s[/", "ZW\"riiI<#7E[>s[/", "LF", "!QRvA/g{uTf", "ZW\"riiI<#7E[>s[/", "<YPA", "92wKf@EI'P)qWkz", "ZW\"riiI<#7E[>s[/", "", studentStatus0, "ZW\"riiI<#7E[>s[/", "ZW\"riiI<#7E[>s[/", "", "r'!PHL}", "", "ZW\"riiI<#7E[>s[/", "", "", "LF", (Curriculum) null, 15, 15, 4, 15, 4, 15, 755, 755, 755, 15, 1073741823, 15, 15, 941, 4, 4);
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getRace());
      
      student0.setRace("92wKf@EI'P)qWkz");
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getStatusTerm());
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Curriculum curriculum0 = new Curriculum("", "", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null);
      Student student0 = new Student("c0R&huXji'2G[", "c0R&huXji'2G[", "c0R&huXji'2G[", "", "c0R&huXji'2G[", "", "", "", "c0R&huXji'2G[", "", "c0R&huXji'2G[", "", studentStatus0, "", "", "", "c0R&huXji'2G[", (String) null, ", courseCode='", "", "", "c0R&huXji'2G[", curriculum0, 0, 0, 0, 675, 0, (-3510), 0, (-1.0), 0.0, (-5319.991850448366), (-2898), 1, 924, 675, 0, (-1.0));
      String string0 = student0.getGender();
      assertEquals("c0R&huXji'2G[", student0.getNationalId());
      assertEquals("", student0.getStatusStr());
      assertEquals("c0R&huXji'2G[", student0.getCurriculumCode());
      assertEquals("", student0.getCourseCode());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("c0R&huXji'2G[", student0.getEmail());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getAdmissionStr());
      assertEquals("c0R&huXji'2G[", student0.getCountry());
      assertEquals("c0R&huXji'2G[", student0.getDisabilities());
      assertEquals(", courseCode='", student0.getSecondarySchool());
      assertEquals("", string0);
      assertEquals("", student0.getBirthDate());
      assertEquals("", student0.getNationality());
      assertEquals("", student0.getStatusTerm());
      assertEquals("", student0.getMaritalStatus());
      assertEquals("c0R&huXji'2G[", student0.getName());
      assertEquals("c0R&huXji'2G[", student0.getRace());
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("4ip3}z.*u4", (String) null, "4ip3}z.*u4", (String) null, "4ip3}z.*u4", "4ip3}z.*u4", "4ip3}z.*u4", "", "4ip3}z.*u4", (String) null, (String) null, "fV,xwbx8", studentStatus0, "", "4ip3}z.*u4", (String) null, "", ", minActivitiesNHeded=", "w);", "4ip3}z.*u4", ", nationality='", ", minActivitiesNHeded=", (Curriculum) null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (-1833), (-1833), 0, 0);
      int int0 = student0.getEnrolledCredits();
      assertEquals("4ip3}z.*u4", student0.getSecondarySchoolGraduationYear());
      assertEquals("4ip3}z.*u4", student0.getEmail());
      assertEquals("4ip3}z.*u4", student0.getGender());
      assertEquals("fV,xwbx8", student0.getStatusStr());
      assertEquals(", minActivitiesNHeded=", student0.getAffirmativePolicy());
      assertEquals("", student0.getNationality());
      assertEquals("", student0.getStatusTerm());
      assertEquals("4ip3}z.*u4", student0.getMaritalStatus());
      assertEquals("w);", student0.getSecondarySchool());
      assertEquals(0, int0);
      assertEquals(", nationality='", student0.getCourseCode());
      assertEquals("4ip3}z.*u4", student0.getCountry());
      assertEquals(", minActivitiesNHeded=", student0.getCurriculumCode());
      assertEquals("4ip3}z.*u4", student0.getAdmissionStr());
      assertEquals("", student0.getDisabilities());
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum("", "", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 5, (-1837), (-1837), 5, 246, 5, 246, 246, (-1837), (-1837), set0, set0, set0, set0, set0);
      Student student0 = new Student("", "", "", "", "05h`g<<0$EZd3W", "05h`g<<0$EZd3W", "05h`g<<0$EZd3W", "", "", "", "", "LOW", studentStatus0, "", "", "05h`g<<0$EZd3W", "05h`g<<0$EZd3W", "", "", "", "", "Cfu*", curriculum0, 5, 5, 5, 246, 5, 5, 246, 5, (-1837), 5, 5, (-1837), 5, (-1837), 246, 5);
      String string0 = student0.getDisabilities();
      assertEquals("Cfu*", student0.getCurriculumCode());
      assertEquals("", student0.getCourseCode());
      assertEquals("LOW", student0.getStatusStr());
      assertEquals("", student0.getRace());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("05h`g<<0$EZd3W", student0.getAdmissionTerm());
      assertEquals("", student0.getCountry());
      assertEquals("", student0.getSecondarySchool());
      assertEquals("05h`g<<0$EZd3W", string0);
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals("05h`g<<0$EZd3W", student0.getEmail());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("", student0.getStatusTerm());
      assertEquals("", student0.getAdmissionStr());
      assertEquals("05h`g<<0$EZd3W", student0.getMaritalStatus());
      assertEquals("", student0.getName());
      assertEquals("05h`g<<0$EZd3W", student0.getGender());
      assertEquals("", student0.getBirthDate());
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("", "", "", "", "", "{[t-rQ,UYH6Hj]X9X", ", iea=", "", "", (String) null, "", "", studentStatus0, "", ", iea=", "", "", "", ", iea=", (String) null, "", (String) null, (Curriculum) null, 0, 0, 0, 5760, 0, 0, 0, 0, 5760, 5760, 5760, 0, 0, (-1084), 5760, 5760);
      assertEquals(", iea=", student0.getSecondarySchool());
      
      student0.setSecondarySchool("");
      assertEquals("", student0.getStatusStr());
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student((String) null, (String) null, (String) null, (String) null, (String) null, (String) null, "n=Ebw>xUAZ@Xq'", (String) null, (String) null, "n=Ebw>xUAZ@Xq'", (String) null, "'|qT<IskC3f,C'pu?", studentStatus0, "'|qT<IskC3f,C'pu?", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", (String) null, "'|qT<IskC3f,C'pu?", (Curriculum) null, (-831), (-831), (-831), (-831), 5, (-831), (-2680), 0.0, (-2680), (-831), 5, (-2680), (-2680), (-2680), (-831), 5);
      student0.setOptionalCredits((-2680));
      assertEquals((-2680), student0.getOptionalCredits());
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Curriculum curriculum0 = new Curriculum("", "", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null);
      Student student0 = new Student("c0R&huXji'2G[", "c0R&huXji'2G[", "c0R&huXji'2G[", "", "c0R&huXji'2G[", "", "", "", "c0R&huXji'2G[", "", "c0R&huXji'2G[", "", studentStatus0, "", "", "", "c0R&huXji'2G[", (String) null, ", courseCode='", "", "", "c0R&huXji'2G[", curriculum0, 0, 0, 0, 675, 0, (-3510), 0, (-1.0), 0.0, (-5319.991850448366), (-2898), 1, 924, 675, 0, (-1.0));
      String string0 = student0.getCountry();
      assertEquals("", student0.getNationality());
      assertEquals("", student0.getStatusTerm());
      assertEquals("", student0.getBirthDate());
      assertEquals("c0R&huXji'2G[", student0.getName());
      assertEquals("c0R&huXji'2G[", student0.getDisabilities());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals("c0R&huXji'2G[", student0.getRace());
      assertEquals("", student0.getAdmissionStr());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("c0R&huXji'2G[", student0.getNationalId());
      assertEquals("", student0.getMaritalStatus());
      assertEquals("c0R&huXji'2G[", student0.getCurriculumCode());
      assertEquals("", student0.getGender());
      assertEquals("", student0.getStatusStr());
      assertEquals(", courseCode='", student0.getSecondarySchool());
      assertEquals("c0R&huXji'2G[", string0);
      assertEquals("", student0.getCourseCode());
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>((-730));
      Curriculum curriculum0 = new Curriculum((String) null, "*]YS3L=S", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, (-730), (-730), (-730), (-730), (-730), (-730), (-730), (-730), (-730), (-730), arrayDeque0, arrayDeque0, arrayDeque0, arrayDeque0, arrayDeque0);
      Student student0 = new Student("", "", "", "", "", (String) null, "", "", "", "", "", "", studentStatus0, "", "", "", "*]YS3L=S", "", "", "", "", "", curriculum0, (-67), (-730), (-67), (-67), (-730), (-730), (-730), (-67), (-67), (-730), 0, 0, (-67), (-67), (-730), (-730));
      student0.getSecondarySchool();
      assertEquals("", student0.getBirthDate());
      assertEquals("", student0.getNationality());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("", student0.getNationalId());
      assertEquals("", student0.getRace());
      assertEquals("*]YS3L=S", student0.getDisabilities());
      assertEquals("", student0.getAdmissionStr());
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student("", "", "", "", "", "", "%PUC8e=ncv", "", "wKlm'Ru#J}@CQ]_\r1", "", "", "", studentStatus0, "%PUC8e=ncv", "%PUC8e=ncv", "", "%PUC8e=ncv", "", "", "%PUC8e=ncv", "wKlm'Ru#J}@CQ]_\r1", "", (Curriculum) null, (-1228), 2, 2, 2, (-1228), (-1228), 2, (-1228), (-1228), (-1228), (-1228), (-1228), 2, (-2490), (-1228), (-2490));
      int int0 = student0.getOptionalHours();
      assertEquals("", student0.getGender());
      assertEquals("wKlm'Ru#J}@CQ]_\r1", student0.getCountry());
      assertEquals(2, int0);
      assertEquals("", student0.getCurriculumCode());
      assertEquals("", student0.getNationalId());
      assertEquals("wKlm'Ru#J}@CQ]_\r1", student0.getCourseCode());
      assertEquals("%PUC8e=ncv", student0.getStatusTerm());
      assertEquals("", student0.getSecondarySchool());
      assertEquals("", student0.getEmail());
      assertEquals("", student0.getBirthDate());
      assertEquals("", student0.getNationality());
      assertEquals("%PUC8e=ncv", student0.getDisabilities());
      assertEquals("", student0.getName());
      assertEquals("%PUC8e=ncv", student0.getMaritalStatus());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("%PUC8e=ncv", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("", student0.getStatusStr());
      assertEquals("", student0.getRace());
      assertEquals("%PUC8e=ncv", student0.getAdmissionStr());
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("Q!*]2", "Q!*]2", "Q!*]2", "Q!*]2", "Q!*]2", "Q!*]2", "Q!*]2", "Q!*]2", "Q!*]2", "Q!*]2", "", "Q!*]2", studentStatus0, "Q!*]2", "Q!*]2", "Q!*]2", "Q!*]2", "Q!*]2", "", "Q!*]2", "", "", (Curriculum) null, (-1545), (-1545), (-1545), (-1545), 3348, 3348, (-1545), (-1545), (-1545), (-1545), (-1545), (-1545), (-1545), 3348, 0, 0);
      assertEquals("Q!*]2", student0.getPlaceOfBirth());
      
      student0.setPlaceOfBirth("Q!*]2");
      assertEquals("Q!*]2", student0.getBirthDate());
      assertEquals("", student0.getRace());
      assertEquals("Q!*]2", student0.getDisabilities());
      assertEquals("", student0.getCurriculumCode());
      assertEquals("Q!*]2", student0.getMaritalStatus());
      assertEquals("Q!*]2", student0.getGender());
      assertEquals("Q!*]2", student0.getStatusStr());
      assertEquals("", student0.getCourseCode());
      assertEquals("", student0.getSecondarySchool());
      assertEquals("Q!*]2", student0.getCountry());
      assertEquals("Q!*]2", student0.getSecondarySchoolGraduationYear());
      assertEquals("Q!*]2", student0.getAdmissionTerm());
      assertEquals("Q!*]2", student0.getAffirmativePolicy());
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student((String) null, (String) null, (String) null, (String) null, (String) null, (String) null, "n=Ebw>xUAZ@Xq'", (String) null, (String) null, "n=Ebw>xUAZ@Xq'", (String) null, "'|qT<IskC3f,C'pu?", studentStatus0, "'|qT<IskC3f,C'pu?", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", (String) null, "'|qT<IskC3f,C'pu?", (Curriculum) null, (-831), (-831), (-831), (-831), 5, (-831), (-2680), 0.0, (-2680), (-831), 5, (-2680), (-2680), (-2680), (-831), 5);
      assertEquals("'|qT<IskC3f,C'pu?", student0.getStatusStr());
      
      student0.setStatusStr((String) null);
      assertEquals("n=Ebw>xUAZ@Xq'", student0.getMaritalStatus());
      assertEquals("n=Ebw>xUAZ@Xq'", student0.getAdmissionStr());
      assertEquals("'|qT<IskC3f,C'pu?", student0.getCurriculumCode());
      assertEquals("n=Ebw>xUAZ@Xq'", student0.getSecondarySchool());
      assertEquals("n=Ebw>xUAZ@Xq'", student0.getSecondarySchoolGraduationYear());
      assertEquals("n=Ebw>xUAZ@Xq'", student0.getPlaceOfBirth());
      assertEquals("n=Ebw>xUAZ@Xq'", student0.getAdmissionTerm());
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student("", "", "", "", "", "", "%PUC8e=ncv", "", "wKlm'Ru#J}@CQ]_\r1", "", "", "", studentStatus0, "%PUC8e=ncv", "%PUC8e=ncv", "", "%PUC8e=ncv", "", "", "%PUC8e=ncv", "wKlm'Ru#J}@CQ]_\r1", "", (Curriculum) null, (-1228), 2, 2, 2, (-1228), (-1228), 2, (-1228), (-1228), (-1228), (-1228), (-1228), 2, (-2490), (-1228), (-2490));
      student0.setEnrolledCredits((-2490));
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("%PUC8e=ncv", student0.getMaritalStatus());
      assertEquals("", student0.getEmail());
      assertEquals("", student0.getBirthDate());
      assertEquals("", student0.getSecondarySchool());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("", student0.getNationalId());
      assertEquals("wKlm'Ru#J}@CQ]_\r1", student0.getCourseCode());
      assertEquals("%PUC8e=ncv", student0.getStatusTerm());
      assertEquals("", student0.getGender());
      assertEquals("wKlm'Ru#J}@CQ]_\r1", student0.getCountry());
      assertEquals("%PUC8e=ncv", student0.getDisabilities());
      assertEquals("", student0.getName());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("", student0.getStatusStr());
      assertEquals("%PUC8e=ncv", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getRace());
      assertEquals("%PUC8e=ncv", student0.getAdmissionStr());
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student((String) null, (String) null, (String) null, (String) null, (String) null, (String) null, "n=Ebw>xUAZ@Xq'", (String) null, (String) null, "n=Ebw>xUAZ@Xq'", (String) null, "'|qT<IskC3f,C'pu?", studentStatus0, "'|qT<IskC3f,C'pu?", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", (String) null, "'|qT<IskC3f,C'pu?", (Curriculum) null, (-831), (-831), (-831), (-831), 5, (-831), (-2680), 0.0, (-2680), (-831), 5, (-2680), (-2680), (-2680), (-831), 5);
      String string0 = student0.getAdmissionTerm();
      assertEquals("'|qT<IskC3f,C'pu?", student0.getStatusTerm());
      assertEquals("'|qT<IskC3f,C'pu?", student0.getCurriculumCode());
      assertEquals("n=Ebw>xUAZ@Xq'", student0.getSecondarySchoolGraduationYear());
      assertEquals("n=Ebw>xUAZ@Xq'", student0.getAffirmativePolicy());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("4ip3}z.*u4", (String) null, "4ip3}z.*u4", (String) null, "4ip3}z.*u4", "4ip3}z.*u4", "4ip3}z.*u4", "", "4ip3}z.*u4", (String) null, (String) null, "fV,xwbx8", studentStatus0, "", "4ip3}z.*u4", (String) null, "", ", minActivitiesNHeded=", "w);", "4ip3}z.*u4", ", nationality='", ", minActivitiesNHeded=", (Curriculum) null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (-1833), (-1833), 0, 0);
      student0.getGpa();
      assertEquals("", student0.getDisabilities());
      assertEquals("4ip3}z.*u4", student0.getName());
      assertEquals("4ip3}z.*u4", student0.getEmail());
      assertEquals("4ip3}z.*u4", student0.getCountry());
      assertEquals("4ip3}z.*u4", student0.getAdmissionStr());
      assertEquals("4ip3}z.*u4", student0.getSecondarySchoolGraduationYear());
      assertEquals("w);", student0.getSecondarySchool());
      assertEquals(", nationality='", student0.getCourseCode());
      assertEquals("4ip3}z.*u4", student0.getGender());
      assertEquals("4ip3}z.*u4", student0.getMaritalStatus());
      assertEquals(", minActivitiesNHeded=", student0.getCurriculumCode());
      assertEquals(", minActivitiesNHeded=", student0.getAffirmativePolicy());
      assertEquals("", student0.getStatusTerm());
      assertEquals("", student0.getNationality());
      assertEquals("fV,xwbx8", student0.getStatusStr());
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student((String) null, (String) null, (String) null, (String) null, (String) null, (String) null, "n=Ebw>xUAZ@Xq'", (String) null, (String) null, "n=Ebw>xUAZ@Xq'", (String) null, "'|qT<IskC3f,C'pu?", studentStatus0, "'|qT<IskC3f,C'pu?", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", (String) null, "'|qT<IskC3f,C'pu?", (Curriculum) null, (-831), (-831), (-831), (-831), 5, (-831), (-2680), 0.0, (-2680), (-831), 5, (-2680), (-2680), (-2680), (-831), 5);
      student0.setCourseCode("'|qT<IskC3f,C'pu?");
      assertEquals("'|qT<IskC3f,C'pu?", student0.getStatusTerm());
      assertEquals("'|qT<IskC3f,C'pu?", student0.getStatusStr());
      assertEquals("'|qT<IskC3f,C'pu?", student0.getCurriculumCode());
      assertEquals("n=Ebw>xUAZ@Xq'", student0.getAdmissionStr());
      assertEquals("n=Ebw>xUAZ@Xq'", student0.getSecondarySchool());
      assertEquals("n=Ebw>xUAZ@Xq'", student0.getSecondarySchoolGraduationYear());
      assertEquals("n=Ebw>xUAZ@Xq'", student0.getAdmissionTerm());
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("4ip3}z.*u4", (String) null, "4ip3}z.*u4", (String) null, "4ip3}z.*u4", "4ip3}z.*u4", "4ip3}z.*u4", "", "4ip3}z.*u4", (String) null, (String) null, "fV,xwbx8", studentStatus0, "", "4ip3}z.*u4", (String) null, "", ", minActivitiesNHeded=", "w);", "4ip3}z.*u4", ", nationality='", ", minActivitiesNHeded=", (Curriculum) null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (-1833), (-1833), 0, 0);
      String string0 = student0.getAdmissionStr();
      assertEquals("4ip3}z.*u4", student0.getGender());
      assertEquals(", minActivitiesNHeded=", student0.getCurriculumCode());
      assertEquals(", nationality='", student0.getCourseCode());
      assertEquals("w);", student0.getSecondarySchool());
      assertEquals("", student0.getStatusTerm());
      assertNotNull(string0);
      assertEquals(", minActivitiesNHeded=", student0.getAffirmativePolicy());
      assertEquals("fV,xwbx8", student0.getStatusStr());
      assertEquals("", student0.getNationality());
      assertEquals("4ip3}z.*u4", student0.getName());
      assertEquals("", student0.getDisabilities());
      assertEquals("4ip3}z.*u4", student0.getEmail());
      assertEquals("4ip3}z.*u4", student0.getCountry());
      assertEquals("4ip3}z.*u4", string0);
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student((String) null, (String) null, (String) null, (String) null, (String) null, (String) null, (String) null, (String) null, (String) null, (String) null, (String) null, (String) null, studentStatus0, (String) null, (String) null, (String) null, (String) null, (String) null, (String) null, (String) null, (String) null, "^~z6%", (Curriculum) null, 15, 2716, 15, 2716, 2716, 15, 2716, 15, 2716, 2716, 2716, 2716, 15, 15, 2716, 15);
      student0.setAffirmativePolicy((String) null);
      assertNull(student0.getMaritalStatus());
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", ", placeOfBirth='", ", placeOfBirth='", "CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", studentStatus0, "CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", ", placeOfBirth='", "", ", placeOfBirth='", "", "CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", (Curriculum) null, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567);
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getAdmissionStr());
      
      student0.setAdmissionStr("CONCLUIDO - NAO COLOU GRAU");
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getNationality());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getEmail());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getStatusTerm());
      assertEquals(", placeOfBirth='", student0.getSecondarySchool());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getCurriculumCode());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getRace());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getStatusStr());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getCourseCode());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals(", placeOfBirth='", student0.getPlaceOfBirth());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getMaritalStatus());
      assertEquals(", placeOfBirth='", student0.getDisabilities());
      assertEquals(", placeOfBirth='", student0.getCountry());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getGender());
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum("\"<^B]", "\"<^B]", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 5, (-1810), (-1810), 5, 246, 5, 246, 246, (-1810), (-1810), set0, set0, set0, set0, set0);
      Student student0 = new Student("", "", "", "", "", "", (String) null, (String) null, "y", "", "com.google.common.base.CharMatcher$Invisible", (String) null, studentStatus0, (String) null, (String) null, (String) null, (String) null, "", "-GQmp;)", "-GQmp;)", "\"<^B]", "Cfu*", curriculum0, 9, 5, 4131, 246, 9, 5, 246, 246, (-1810), 5, 4131, (-1810), 5, (-1810), 246, 5);
      String string0 = student0.getPlaceOfBirth();
      assertEquals("", string0);
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("\"<^B]", student0.getCourseCode());
      assertEquals("com.google.common.base.CharMatcher$Invisible", student0.getRace());
      assertNotNull(string0);
      assertEquals("", student0.getName());
      assertEquals("y", student0.getCountry());
      assertEquals("-GQmp;)", student0.getSecondarySchoolGraduationYear());
      assertEquals("Cfu*", student0.getCurriculumCode());
      assertEquals("", student0.getGender());
      assertEquals("", student0.getBirthDate());
      assertEquals("-GQmp;)", student0.getSecondarySchool());
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student("rg@O7K:*CC_Qtb", "rg@O7K:*CC_Qtb", "rg@O7K:*CC_Qtb", "rg@O7K:*CC_Qtb", "rg@O7K:*CC_Qtb", "rg@O7K:*CC_Qtb", "CANCELADO NOVO INGRESSO MESMO CURSO", "rg@O7K:*CC_Qtb", "rg@O7K:*CC_Qtb", "CANCELADO NOVO INGRESSO MESMO CURSO", "rg@O7K:*CC_Qtb", "rg@O7K:*CC_Qtb", studentStatus0, "rg@O7K:*CC_Qtb", "rg@O7K:*CC_Qtb", "rg@O7K:*CC_Qtb", "rg@O7K:*CC_Qtb", "rg@O7K:*CC_Qtb", "CANCELADO NOVO INGRESSO MESMO CURSO", "CANCELADO NOVO INGRESSO MESMO CURSO", "rg@O7K:*CC_Qtb", "CANCELADO NOVO INGRESSO MESMO CURSO", (Curriculum) null, (-19), (-2160), 7, (-19), (-2160), (-2160), (-2160), (-2160), (-2160), (-2160), 7, (-19), (-2160), (-19), (-19), 7);
      String string0 = student0.getBirthDate();
      assertEquals("rg@O7K:*CC_Qtb", student0.getCourseCode());
      assertEquals("CANCELADO NOVO INGRESSO MESMO CURSO", student0.getCurriculumCode());
      assertEquals("CANCELADO NOVO INGRESSO MESMO CURSO", student0.getSecondarySchool());
      assertEquals("rg@O7K:*CC_Qtb", student0.getGender());
      assertEquals("CANCELADO NOVO INGRESSO MESMO CURSO", student0.getMaritalStatus());
      assertEquals("rg@O7K:*CC_Qtb", student0.getAdmissionTerm());
      assertEquals("rg@O7K:*CC_Qtb", student0.getAdmissionStr());
      assertEquals("rg@O7K:*CC_Qtb", student0.getStatusStr());
      assertEquals("rg@O7K:*CC_Qtb", student0.getRace());
      assertEquals("rg@O7K:*CC_Qtb", student0.getAffirmativePolicy());
      assertEquals("rg@O7K:*CC_Qtb", student0.getDisabilities());
      assertEquals("rg@O7K:*CC_Qtb", student0.getCountry());
      assertEquals("CANCELADO NOVO INGRESSO MESMO CURSO", student0.getPlaceOfBirth());
      assertEquals("CANCELADO NOVO INGRESSO MESMO CURSO", student0.getSecondarySchoolGraduationYear());
      assertEquals("rg@O7K:*CC_Qtb", student0.getNationality());
      assertEquals("rg@O7K:*CC_Qtb", student0.getEmail());
      assertEquals("rg@O7K:*CC_Qtb", string0);
      assertEquals("rg@O7K:*CC_Qtb", student0.getName());
      assertEquals("rg@O7K:*CC_Qtb", student0.getStatusTerm());
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student(", race='", ", race='", ", race='", "", ", race='", "", ", race='", ", race='", ", race='", "", ", race='", "hGS4vP`3nZ[^P95+lW'", studentStatus0, "", ", race='", ")S[3 =1CDV3GPG_t/&m", "s", ")S[3 =1CDV3GPG_t/&m", "com.google.common.base.CharMatcher$Or", "", "s", "", (Curriculum) null, 2224, 2224, 2224, 2224, 2224, 39, 39, 1382.72351941, 2224, 1382.72351941, 39, 39, 39, 39, 39, 39);
      student0.getAdmissionGrade();
      assertEquals("com.google.common.base.CharMatcher$Or", student0.getSecondarySchool());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals(", race='", student0.getName());
      assertEquals("", student0.getGender());
      assertEquals(", race='", student0.getMaritalStatus());
      assertEquals(", race='", student0.getAdmissionStr());
      assertEquals(", race='", student0.getCountry());
      assertEquals(", race='", student0.getRace());
      assertEquals("s", student0.getDisabilities());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals(", race='", student0.getNationalId());
      assertEquals("", student0.getStatusTerm());
      assertEquals("s", student0.getCourseCode());
      assertEquals("", student0.getBirthDate());
      assertEquals(", race='", student0.getEmail());
      assertEquals(", race='", student0.getNationality());
      assertEquals(")S[3 =1CDV3GPG_t/&m", student0.getAffirmativePolicy());
      assertEquals("hGS4vP`3nZ[^P95+lW'", student0.getStatusStr());
      assertEquals(")S[3 =1CDV3GPG_t/&m", student0.getAdmissionTerm());
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Curriculum curriculum0 = new Curriculum("", "", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null);
      Student student0 = new Student("c0R&huXji'2G[", "c0R&huXji'2G[", "c0R&huXji'2G[", "", "c0R&huXji'2G[", "", "", "", "c0R&huXji'2G[", "", "c0R&huXji'2G[", "", studentStatus0, "", "", "", "c0R&huXji'2G[", (String) null, ", courseCode='", "", "", "c0R&huXji'2G[", curriculum0, 0, 0, 0, 675, 0, (-3510), 0, (-1.0), 0.0, (-5319.991850448366), (-2898), 1, 924, 675, 0, (-1.0));
      student0.setCurriculum(curriculum0);
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("c0R&huXji'2G[", student0.getEmail());
      assertEquals("", student0.getStatusStr());
      assertEquals("", student0.getAdmissionStr());
      assertEquals("", student0.getCourseCode());
      assertEquals("", student0.getStatusTerm());
      assertEquals("", student0.getBirthDate());
      assertEquals("", student0.getNationality());
      assertEquals(", courseCode='", student0.getSecondarySchool());
      assertEquals("c0R&huXji'2G[", student0.getRace());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("c0R&huXji'2G[", student0.getCountry());
      assertEquals("c0R&huXji'2G[", student0.getDisabilities());
      assertEquals("c0R&huXji'2G[", student0.getName());
      assertEquals("", student0.getGender());
      assertEquals("", student0.getMaritalStatus());
      assertEquals("c0R&huXji'2G[", student0.getCurriculumCode());
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("4ip3}z.*u4", (String) null, "4ip3}z.*u4", (String) null, "4ip3}z.*u4", "4ip3}z.*u4", "4ip3}z.*u4", "", "4ip3}z.*u4", (String) null, (String) null, "fV,xwbx8", studentStatus0, "", "4ip3}z.*u4", (String) null, "", ", minActivitiesNHeded=", "w);", "4ip3}z.*u4", ", nationality='", ", minActivitiesNHeded=", (Curriculum) null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (-1833), (-1833), 0, 0);
      String string0 = student0.getCourseCode();
      assertEquals("4ip3}z.*u4", student0.getCountry());
      assertEquals(", nationality='", string0);
      assertEquals("4ip3}z.*u4", student0.getMaritalStatus());
      assertNotNull(string0);
      assertEquals("4ip3}z.*u4", student0.getGender());
      assertEquals("", student0.getNationality());
      assertEquals("", student0.getStatusTerm());
      assertEquals(", minActivitiesNHeded=", student0.getAffirmativePolicy());
      assertEquals(", minActivitiesNHeded=", student0.getCurriculumCode());
      assertEquals("w);", student0.getSecondarySchool());
      assertEquals("", student0.getDisabilities());
      assertEquals("4ip3}z.*u4", student0.getSecondarySchoolGraduationYear());
      assertEquals("4ip3}z.*u4", student0.getName());
      assertEquals("4ip3}z.*u4", student0.getAdmissionStr());
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum("", "", (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, (ArrayList<Integer>) null, 5, (-1837), (-1837), 5, 246, 5, 246, 246, (-1837), (-1837), set0, set0, set0, set0, set0);
      Student student0 = new Student("", "", "", "", "05h`g<<0$EZd3W", "05h`g<<0$EZd3W", "05h`g<<0$EZd3W", "", "", "", "", "LOW", studentStatus0, "", "", "05h`g<<0$EZd3W", "05h`g<<0$EZd3W", "", "", "", "", "Cfu*", curriculum0, 5, 5, 5, 246, 5, 5, 246, 5, (-1837), 5, 5, (-1837), 5, (-1837), 246, 5);
      assertEquals("05h`g<<0$EZd3W", student0.getAdmissionTerm());
      
      student0.setAdmissionTerm("^?%`=1M=");
      assertEquals("05h`g<<0$EZd3W", student0.getEmail());
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Curriculum curriculum0 = new Curriculum("", "", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null, (Collection<String>) null);
      Student student0 = new Student("c0R&huXji'2G[", "c0R&huXji'2G[", "c0R&huXji'2G[", "", "c0R&huXji'2G[", "", "", "", "c0R&huXji'2G[", "", "c0R&huXji'2G[", "", studentStatus0, "", "", "", "c0R&huXji'2G[", (String) null, ", courseCode='", "", "", "c0R&huXji'2G[", curriculum0, 0, 0, 0, 675, 0, (-3510), 0, (-1.0), 0.0, (-5319.991850448366), (-2898), 1, 924, 675, 0, (-1.0));
      String string0 = student0.getAffirmativePolicy();
      assertEquals("", student0.getNationality());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals("c0R&huXji'2G[", student0.getEmail());
      assertEquals("", student0.getStatusTerm());
      assertEquals("", student0.getAdmissionTerm());
      assertNull(string0);
      assertEquals("c0R&huXji'2G[", student0.getDisabilities());
      assertEquals("c0R&huXji'2G[", student0.getCountry());
      assertEquals("c0R&huXji'2G[", student0.getName());
      assertEquals("", student0.getCourseCode());
      assertEquals("", student0.getMaritalStatus());
      assertEquals("c0R&huXji'2G[", student0.getCurriculumCode());
      assertEquals("c0R&huXji'2G[", student0.getNationalId());
      assertEquals("", student0.getStatusStr());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals(", courseCode='", student0.getSecondarySchool());
      assertEquals("", student0.getAdmissionStr());
      assertEquals("", student0.getBirthDate());
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("", "", ", suspendedTerms=", "", "", ", suspendedTerms=", "Invalid IOCase name: ", "", "", "CANCELAMENTO DE MATRICULA ", "", "CANCELAMENTO DE MATRICULA ", studentStatus0, "", "", "Invalid IOCase name: ", "", "Y&cB:^p\"6}e+g,Gh4", "", "CANCELAMENTO DE MATRICULA ", "Y&cB:^p\"6}e+g,Gh4", "CANCELAMENTO DE MATRICULA ", (Curriculum) null, (-4999), 1, (-4999), (-4999), 1, 1, (-4999), 1, (-4999), 1, 700, 1, 340, 1, 700, 686.7);
      assertEquals("", student0.getDisabilities());
      
      student0.setDisabilities("y(jH");
      assertEquals(", suspendedTerms=", student0.getName());
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student("7)l|jO", "7)l|jO", "7)l|jO", "", "", "7)l|jO", "7)l|jO", "-j", "com.google.common.cache.AbstractCache", "", "7)l|jO", (String) null, studentStatus0, "-j", (String) null, ", name='", ", name='", "]@(&B5.{mhd", "", "index", "-j", "7)l|jO", (Curriculum) null, 1892, 0, 996, 2, 2538, 4342, (-309), 0, 1892, 4342, 0, 2210, 0, 0, 1892, 0);
      String string0 = student0.getEmail();
      assertEquals(", name='", student0.getDisabilities());
      assertEquals("-j", student0.getNationality());
      assertEquals("-j", student0.getStatusTerm());
      assertEquals("7)l|jO", student0.getName());
      assertEquals("", student0.getSecondarySchool());
      assertEquals("7)l|jO", student0.getGender());
      assertNotNull(string0);
      assertEquals("-j", student0.getCourseCode());
      assertEquals("index", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getBirthDate());
      assertEquals("7)l|jO", student0.getMaritalStatus());
      assertEquals(", name='", student0.getAdmissionTerm());
      assertEquals("7)l|jO", student0.getRace());
      assertEquals("]@(&B5.{mhd", student0.getAffirmativePolicy());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("7)l|jO", student0.getCurriculumCode());
      assertEquals("com.google.common.cache.AbstractCache", student0.getCountry());
      assertEquals("", string0);
      assertEquals("7)l|jO", student0.getNationalId());
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("", "", "", "", "", ", mc=", ", mc=", ", mc=", ", mc=", (String) null, "", "CANCELAMENTO P/ SOLICITACAO ALUNO", studentStatus0, ", mc=", "", "CANCELAMENTO P/ SOLICITACAO ALUNO", "CANCELAMENTO P/ SOLICITACAO ALUNO", "CANCELAMENTO P/ SOLICITACAO ALUNO", "CANCELAMENTO P/ SOLICITACAO ALUNO", "", ", admisinSr='", "", (Curriculum) null, (-2723), (-2723), (-2723), 1, 1, (-2723), 1, (-642.027656), 1, (-642.027656), 5, 1, 5, 1, 1692, (-2723));
      student0.isActive();
      assertEquals("CANCELAMENTO P/ SOLICITACAO ALUNO", student0.getAffirmativePolicy());
      assertEquals(7, student0.getStatusIndex());
      assertEquals(", admisinSr='", student0.getCourseCode());
      assertEquals("CANCELAMENTO P/ SOLICITACAO ALUNO", student0.getDisabilities());
      assertEquals(", mc=", student0.getStatusTerm());
      assertEquals(", mc=", student0.getNationality());
      assertEquals("", student0.getBirthDate());
      assertEquals("CANCELAMENTO P/ SOLICITACAO ALUNO", student0.getSecondarySchool());
      assertEquals("CANCELAMENTO P/ SOLICITACAO ALUNO", student0.getAdmissionTerm());
      assertEquals("", student0.getEmail());
      assertEquals(", mc=", student0.getMaritalStatus());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getNationalId());
      assertEquals(", mc=", student0.getCountry());
      assertEquals(", mc=", student0.getGender());
      assertEquals("", student0.getCurriculumCode());
      assertEquals("", student0.getAdmissionStr());
      assertEquals("", student0.getName());
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      Set<String> set0 = ZoneId.getAvailableZoneIds();
      Curriculum curriculum0 = new Curriculum((String) null, "", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 2035, 1206, 5676, 1206, 1206, 2035, 2035, 1206, 1206, 1206, set0, (Collection<String>) null, set0, (Collection<String>) null, (Collection<String>) null);
      Student student0 = new Student("i;Ar{JrIWhqA", "i;Ar{JrIWhqA", "i;Ar{JrIWhqA", "i;Ar{JrIWhqA", "i;Ar{JrIWhqA", "i;Ar{JrIWhqA", "i;Ar{JrIWhqA", (String) null, "i;Ar{JrIWhqA", "i;Ar{JrIWhqA", "S\"q", (String) null, studentStatus0, (String) null, (String) null, (String) null, "i;Ar{JrIWhqA", "S\"q", (String) null, (String) null, (String) null, (String) null, curriculum0, 1206, 11, 1206, (-1657), 5676, 1206, (-718), 2035, 11, 1206, 5676, 0, (-1657), 11, 1206, 1206);
      String string0 = student0.getCurriculumCode();
      assertEquals("S\"q", student0.getRace());
      assertEquals("i;Ar{JrIWhqA", student0.getNationalId());
      assertEquals("i;Ar{JrIWhqA", student0.getCountry());
      assertEquals("i;Ar{JrIWhqA", student0.getDisabilities());
      assertEquals("S\"q", student0.getAffirmativePolicy());
      assertEquals("i;Ar{JrIWhqA", student0.getGender());
      assertEquals("i;Ar{JrIWhqA", student0.getBirthDate());
      assertEquals("i;Ar{JrIWhqA", student0.getEmail());
      assertEquals("i;Ar{JrIWhqA", student0.getMaritalStatus());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student((String) null, "?P", (String) null, (String) null, (String) null, (String) null, "?P", (String) null, (String) null, (String) null, (String) null, "?P", studentStatus0, "?P", "", (String) null, "?P", (String) null, "?P", (String) null, (String) null, (String) null, (Curriculum) null, 131, 131, 131, 1699, 131, 131, 1699, (-1421.47882908), (-1421.47882908), 1699, 131, 131, 131, 1699, (-3167), (-3167));
      String string0 = student0.getStatusStr();
      assertEquals("?P", student0.getDisabilities());
      assertEquals("?P", student0.getNationalId());
      assertEquals("?P", student0.getSecondarySchool());
      assertNotNull(string0);
      assertEquals("", student0.getAdmissionStr());
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(0);
      Curriculum curriculum0 = new Curriculum("", "@.hH7Nj0*i:M8v:w\n", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 98, 1, 39, 1, 7, 3, (-1650), (-1326), 0, 0, arrayDeque0, arrayDeque0, arrayDeque0, arrayDeque0, arrayDeque0);
      Student student0 = new Student("", ", placeOfBirth='", "^J'nU0ic?T", ", placeOfBirth='", ", placeOfBirth='", "^J'nU0ic?T", ", placeOfBirth='", "", "", "#/Z", ", curriculumCode='", "Fb-*Y4}J&? Ve2mWY", studentStatus0, ", placeOfBirth='", (String) null, "", "Fb-*Y4}J&? Ve2mWY", "n.}+K)L5Uo;Q2aEJ5", "(cS}l9G].4n]+B:=", "YwSOr@j~", "@.hH7Nj0*i:M8v:w\n", "n.}+K)L5Uo;Q2aEJ5", curriculum0, 39, 7, 0, 439, (-1904), 1, 3103, 0.0, 1, 0.0, (-2567), 98, Integer.MAX_VALUE, 3103, (-306), 1700.85814);
      student0.getMc();
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("@.hH7Nj0*i:M8v:w\n", student0.getCourseCode());
      assertEquals(", placeOfBirth='", student0.getBirthDate());
      assertEquals("n.}+K)L5Uo;Q2aEJ5", student0.getCurriculumCode());
      assertEquals(", placeOfBirth='", student0.getEmail());
      assertEquals("^J'nU0ic?T", student0.getGender());
      assertEquals(", placeOfBirth='", student0.getStatusTerm());
      assertEquals(", curriculumCode='", student0.getRace());
      assertEquals("YwSOr@j~", student0.getSecondarySchoolGraduationYear());
      assertEquals("#/Z", student0.getPlaceOfBirth());
      assertEquals("", student0.getCountry());
      assertEquals(", placeOfBirth='", student0.getNationalId());
      assertEquals("^J'nU0ic?T", student0.getName());
      assertEquals(", placeOfBirth='", student0.getMaritalStatus());
      assertEquals("Fb-*Y4}J&? Ve2mWY", student0.getDisabilities());
      assertEquals("n.}+K)L5Uo;Q2aEJ5", student0.getAffirmativePolicy());
      assertEquals("(cS}l9G].4n]+B:=", student0.getSecondarySchool());
      assertEquals("", student0.getNationality());
      assertEquals("Fb-*Y4}J&? Ve2mWY", student0.getStatusStr());
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("C<%06sQM`$?", "C<%06sQM`$?", "C<%06sQM`$?", "C<%06sQM`$?", "IGNORE_TYPE_VIABLE_OR_WLDCARD", "C<%06sQM`$?", "IGNORE_TYPE_VIABLE_OR_WLDCARD", "C<%06sQM`$?", ", mobilityTerms=", ", mobilityTerms=", ", mobilityTerms=", "IGNORE_TYPE_VIABLE_OR_WLDCARD", studentStatus0, "9Yxp]ZX$nF=5.a]g", "C<%06sQM`$?", "j_^3KR:4*D1", "9Yxp]ZX$nF=5.a]g", "j_^3KR:4*D1", (String) null, ", mobilityTerms=", "br.edu.ufcg.computacao.eureca.backend.core.models.Student", "C<%06sQM`$?", (Curriculum) null, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125);
      student0.setSuspendedTerms(125);
      assertEquals("j_^3KR:4*D1", student0.getAdmissionTerm());
      assertEquals("9Yxp]ZX$nF=5.a]g", student0.getStatusTerm());
      assertEquals("C<%06sQM`$?", student0.getBirthDate());
      assertEquals("j_^3KR:4*D1", student0.getAffirmativePolicy());
      assertEquals(", mobilityTerms=", student0.getCountry());
      assertEquals(", mobilityTerms=", student0.getRace());
      assertEquals(", mobilityTerms=", student0.getPlaceOfBirth());
      assertEquals("C<%06sQM`$?", student0.getNationality());
      assertEquals("IGNORE_TYPE_VIABLE_OR_WLDCARD", student0.getEmail());
      assertEquals(", mobilityTerms=", student0.getSecondarySchoolGraduationYear());
      assertEquals("C<%06sQM`$?", student0.getGender());
      assertEquals("IGNORE_TYPE_VIABLE_OR_WLDCARD", student0.getStatusStr());
      assertEquals("br.edu.ufcg.computacao.eureca.backend.core.models.Student", student0.getCourseCode());
      assertEquals("C<%06sQM`$?", student0.getCurriculumCode());
      assertEquals("C<%06sQM`$?", student0.getNationalId());
      assertEquals("IGNORE_TYPE_VIABLE_OR_WLDCARD", student0.getMaritalStatus());
      assertEquals("9Yxp]ZX$nF=5.a]g", student0.getDisabilities());
      assertEquals(125, student0.getSuspendedTerms());
      assertEquals("C<%06sQM`$?", student0.getName());
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", ", placeOfBirth='", ", placeOfBirth='", "CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", studentStatus0, "CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", ", placeOfBirth='", "", ", placeOfBirth='", "", "CONCLUIDO - NAO COLOU GRAU", "CONCLUIDO - NAO COLOU GRAU", (Curriculum) null, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567, 87855567);
      student0.setComplementaryCredits(87855567);
      assertEquals(", placeOfBirth='", student0.getCountry());
      assertEquals(", placeOfBirth='", student0.getPlaceOfBirth());
      assertEquals(", placeOfBirth='", student0.getDisabilities());
      assertEquals(", placeOfBirth='", student0.getSecondarySchool());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getGender());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getRace());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getName());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getAdmissionTerm());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getStatusStr());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getAdmissionStr());
      assertEquals(263566701, student0.getCompletedCredits());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getBirthDate());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getNationality());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getEmail());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getMaritalStatus());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getCourseCode());
      assertEquals("CONCLUIDO - NAO COLOU GRAU", student0.getStatusTerm());
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("ZW\"riiI<#7E[>s[/", "ZW\"riiI<#7E[>s[/", "ZW\"riiI<#7E[>s[/", "ZW\"riiI<#7E[>s[/", "ZW\"riiI<#7E[>s[/", "LF", "!QRvA/g{uTf", "ZW\"riiI<#7E[>s[/", "<YPA", "92wKf@EI'P)qWkz", "ZW\"riiI<#7E[>s[/", "", studentStatus0, "ZW\"riiI<#7E[>s[/", "ZW\"riiI<#7E[>s[/", "", "r'!PHL}", "", "ZW\"riiI<#7E[>s[/", "", "", "LF", (Curriculum) null, 15, 15, 4, 15, 4, 15, 755, 755, 755, 15, 1073741823, 15, 15, 941, 4, 4);
      student0.isDropout();
      assertEquals("LF", student0.getGender());
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getAdmissionStr());
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getNationalId());
      assertEquals("<YPA", student0.getCountry());
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getName());
      assertEquals("", student0.getStatusStr());
      assertEquals("LF", student0.getCurriculumCode());
      assertEquals("92wKf@EI'P)qWkz", student0.getPlaceOfBirth());
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getRace());
      assertEquals("", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("r'!PHL}", student0.getDisabilities());
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getStatusTerm());
      assertEquals("!QRvA/g{uTf", student0.getMaritalStatus());
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getSecondarySchool());
      assertEquals("", student0.getCourseCode());
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getNationality());
      assertEquals("ZW\"riiI<#7E[>s[/", student0.getEmail());
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student("", "", "", "", "", "", "%PUC8e=ncv", "", "wKlm'Ru#J}@CQ]_\r1", "", "", "", studentStatus0, "%PUC8e=ncv", "%PUC8e=ncv", "", "%PUC8e=ncv", "", "", "%PUC8e=ncv", "wKlm'Ru#J}@CQ]_\r1", "", (Curriculum) null, (-1228), 2, 2, 2, (-1228), (-1228), 2, (-1228), (-1228), (-1228), (-1228), (-1228), 2, (-2490), (-1228), (-2490));
      student0.setMc(2);
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("%PUC8e=ncv", student0.getMaritalStatus());
      assertEquals("", student0.getEmail());
      assertEquals("", student0.getNationality());
      assertEquals("", student0.getSecondarySchool());
      assertEquals("", student0.getNationalId());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("wKlm'Ru#J}@CQ]_\r1", student0.getCourseCode());
      assertEquals("%PUC8e=ncv", student0.getStatusTerm());
      assertEquals("", student0.getCurriculumCode());
      assertEquals("", student0.getGender());
      assertEquals("wKlm'Ru#J}@CQ]_\r1", student0.getCountry());
      assertEquals("", student0.getName());
      assertEquals("%PUC8e=ncv", student0.getDisabilities());
      assertEquals("", student0.getStatusStr());
      assertEquals("%PUC8e=ncv", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("", student0.getRace());
      assertEquals("%PUC8e=ncv", student0.getAdmissionStr());
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student("", "", "", "", "", "", "%PUC8e=ncv", "", "wKlm'Ru#J}@CQ]_\r1", "", "", "", studentStatus0, "%PUC8e=ncv", "%PUC8e=ncv", "", "%PUC8e=ncv", "", "", "%PUC8e=ncv", "wKlm'Ru#J}@CQ]_\r1", "", (Curriculum) null, (-1228), 2, 2, 2, (-1228), (-1228), 2, (-1228), (-1228), (-1228), (-1228), (-1228), 2, (-2490), (-1228), (-2490));
      student0.setCurriculumCode("");
      assertEquals("%PUC8e=ncv", student0.getMaritalStatus());
      assertEquals("", student0.getEmail());
      assertEquals("", student0.getBirthDate());
      assertEquals("", student0.getNationality());
      assertEquals("", student0.getSecondarySchool());
      assertEquals("", student0.getNationalId());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("wKlm'Ru#J}@CQ]_\r1", student0.getCourseCode());
      assertEquals("%PUC8e=ncv", student0.getStatusTerm());
      assertEquals("", student0.getGender());
      assertEquals("wKlm'Ru#J}@CQ]_\r1", student0.getCountry());
      assertEquals("%PUC8e=ncv", student0.getDisabilities());
      assertEquals("", student0.getName());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("", student0.getStatusStr());
      assertEquals("%PUC8e=ncv", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getRace());
      assertEquals("%PUC8e=ncv", student0.getAdmissionStr());
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student((String) null, "?P", (String) null, (String) null, (String) null, (String) null, "?P", (String) null, (String) null, (String) null, (String) null, "?P", studentStatus0, "?P", "", (String) null, "?P", (String) null, "?P", (String) null, (String) null, (String) null, (Curriculum) null, 131, 131, 131, 1699, 131, 131, 1699, (-1421.47882908), (-1421.47882908), 1699, 131, 131, 131, 1699, (-3167), (-3167));
      student0.setMandatoryCredits(1699);
      assertEquals("", student0.getAdmissionStr());
      assertEquals("?P", student0.getStatusStr());
      assertEquals("?P", student0.getMaritalStatus());
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("", "", "", "", "", "{[t-rQ,UYH6Hj]X9X", ", iea=", "", "", (String) null, "", "", studentStatus0, "", ", iea=", "", "", "", ", iea=", (String) null, "", (String) null, (Curriculum) null, 0, 0, 0, 5760, 0, 0, 0, 0, 5760, 5760, 5760, 0, 0, (-1084), 5760, 5760);
      int int0 = student0.getSuspendedTerms();
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("{[t-rQ,UYH6Hj]X9X", student0.getGender());
      assertEquals(0, int0);
      assertEquals("", student0.getEmail());
      assertEquals("", student0.getBirthDate());
      assertEquals("", student0.getNationalId());
      assertEquals(", iea=", student0.getSecondarySchool());
      assertEquals("", student0.getStatusTerm());
      assertEquals("", student0.getDisabilities());
      assertEquals("", student0.getCourseCode());
      assertEquals(", iea=", student0.getAdmissionStr());
      assertEquals("", student0.getName());
      assertEquals(", iea=", student0.getMaritalStatus());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("", student0.getStatusStr());
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student("", "", "", "", "", "", "%PUC8e=ncv", "", "wKlm'Ru#J}@CQ]_\r1", "", "", "", studentStatus0, "%PUC8e=ncv", "%PUC8e=ncv", "", "%PUC8e=ncv", "", "", "%PUC8e=ncv", "wKlm'Ru#J}@CQ]_\r1", "", (Curriculum) null, (-1228), 2, 2, 2, (-1228), (-1228), 2, (-1228), (-1228), (-1228), (-1228), (-1228), 2, (-2490), (-1228), (-2490));
      String string0 = student0.getSecondarySchoolGraduationYear();
      assertEquals("%PUC8e=ncv", student0.getStatusTerm());
      assertEquals("", student0.getNationalId());
      assertEquals("wKlm'Ru#J}@CQ]_\r1", student0.getCourseCode());
      assertEquals("%PUC8e=ncv", string0);
      assertEquals("wKlm'Ru#J}@CQ]_\r1", student0.getCountry());
      assertEquals("%PUC8e=ncv", student0.getAdmissionStr());
      assertEquals("", student0.getGender());
      assertEquals("", student0.getName());
      assertEquals("%PUC8e=ncv", student0.getDisabilities());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("", student0.getRace());
      assertEquals("%PUC8e=ncv", student0.getMaritalStatus());
      assertEquals("", student0.getBirthDate());
      assertEquals("", student0.getNationality());
      assertEquals("", student0.getEmail());
      assertEquals("", student0.getSecondarySchool());
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student((String) null, (String) null, (String) null, (String) null, (String) null, (String) null, "n=Ebw>xUAZ@Xq'", (String) null, (String) null, "n=Ebw>xUAZ@Xq'", (String) null, "'|qT<IskC3f,C'pu?", studentStatus0, "'|qT<IskC3f,C'pu?", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", (String) null, "'|qT<IskC3f,C'pu?", (Curriculum) null, (-831), (-831), (-831), (-831), 5, (-831), (-2680), 0.0, (-2680), (-831), 5, (-2680), (-2680), (-2680), (-831), 5);
      String string0 = student0.getNationalId();
      assertEquals("'|qT<IskC3f,C'pu?", student0.getStatusStr());
      assertEquals("n=Ebw>xUAZ@Xq'", student0.getSecondarySchool());
      assertEquals("n=Ebw>xUAZ@Xq'", student0.getPlaceOfBirth());
      assertNull(string0);
      assertEquals("n=Ebw>xUAZ@Xq'", student0.getMaritalStatus());
      assertEquals("'|qT<IskC3f,C'pu?", student0.getCurriculumCode());
      assertEquals("n=Ebw>xUAZ@Xq'", student0.getSecondarySchoolGraduationYear());
      assertEquals("n=Ebw>xUAZ@Xq'", student0.getAdmissionStr());
      assertEquals("'|qT<IskC3f,C'pu?", student0.getStatusTerm());
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("", "", ", suspendedTerms=", "", "", ", suspendedTerms=", "Invalid IOCase name: ", "", "", "CANCELAMENTO DE MATRICULA ", "", "CANCELAMENTO DE MATRICULA ", studentStatus0, "", "", "Invalid IOCase name: ", "", "Y&cB:^p\"6}e+g,Gh4", "", "CANCELAMENTO DE MATRICULA ", "Y&cB:^p\"6}e+g,Gh4", "CANCELAMENTO DE MATRICULA ", (Curriculum) null, (-4999), 1, (-4999), (-4999), 1, 1, (-4999), 1, (-4999), 1, 700, 1, 340, 1, 700, 686.7);
      // Undeclared exception!
      try { 
        student0.computeRiskClass();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.core.models.Student", e);
      }
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student("", "", "", "", "", "", "%PUC8e=ncv", "", "wKlm'Ru#J}@CQ]_\r1", "", "", "", studentStatus0, "%PUC8e=ncv", "%PUC8e=ncv", "", "%PUC8e=ncv", "", "", "%PUC8e=ncv", "wKlm'Ru#J}@CQ]_\r1", "", (Curriculum) null, (-1228), 2, 2, 2, (-1228), (-1228), 2, (-1228), (-1228), (-1228), (-1228), (-1228), 2, (-2490), (-1228), (-2490));
      student0.isAlumnus();
      assertEquals("", student0.getNationalId());
      assertEquals("", student0.getCurriculumCode());
      assertEquals("", student0.getSecondarySchool());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("", student0.getStatusStr());
      assertEquals("", student0.getEmail());
      assertEquals("", student0.getBirthDate());
      assertEquals("%PUC8e=ncv", student0.getStatusTerm());
      assertEquals("wKlm'Ru#J}@CQ]_\r1", student0.getCourseCode());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("%PUC8e=ncv", student0.getMaritalStatus());
      assertEquals("", student0.getRace());
      assertEquals("", student0.getName());
      assertEquals("wKlm'Ru#J}@CQ]_\r1", student0.getCountry());
      assertEquals("", student0.getGender());
      assertEquals("%PUC8e=ncv", student0.getAdmissionStr());
      assertEquals("%PUC8e=ncv", student0.getSecondarySchoolGraduationYear());
      assertEquals("%PUC8e=ncv", student0.getDisabilities());
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student((String) null, (String) null, (String) null, (String) null, (String) null, (String) null, "n=Ebw>xUAZ@Xq'", (String) null, (String) null, "n=Ebw>xUAZ@Xq'", (String) null, "'|qT<IskC3f,C'pu?", studentStatus0, "'|qT<IskC3f,C'pu?", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", (String) null, "'|qT<IskC3f,C'pu?", (Curriculum) null, (-831), (-831), (-831), (-831), 5, (-831), (-2680), 0.0, (-2680), (-831), 5, (-2680), (-2680), (-2680), (-831), 5);
      student0.setName((String) null);
      assertEquals("n=Ebw>xUAZ@Xq'", student0.getPlaceOfBirth());
      assertEquals("'|qT<IskC3f,C'pu?", student0.getCurriculumCode());
      assertEquals("n=Ebw>xUAZ@Xq'", student0.getAdmissionTerm());
      assertEquals("'|qT<IskC3f,C'pu?", student0.getStatusTerm());
      assertEquals("'|qT<IskC3f,C'pu?", student0.getStatusStr());
      assertEquals("n=Ebw>xUAZ@Xq'", student0.getSecondarySchoolGraduationYear());
      assertEquals("n=Ebw>xUAZ@Xq'", student0.getMaritalStatus());
      assertEquals("n=Ebw>xUAZ@Xq'", student0.getDisabilities());
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("4ip3}z.*u4", (String) null, "4ip3}z.*u4", (String) null, "4ip3}z.*u4", "4ip3}z.*u4", "4ip3}z.*u4", "", "4ip3}z.*u4", (String) null, (String) null, "fV,xwbx8", studentStatus0, "", "4ip3}z.*u4", (String) null, "", ", minActivitiesNHeded=", "w);", "4ip3}z.*u4", ", nationality='", ", minActivitiesNHeded=", (Curriculum) null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (-1833), (-1833), 0, 0);
      student0.setGpa(0);
      assertEquals("4ip3}z.*u4", student0.getSecondarySchoolGraduationYear());
      assertEquals("4ip3}z.*u4", student0.getAdmissionStr());
      assertEquals("", student0.getNationality());
      assertEquals("", student0.getDisabilities());
      assertEquals("4ip3}z.*u4", student0.getEmail());
      assertEquals("4ip3}z.*u4", student0.getName());
      assertEquals("w);", student0.getSecondarySchool());
      assertEquals("4ip3}z.*u4", student0.getMaritalStatus());
      assertEquals(", nationality='", student0.getCourseCode());
      assertEquals("4ip3}z.*u4", student0.getCountry());
      assertEquals(", minActivitiesNHeded=", student0.getCurriculumCode());
      assertEquals("fV,xwbx8", student0.getStatusStr());
      assertEquals("4ip3}z.*u4", student0.getGender());
      assertEquals(", minActivitiesNHeded=", student0.getAffirmativePolicy());
      assertEquals("", student0.getStatusTerm());
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("4ip3}z.*u4", (String) null, "4ip3}z.*u4", (String) null, "4ip3}z.*u4", "4ip3}z.*u4", "4ip3}z.*u4", "", "4ip3}z.*u4", (String) null, (String) null, "fV,xwbx8", studentStatus0, "", "4ip3}z.*u4", (String) null, "", ", minActivitiesNHeded=", "w);", "4ip3}z.*u4", ", nationality='", ", minActivitiesNHeded=", (Curriculum) null, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, (-1833), (-1833), 0, 0);
      student0.setNationalId("4ip3}z.*u4");
      assertEquals(", nationality='", student0.getCourseCode());
      assertEquals("fV,xwbx8", student0.getStatusStr());
      assertEquals("4ip3}z.*u4", student0.getGender());
      assertEquals("w);", student0.getSecondarySchool());
      assertEquals("", student0.getStatusTerm());
      assertEquals(", minActivitiesNHeded=", student0.getAffirmativePolicy());
      assertEquals("4ip3}z.*u4", student0.getAdmissionStr());
      assertEquals("4ip3}z.*u4", student0.getCountry());
      assertEquals("4ip3}z.*u4", student0.getSecondarySchoolGraduationYear());
      assertEquals("4ip3}z.*u4", student0.getMaritalStatus());
      assertEquals(", minActivitiesNHeded=", student0.getCurriculumCode());
      assertEquals("4ip3}z.*u4", student0.getName());
      assertEquals("4ip3}z.*u4", student0.getEmail());
      assertEquals("", student0.getDisabilities());
      assertEquals("", student0.getNationality());
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student("", "", "", "", "", "", "%PUC8e=ncv", "", "wKlm'Ru#J}@CQ]_\r1", "", "", "", studentStatus0, "%PUC8e=ncv", "%PUC8e=ncv", "", "%PUC8e=ncv", "", "", "%PUC8e=ncv", "wKlm'Ru#J}@CQ]_\r1", "", (Curriculum) null, (-1228), 2, 2, 2, (-1228), (-1228), 2, (-1228), (-1228), (-1228), (-1228), (-1228), 2, (-2490), (-1228), (-2490));
      student0.getStatus();
      assertEquals("", student0.getEmail());
      assertEquals("%PUC8e=ncv", student0.getDisabilities());
      assertEquals("%PUC8e=ncv", student0.getMaritalStatus());
      assertEquals("", student0.getName());
      assertEquals("%PUC8e=ncv", student0.getStatusTerm());
      assertEquals("", student0.getNationalId());
      assertEquals("", student0.getSecondarySchool());
      assertEquals("wKlm'Ru#J}@CQ]_\r1", student0.getCourseCode());
      assertEquals("", student0.getNationality());
      assertEquals("%PUC8e=ncv", student0.getAdmissionStr());
      assertEquals("", student0.getCurriculumCode());
      assertEquals("", student0.getRace());
      assertEquals("", student0.getPlaceOfBirth());
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("%PUC8e=ncv", student0.getSecondarySchoolGraduationYear());
      assertEquals("", student0.getAffirmativePolicy());
      assertEquals("wKlm'Ru#J}@CQ]_\r1", student0.getCountry());
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("C<%06sQM`$?", "C<%06sQM`$?", "C<%06sQM`$?", "C<%06sQM`$?", "IGNORE_TYPE_VIABLE_OR_WLDCARD", "C<%06sQM`$?", "IGNORE_TYPE_VIABLE_OR_WLDCARD", "C<%06sQM`$?", ", mobilityTerms=", ", mobilityTerms=", ", mobilityTerms=", "IGNORE_TYPE_VIABLE_OR_WLDCARD", studentStatus0, "9Yxp]ZX$nF=5.a]g", "C<%06sQM`$?", "j_^3KR:4*D1", "9Yxp]ZX$nF=5.a]g", "j_^3KR:4*D1", (String) null, ", mobilityTerms=", "br.edu.ufcg.computacao.eureca.backend.core.models.Student", "C<%06sQM`$?", (Curriculum) null, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125);
      String string0 = student0.getMaritalStatus();
      assertEquals("IGNORE_TYPE_VIABLE_OR_WLDCARD", string0);
      assertEquals("9Yxp]ZX$nF=5.a]g", student0.getDisabilities());
      assertEquals("C<%06sQM`$?", student0.getName());
      assertEquals("IGNORE_TYPE_VIABLE_OR_WLDCARD", student0.getStatusStr());
      assertEquals("br.edu.ufcg.computacao.eureca.backend.core.models.Student", student0.getCourseCode());
      assertEquals("j_^3KR:4*D1", student0.getAdmissionTerm());
      assertEquals("C<%06sQM`$?", student0.getBirthDate());
      assertEquals("9Yxp]ZX$nF=5.a]g", student0.getStatusTerm());
      assertEquals("j_^3KR:4*D1", student0.getAffirmativePolicy());
      assertEquals("C<%06sQM`$?", student0.getNationality());
      assertEquals("C<%06sQM`$?", student0.getCurriculumCode());
      assertEquals("C<%06sQM`$?", student0.getNationalId());
      assertEquals("IGNORE_TYPE_VIABLE_OR_WLDCARD", student0.getEmail());
      assertEquals("C<%06sQM`$?", student0.getAdmissionStr());
      assertEquals(", mobilityTerms=", student0.getRace());
      assertEquals(", mobilityTerms=", student0.getCountry());
      assertEquals("C<%06sQM`$?", student0.getGender());
      assertEquals(", mobilityTerms=", student0.getPlaceOfBirth());
      assertEquals(", mobilityTerms=", student0.getSecondarySchoolGraduationYear());
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("9#P*", "9#P*", "9#P*", "9#P*", "9#P*", "9#P*", "9#P*", "9#P*", "9#P*", "9#P*", "com.google.common.base.CharMatcher$None", "CANCELADO NOVO INGRESSO MESMO CURSO", studentStatus0, "CANCELADO NOVO INGRESSO MESMO CURSO", "9#P*", (String) null, "com.google.common.base.CharMatcher$None", "9#P*", "9#P*", "com.google.common.base.CharMatcher$None", "CANCELADO NOVO INGRESSO MESMO CURSO", "9#P*", (Curriculum) null, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 11, 1, 11, 11, 1);
      student0.setInstitutionalEnrollments(0);
      assertEquals("com.google.common.base.CharMatcher$None", student0.getDisabilities());
      assertEquals("9#P*", student0.getMaritalStatus());
      assertEquals("9#P*", student0.getGender());
      assertEquals("com.google.common.base.CharMatcher$None", student0.getSecondarySchoolGraduationYear());
      assertEquals("com.google.common.base.CharMatcher$None", student0.getRace());
      assertEquals("CANCELADO NOVO INGRESSO MESMO CURSO", student0.getStatusStr());
      assertEquals("9#P*", student0.getNationality());
      assertEquals("9#P*", student0.getEmail());
      assertEquals("9#P*", student0.getPlaceOfBirth());
      assertEquals("9#P*", student0.getNationalId());
      assertEquals("CANCELADO NOVO INGRESSO MESMO CURSO", student0.getCourseCode());
      assertEquals("9#P*", student0.getAffirmativePolicy());
      assertEquals("9#P*", student0.getCountry());
      assertEquals("CANCELADO NOVO INGRESSO MESMO CURSO", student0.getStatusTerm());
      assertEquals("9#P*", student0.getCurriculumCode());
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.DROPOUT;
      Student student0 = new Student("", "", "", "", "", "{[t-rQ,UYH6Hj]X9X", ", iea=", "", "", (String) null, "", "", studentStatus0, "", ", iea=", "", "", "", ", iea=", (String) null, "", (String) null, (Curriculum) null, 0, 0, 0, 5760, 0, 0, 0, 0, 5760, 5760, 5760, 0, 0, (-1084), 5760, 5760);
      String string0 = student0.getNationality();
      assertEquals("", student0.getDisabilities());
      assertEquals(", iea=", student0.getAdmissionStr());
      assertEquals(", iea=", student0.getMaritalStatus());
      assertEquals("{[t-rQ,UYH6Hj]X9X", student0.getGender());
      assertEquals(", iea=", student0.getSecondarySchool());
      assertEquals("", student0.getNationalId());
      assertEquals("", student0.getStatusStr());
      assertEquals("", student0.getName());
      assertEquals("", student0.getCourseCode());
      assertEquals("", string0);
      assertEquals("", student0.getAdmissionTerm());
      assertEquals("", student0.getRace());
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      Student student0 = new Student((String) null, (String) null, (String) null, (String) null, (String) null, (String) null, "n=Ebw>xUAZ@Xq'", (String) null, (String) null, "n=Ebw>xUAZ@Xq'", (String) null, "'|qT<IskC3f,C'pu?", studentStatus0, "'|qT<IskC3f,C'pu?", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", "n=Ebw>xUAZ@Xq'", (String) null, "'|qT<IskC3f,C'pu?", (Curriculum) null, (-831), (-831), (-831), (-831), 5, (-831), (-2680), 0.0, (-2680), (-831), 5, (-2680), (-2680), (-2680), (-831), 5);
      student0.setMobilityTerms((-2680));
      assertEquals("'|qT<IskC3f,C'pu?", student0.getStatusTerm());
      assertEquals("n=Ebw>xUAZ@Xq'", student0.getPlaceOfBirth());
      assertEquals("n=Ebw>xUAZ@Xq'", student0.getMaritalStatus());
      assertEquals((-2680), student0.getMobilityTerms());
      assertEquals("'|qT<IskC3f,C'pu?", student0.getStatusStr());
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ALUMNUS;
      Student student0 = new Student("", "", ", suspendedTerms=", "", "", ", suspendedTerms=", "Invalid IOCase name: ", "", "", "CANCELAMENTO DE MATRICULA ", "", "CANCELAMENTO DE MATRICULA ", studentStatus0, "", "", "Invalid IOCase name: ", "", "Y&cB:^p\"6}e+g,Gh4", "", "CANCELAMENTO DE MATRICULA ", "Y&cB:^p\"6}e+g,Gh4", "CANCELAMENTO DE MATRICULA ", (Curriculum) null, (-4999), 1, (-4999), (-4999), 1, 1, (-4999), 1, (-4999), 1, 700, 1, 340, 1, 700, 686.7);
      student0.setOptionalHours(1);
      assertEquals("CANCELAMENTO DE MATRICULA ", student0.getSecondarySchoolGraduationYear());
      assertEquals("Y&cB:^p\"6}e+g,Gh4", student0.getAffirmativePolicy());
      assertEquals("CANCELAMENTO DE MATRICULA ", student0.getCurriculumCode());
      assertEquals("Y&cB:^p\"6}e+g,Gh4", student0.getCourseCode());
      assertEquals("Invalid IOCase name: ", student0.getAdmissionTerm());
      assertEquals("", student0.getSecondarySchool());
      assertEquals("Invalid IOCase name: ", student0.getMaritalStatus());
      assertEquals("", student0.getStatusTerm());
      assertEquals(", suspendedTerms=", student0.getName());
      assertEquals(", suspendedTerms=", student0.getGender());
      assertEquals("", student0.getEmail());
      assertEquals("CANCELAMENTO DE MATRICULA ", student0.getPlaceOfBirth());
      assertEquals("", student0.getNationality());
      assertEquals("", student0.getBirthDate());
      assertEquals("", student0.getNationalId());
      assertEquals("CANCELAMENTO DE MATRICULA ", student0.getStatusStr());
      assertEquals("", student0.getRace());
      assertEquals("", student0.getCountry());
      assertEquals("", student0.getDisabilities());
      assertEquals("", student0.getAdmissionStr());
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      StudentStatus studentStatus0 = StudentStatus.ACTIVE;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      ArrayDeque<String> arrayDeque0 = new ArrayDeque<String>(0);
      Curriculum curriculum0 = new Curriculum("", "@.hH7Nj0*i:M8v:w\n", arrayList0, arrayList0, arrayList0, arrayList0, arrayList0, 98, 1, 39, 1, 7, 3, (-1650), (-1326), 0, 0, arrayDeque0, arrayDeque0, arrayDeque0, arrayDeque0, arrayDeque0);
      Student student0 = new Student("", ", placeOfBirth='", "^J'nU0ic?T", ", placeOfBirth='", ", placeOfBirth='", "^J'nU0ic?T", ", placeOfBirth='", "", "", "#/Z", ", curriculumCode='", "Fb-*Y4}J&? Ve2mWY", studentStatus0, ", placeOfBirth='", (String) null, "", "Fb-*Y4}J&? Ve2mWY", "n.}+K)L5Uo;Q2aEJ5", "(cS}l9G].4n]+B:=", "YwSOr@j~", "@.hH7Nj0*i:M8v:w\n", "n.}+K)L5Uo;Q2aEJ5", curriculum0, 39, 7, 0, 439, (-1904), 1, 3103, 0.0, 1, 0.0, (-2567), 98, Integer.MAX_VALUE, 3103, (-306), 1700.85814);
      // Undeclared exception!
      try { 
        student0.compareTo(student0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
