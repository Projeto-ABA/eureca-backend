/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 05 23:37:00 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.api.http.response.enrollment;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.enrollment.EnrollmentsCSV;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EnrollmentsCSV_ESTest extends EnrollmentsCSV_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV(" #pIzia\u0002", " #pIzia\u0002", " #pIzia\u0002", " #pIzia\u0002", " #pIzia\u0002", " #pIzia\u0002", 39, 39, 39, 39, 39, 142, 39, (-1686));
      assertNotNull(enrollmentsCSV0);
      assertEquals(39, enrollmentsCSV0.getExemptedCount());
      assertEquals(" #pIzia\u0002", enrollmentsCSV0.getCourseCode());
      assertEquals(39, enrollmentsCSV0.getOngoingCount());
      assertEquals(39, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(" #pIzia\u0002", enrollmentsCSV0.getClassId());
      assertEquals(39, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals((-1686), enrollmentsCSV0.getSuspendedCount());
      assertEquals(39, enrollmentsCSV0.getCancelledCount());
      assertEquals(39, enrollmentsCSV0.getSucceededCount());
      assertEquals(142, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(" #pIzia\u0002", enrollmentsCSV0.getSubjectName());
      assertEquals(" #pIzia\u0002", enrollmentsCSV0.getSubjectCode());
      assertEquals(" #pIzia\u0002", enrollmentsCSV0.getCurriculumCode());
      assertEquals(" #pIzia\u0002", enrollmentsCSV0.getTerm());
      
      String string0 = enrollmentsCSV0.getTerm();
      assertNotNull(string0);
      assertEquals(" #pIzia\u0002", string0);
      assertEquals(39, enrollmentsCSV0.getExemptedCount());
      assertEquals(" #pIzia\u0002", enrollmentsCSV0.getCourseCode());
      assertEquals(39, enrollmentsCSV0.getOngoingCount());
      assertEquals(39, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(" #pIzia\u0002", enrollmentsCSV0.getClassId());
      assertEquals(39, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals((-1686), enrollmentsCSV0.getSuspendedCount());
      assertEquals(39, enrollmentsCSV0.getCancelledCount());
      assertEquals(39, enrollmentsCSV0.getSucceededCount());
      assertEquals(142, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(" #pIzia\u0002", enrollmentsCSV0.getSubjectName());
      assertEquals(" #pIzia\u0002", enrollmentsCSV0.getSubjectCode());
      assertEquals(" #pIzia\u0002", enrollmentsCSV0.getCurriculumCode());
      assertEquals(" #pIzia\u0002", enrollmentsCSV0.getTerm());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("", "", "", ", suspendedCount=", "", "", 0, 0, 0, (-605), (-605), 0, (-605), (-605));
      assertNotNull(enrollmentsCSV0);
      assertEquals((-605), enrollmentsCSV0.getOngoingCount());
      assertEquals(0, enrollmentsCSV0.getSucceededCount());
      assertEquals((-605), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals("", enrollmentsCSV0.getClassId());
      assertEquals((-605), enrollmentsCSV0.getSuspendedCount());
      assertEquals("", enrollmentsCSV0.getTerm());
      assertEquals(0, enrollmentsCSV0.getCancelledCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(", suspendedCount=", enrollmentsCSV0.getSubjectName());
      assertEquals("", enrollmentsCSV0.getSubjectCode());
      assertEquals("", enrollmentsCSV0.getCurriculumCode());
      assertEquals((-605), enrollmentsCSV0.getExemptedCount());
      assertEquals(0, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals("", enrollmentsCSV0.getCourseCode());
      
      String string0 = enrollmentsCSV0.getTerm();
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals((-605), enrollmentsCSV0.getOngoingCount());
      assertEquals(0, enrollmentsCSV0.getSucceededCount());
      assertEquals((-605), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals("", enrollmentsCSV0.getClassId());
      assertEquals((-605), enrollmentsCSV0.getSuspendedCount());
      assertEquals("", enrollmentsCSV0.getTerm());
      assertEquals(0, enrollmentsCSV0.getCancelledCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(", suspendedCount=", enrollmentsCSV0.getSubjectName());
      assertEquals("", enrollmentsCSV0.getSubjectCode());
      assertEquals("", enrollmentsCSV0.getCurriculumCode());
      assertEquals((-605), enrollmentsCSV0.getExemptedCount());
      assertEquals(0, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals("", enrollmentsCSV0.getCourseCode());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("!!xrda`3Sw", "R\",x_l9T:HGEl", "!!xrda`3Sw", "!!xrda`3Sw", "", "", 39, 3881, 3881, 3881, 39, 338, 0, 0);
      assertNotNull(enrollmentsCSV0);
      assertEquals(3881, enrollmentsCSV0.getCancelledCount());
      assertEquals(3881, enrollmentsCSV0.getSucceededCount());
      assertEquals("!!xrda`3Sw", enrollmentsCSV0.getCourseCode());
      assertEquals("R\",x_l9T:HGEl", enrollmentsCSV0.getCurriculumCode());
      assertEquals(39, enrollmentsCSV0.getOngoingCount());
      assertEquals(338, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals("!!xrda`3Sw", enrollmentsCSV0.getSubjectCode());
      assertEquals(0, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(3881, enrollmentsCSV0.getExemptedCount());
      assertEquals(39, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals("", enrollmentsCSV0.getClassId());
      assertEquals(0, enrollmentsCSV0.getSuspendedCount());
      assertEquals("!!xrda`3Sw", enrollmentsCSV0.getSubjectName());
      assertEquals("", enrollmentsCSV0.getTerm());
      
      int int0 = enrollmentsCSV0.getSuspendedCount();
      assertEquals(0, int0);
      assertEquals(3881, enrollmentsCSV0.getCancelledCount());
      assertEquals(3881, enrollmentsCSV0.getSucceededCount());
      assertEquals("!!xrda`3Sw", enrollmentsCSV0.getCourseCode());
      assertEquals("R\",x_l9T:HGEl", enrollmentsCSV0.getCurriculumCode());
      assertEquals(39, enrollmentsCSV0.getOngoingCount());
      assertEquals(338, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals("!!xrda`3Sw", enrollmentsCSV0.getSubjectCode());
      assertEquals(0, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(3881, enrollmentsCSV0.getExemptedCount());
      assertEquals(39, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals("", enrollmentsCSV0.getClassId());
      assertEquals(0, enrollmentsCSV0.getSuspendedCount());
      assertEquals("!!xrda`3Sw", enrollmentsCSV0.getSubjectName());
      assertEquals("", enrollmentsCSV0.getTerm());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV(", subjectCode='", "", ", subjectCode='", "", "", ", ongoingCount=", 2868, 2868, 2868, 2666, (-1216), (-251), 0, (-4388));
      assertNotNull(enrollmentsCSV0);
      assertEquals("", enrollmentsCSV0.getSubjectName());
      assertEquals("", enrollmentsCSV0.getCurriculumCode());
      assertEquals(", subjectCode='", enrollmentsCSV0.getSubjectCode());
      assertEquals((-251), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(2868, enrollmentsCSV0.getSucceededCount());
      assertEquals(2868, enrollmentsCSV0.getCancelledCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals((-1216), enrollmentsCSV0.getOngoingCount());
      assertEquals(", subjectCode='", enrollmentsCSV0.getCourseCode());
      assertEquals(2666, enrollmentsCSV0.getExemptedCount());
      assertEquals((-4388), enrollmentsCSV0.getSuspendedCount());
      assertEquals(", ongoingCount=", enrollmentsCSV0.getClassId());
      assertEquals("", enrollmentsCSV0.getTerm());
      assertEquals(2868, enrollmentsCSV0.getEnrollmentsCount());
      
      int int0 = enrollmentsCSV0.getSuspendedCount();
      assertEquals((-4388), int0);
      assertEquals("", enrollmentsCSV0.getSubjectName());
      assertEquals("", enrollmentsCSV0.getCurriculumCode());
      assertEquals(", subjectCode='", enrollmentsCSV0.getSubjectCode());
      assertEquals((-251), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(2868, enrollmentsCSV0.getSucceededCount());
      assertEquals(2868, enrollmentsCSV0.getCancelledCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals((-1216), enrollmentsCSV0.getOngoingCount());
      assertEquals(", subjectCode='", enrollmentsCSV0.getCourseCode());
      assertEquals(2666, enrollmentsCSV0.getExemptedCount());
      assertEquals((-4388), enrollmentsCSV0.getSuspendedCount());
      assertEquals(", ongoingCount=", enrollmentsCSV0.getClassId());
      assertEquals("", enrollmentsCSV0.getTerm());
      assertEquals(2868, enrollmentsCSV0.getEnrollmentsCount());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV(", subjectName='", ", subjectName='", ", subjectName='", (String) null, (String) null, (String) null, (-1), 0, (-1), (-1), (-1), (-1), 0, 0);
      assertNotNull(enrollmentsCSV0);
      assertNull(enrollmentsCSV0.getSubjectName());
      assertEquals((-1), enrollmentsCSV0.getExemptedCount());
      assertEquals((-1), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals(", subjectName='", enrollmentsCSV0.getSubjectCode());
      assertNull(enrollmentsCSV0.getTerm());
      assertEquals(0, enrollmentsCSV0.getSuspendedCount());
      assertEquals(", subjectName='", enrollmentsCSV0.getCurriculumCode());
      assertEquals(0, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals((-1), enrollmentsCSV0.getOngoingCount());
      assertEquals(0, enrollmentsCSV0.getSucceededCount());
      assertEquals((-1), enrollmentsCSV0.getCancelledCount());
      assertEquals((-1), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(", subjectName='", enrollmentsCSV0.getCourseCode());
      assertNull(enrollmentsCSV0.getClassId());
      
      int int0 = enrollmentsCSV0.getSucceededCount();
      assertEquals(0, int0);
      assertNull(enrollmentsCSV0.getSubjectName());
      assertEquals((-1), enrollmentsCSV0.getExemptedCount());
      assertEquals((-1), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals(", subjectName='", enrollmentsCSV0.getSubjectCode());
      assertNull(enrollmentsCSV0.getTerm());
      assertEquals(0, enrollmentsCSV0.getSuspendedCount());
      assertEquals(", subjectName='", enrollmentsCSV0.getCurriculumCode());
      assertEquals(0, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals((-1), enrollmentsCSV0.getOngoingCount());
      assertEquals(0, enrollmentsCSV0.getSucceededCount());
      assertEquals((-1), enrollmentsCSV0.getCancelledCount());
      assertEquals((-1), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(", subjectName='", enrollmentsCSV0.getCourseCode());
      assertNull(enrollmentsCSV0.getClassId());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV((String) null, "", ", subjectName='", "", (String) null, ", subjectName='", 69, 0, 1924, 0, 0, 22, 22, (-1));
      assertNotNull(enrollmentsCSV0);
      assertEquals(", subjectName='", enrollmentsCSV0.getClassId());
      assertEquals("", enrollmentsCSV0.getSubjectName());
      assertEquals(0, enrollmentsCSV0.getExemptedCount());
      assertEquals(", subjectName='", enrollmentsCSV0.getSubjectCode());
      assertEquals(22, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals("", enrollmentsCSV0.getCurriculumCode());
      assertNull(enrollmentsCSV0.getTerm());
      assertEquals(1924, enrollmentsCSV0.getCancelledCount());
      assertEquals(0, enrollmentsCSV0.getSucceededCount());
      assertEquals((-1), enrollmentsCSV0.getSuspendedCount());
      assertEquals(0, enrollmentsCSV0.getOngoingCount());
      assertNull(enrollmentsCSV0.getCourseCode());
      assertEquals(22, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(69, enrollmentsCSV0.getEnrollmentsCount());
      
      enrollmentsCSV0.setSucceededCount(681);
      assertEquals(", subjectName='", enrollmentsCSV0.getClassId());
      assertEquals("", enrollmentsCSV0.getSubjectName());
      assertEquals(0, enrollmentsCSV0.getExemptedCount());
      assertEquals(", subjectName='", enrollmentsCSV0.getSubjectCode());
      assertEquals(681, enrollmentsCSV0.getSucceededCount());
      assertEquals(22, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals("", enrollmentsCSV0.getCurriculumCode());
      assertNull(enrollmentsCSV0.getTerm());
      assertEquals(1924, enrollmentsCSV0.getCancelledCount());
      assertEquals((-1), enrollmentsCSV0.getSuspendedCount());
      assertEquals(0, enrollmentsCSV0.getOngoingCount());
      assertNull(enrollmentsCSV0.getCourseCode());
      assertEquals(22, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(69, enrollmentsCSV0.getEnrollmentsCount());
      
      int int0 = enrollmentsCSV0.getSucceededCount();
      assertEquals(681, int0);
      assertEquals(", subjectName='", enrollmentsCSV0.getClassId());
      assertEquals("", enrollmentsCSV0.getSubjectName());
      assertEquals(0, enrollmentsCSV0.getExemptedCount());
      assertEquals(", subjectName='", enrollmentsCSV0.getSubjectCode());
      assertEquals(681, enrollmentsCSV0.getSucceededCount());
      assertEquals(22, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals("", enrollmentsCSV0.getCurriculumCode());
      assertNull(enrollmentsCSV0.getTerm());
      assertEquals(1924, enrollmentsCSV0.getCancelledCount());
      assertEquals((-1), enrollmentsCSV0.getSuspendedCount());
      assertEquals(0, enrollmentsCSV0.getOngoingCount());
      assertNull(enrollmentsCSV0.getCourseCode());
      assertEquals(22, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(69, enrollmentsCSV0.getEnrollmentsCount());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("cU98<V65B", "cU98<V65B", (String) null, (String) null, "cU98<V65B", "hSB.+E<zwYKm;oaSTVI", 0, 0, 0, 0, 1, 1, 0, 0);
      assertNotNull(enrollmentsCSV0);
      assertEquals(0, enrollmentsCSV0.getExemptedCount());
      assertNull(enrollmentsCSV0.getSubjectCode());
      assertEquals("cU98<V65B", enrollmentsCSV0.getCurriculumCode());
      assertEquals("hSB.+E<zwYKm;oaSTVI", enrollmentsCSV0.getClassId());
      assertEquals(1, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals("cU98<V65B", enrollmentsCSV0.getTerm());
      assertEquals(0, enrollmentsCSV0.getSucceededCount());
      assertEquals(0, enrollmentsCSV0.getCancelledCount());
      assertEquals(0, enrollmentsCSV0.getSuspendedCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertNull(enrollmentsCSV0.getSubjectName());
      assertEquals(1, enrollmentsCSV0.getOngoingCount());
      assertEquals("cU98<V65B", enrollmentsCSV0.getCourseCode());
      assertEquals(0, enrollmentsCSV0.getEnrollmentsCount());
      
      String string0 = enrollmentsCSV0.getSubjectName();
      assertNull(string0);
      assertEquals(0, enrollmentsCSV0.getExemptedCount());
      assertNull(enrollmentsCSV0.getSubjectCode());
      assertEquals("cU98<V65B", enrollmentsCSV0.getCurriculumCode());
      assertEquals("hSB.+E<zwYKm;oaSTVI", enrollmentsCSV0.getClassId());
      assertEquals(1, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals("cU98<V65B", enrollmentsCSV0.getTerm());
      assertEquals(0, enrollmentsCSV0.getSucceededCount());
      assertEquals(0, enrollmentsCSV0.getCancelledCount());
      assertEquals(0, enrollmentsCSV0.getSuspendedCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertNull(enrollmentsCSV0.getSubjectName());
      assertEquals(1, enrollmentsCSV0.getOngoingCount());
      assertEquals("cU98<V65B", enrollmentsCSV0.getCourseCode());
      assertEquals(0, enrollmentsCSV0.getEnrollmentsCount());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("", "", "", "", "", "", 0, 0, 0, 0, 0, 0, 0, 0);
      assertNotNull(enrollmentsCSV0);
      assertEquals("", enrollmentsCSV0.getCurriculumCode());
      assertEquals("", enrollmentsCSV0.getSubjectName());
      assertEquals(0, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals("", enrollmentsCSV0.getCourseCode());
      assertEquals(0, enrollmentsCSV0.getExemptedCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(0, enrollmentsCSV0.getOngoingCount());
      assertEquals("", enrollmentsCSV0.getClassId());
      assertEquals("", enrollmentsCSV0.getSubjectCode());
      assertEquals(0, enrollmentsCSV0.getSucceededCount());
      assertEquals(0, enrollmentsCSV0.getSuspendedCount());
      assertEquals("", enrollmentsCSV0.getTerm());
      assertEquals(0, enrollmentsCSV0.getCancelledCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToGradeCount());
      
      String string0 = enrollmentsCSV0.getSubjectName();
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals("", enrollmentsCSV0.getCurriculumCode());
      assertEquals("", enrollmentsCSV0.getSubjectName());
      assertEquals(0, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals("", enrollmentsCSV0.getCourseCode());
      assertEquals(0, enrollmentsCSV0.getExemptedCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(0, enrollmentsCSV0.getOngoingCount());
      assertEquals("", enrollmentsCSV0.getClassId());
      assertEquals("", enrollmentsCSV0.getSubjectCode());
      assertEquals(0, enrollmentsCSV0.getSucceededCount());
      assertEquals(0, enrollmentsCSV0.getSuspendedCount());
      assertEquals("", enrollmentsCSV0.getTerm());
      assertEquals(0, enrollmentsCSV0.getCancelledCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToGradeCount());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV(", subjectName='", ", subjectName='", (String) null, ", subjectName='", "", (String) null, (-189), (-1), (-1052), (-642), (-189), (-642), (-642), (-642));
      assertNotNull(enrollmentsCSV0);
      assertEquals((-642), enrollmentsCSV0.getExemptedCount());
      assertEquals("", enrollmentsCSV0.getTerm());
      assertNull(enrollmentsCSV0.getSubjectCode());
      assertNull(enrollmentsCSV0.getClassId());
      assertEquals(", subjectName='", enrollmentsCSV0.getCourseCode());
      assertEquals((-642), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals((-189), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals((-189), enrollmentsCSV0.getOngoingCount());
      assertEquals((-642), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(", subjectName='", enrollmentsCSV0.getSubjectName());
      assertEquals(", subjectName='", enrollmentsCSV0.getCurriculumCode());
      assertEquals((-1052), enrollmentsCSV0.getCancelledCount());
      assertEquals((-1), enrollmentsCSV0.getSucceededCount());
      assertEquals((-642), enrollmentsCSV0.getSuspendedCount());
      
      String string0 = enrollmentsCSV0.getSubjectCode();
      assertNull(string0);
      assertEquals((-642), enrollmentsCSV0.getExemptedCount());
      assertEquals("", enrollmentsCSV0.getTerm());
      assertNull(enrollmentsCSV0.getSubjectCode());
      assertNull(enrollmentsCSV0.getClassId());
      assertEquals(", subjectName='", enrollmentsCSV0.getCourseCode());
      assertEquals((-642), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals((-189), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals((-189), enrollmentsCSV0.getOngoingCount());
      assertEquals((-642), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(", subjectName='", enrollmentsCSV0.getSubjectName());
      assertEquals(", subjectName='", enrollmentsCSV0.getCurriculumCode());
      assertEquals((-1052), enrollmentsCSV0.getCancelledCount());
      assertEquals((-1), enrollmentsCSV0.getSucceededCount());
      assertEquals((-642), enrollmentsCSV0.getSuspendedCount());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("/#Jv=e@^>6{^i8+nQ", "/#Jv=e@^>6{^i8+nQ", "/#Jv=e@^>6{^i8+nQ", "/#Jv=e@^>6{^i8+nQ", "/#Jv=e@^>6{^i8+nQ", "Uo0`f6i", (-1), (-1), (-1), (-1), (-1), (-1), 0, (-1));
      assertNotNull(enrollmentsCSV0);
      assertEquals("/#Jv=e@^>6{^i8+nQ", enrollmentsCSV0.getTerm());
      assertEquals((-1), enrollmentsCSV0.getOngoingCount());
      assertEquals("/#Jv=e@^>6{^i8+nQ", enrollmentsCSV0.getSubjectName());
      assertEquals((-1), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals("/#Jv=e@^>6{^i8+nQ", enrollmentsCSV0.getSubjectCode());
      assertEquals((-1), enrollmentsCSV0.getSuspendedCount());
      assertEquals("/#Jv=e@^>6{^i8+nQ", enrollmentsCSV0.getCourseCode());
      assertEquals((-1), enrollmentsCSV0.getCancelledCount());
      assertEquals((-1), enrollmentsCSV0.getSucceededCount());
      assertEquals("/#Jv=e@^>6{^i8+nQ", enrollmentsCSV0.getCurriculumCode());
      assertEquals((-1), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals("Uo0`f6i", enrollmentsCSV0.getClassId());
      assertEquals(0, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals((-1), enrollmentsCSV0.getExemptedCount());
      
      String string0 = enrollmentsCSV0.getSubjectCode();
      assertNotNull(string0);
      assertEquals("/#Jv=e@^>6{^i8+nQ", string0);
      assertEquals("/#Jv=e@^>6{^i8+nQ", enrollmentsCSV0.getTerm());
      assertEquals((-1), enrollmentsCSV0.getOngoingCount());
      assertEquals("/#Jv=e@^>6{^i8+nQ", enrollmentsCSV0.getSubjectName());
      assertEquals((-1), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals("/#Jv=e@^>6{^i8+nQ", enrollmentsCSV0.getSubjectCode());
      assertEquals((-1), enrollmentsCSV0.getSuspendedCount());
      assertEquals("/#Jv=e@^>6{^i8+nQ", enrollmentsCSV0.getCourseCode());
      assertEquals((-1), enrollmentsCSV0.getCancelledCount());
      assertEquals((-1), enrollmentsCSV0.getSucceededCount());
      assertEquals("/#Jv=e@^>6{^i8+nQ", enrollmentsCSV0.getCurriculumCode());
      assertEquals((-1), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals("Uo0`f6i", enrollmentsCSV0.getClassId());
      assertEquals(0, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals((-1), enrollmentsCSV0.getExemptedCount());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("GH+", "GH+", "GH+", "LD]j2uB{`dkWCk", "", "_}`4i'K", (-682), (-682), (-682), 1, 0, 125, 0, (-55));
      assertNotNull(enrollmentsCSV0);
      assertEquals((-682), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals("GH+", enrollmentsCSV0.getCourseCode());
      assertEquals(125, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals("_}`4i'K", enrollmentsCSV0.getClassId());
      assertEquals((-682), enrollmentsCSV0.getSucceededCount());
      assertEquals("GH+", enrollmentsCSV0.getCurriculumCode());
      assertEquals(1, enrollmentsCSV0.getExemptedCount());
      assertEquals("", enrollmentsCSV0.getTerm());
      assertEquals("LD]j2uB{`dkWCk", enrollmentsCSV0.getSubjectName());
      assertEquals((-682), enrollmentsCSV0.getCancelledCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(0, enrollmentsCSV0.getOngoingCount());
      assertEquals("GH+", enrollmentsCSV0.getSubjectCode());
      assertEquals((-55), enrollmentsCSV0.getSuspendedCount());
      
      int int0 = enrollmentsCSV0.getOngoingCount();
      assertEquals(0, int0);
      assertEquals((-682), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals("GH+", enrollmentsCSV0.getCourseCode());
      assertEquals(125, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals("_}`4i'K", enrollmentsCSV0.getClassId());
      assertEquals((-682), enrollmentsCSV0.getSucceededCount());
      assertEquals("GH+", enrollmentsCSV0.getCurriculumCode());
      assertEquals(1, enrollmentsCSV0.getExemptedCount());
      assertEquals("", enrollmentsCSV0.getTerm());
      assertEquals("LD]j2uB{`dkWCk", enrollmentsCSV0.getSubjectName());
      assertEquals((-682), enrollmentsCSV0.getCancelledCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(0, enrollmentsCSV0.getOngoingCount());
      assertEquals("GH+", enrollmentsCSV0.getSubjectCode());
      assertEquals((-55), enrollmentsCSV0.getSuspendedCount());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV((String) null, (String) null, (String) null, "o", "", "G}33@5H6pJ[#aX", 699, 699, 699, 0, 699, 699, 301, 0);
      assertNotNull(enrollmentsCSV0);
      assertEquals(699, enrollmentsCSV0.getSucceededCount());
      assertEquals("o", enrollmentsCSV0.getSubjectName());
      assertEquals(699, enrollmentsCSV0.getCancelledCount());
      assertEquals(699, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(0, enrollmentsCSV0.getExemptedCount());
      assertEquals(301, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertNull(enrollmentsCSV0.getCurriculumCode());
      assertEquals("", enrollmentsCSV0.getTerm());
      assertNull(enrollmentsCSV0.getCourseCode());
      assertEquals(0, enrollmentsCSV0.getSuspendedCount());
      assertNull(enrollmentsCSV0.getSubjectCode());
      assertEquals(699, enrollmentsCSV0.getOngoingCount());
      assertEquals(699, enrollmentsCSV0.getEnrollmentsCount());
      
      int int0 = enrollmentsCSV0.getOngoingCount();
      assertEquals(699, int0);
      assertEquals(699, enrollmentsCSV0.getSucceededCount());
      assertEquals("o", enrollmentsCSV0.getSubjectName());
      assertEquals(699, enrollmentsCSV0.getCancelledCount());
      assertEquals(699, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(0, enrollmentsCSV0.getExemptedCount());
      assertEquals(301, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertNull(enrollmentsCSV0.getCurriculumCode());
      assertEquals("", enrollmentsCSV0.getTerm());
      assertNull(enrollmentsCSV0.getCourseCode());
      assertEquals(0, enrollmentsCSV0.getSuspendedCount());
      assertNull(enrollmentsCSV0.getSubjectCode());
      assertEquals(699, enrollmentsCSV0.getOngoingCount());
      assertEquals(699, enrollmentsCSV0.getEnrollmentsCount());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("Z-Pc/[erXw^PwZoL", ", suspendedCount=", ", suspendedCount=", "ZlJ+syV ", ",rcT~y/DiY~<1$|jC", (String) null, 1, 1, (-1), 1, 1, 0, (-2504), 2912);
      assertNotNull(enrollmentsCSV0);
      assertEquals("ZlJ+syV ", enrollmentsCSV0.getSubjectName());
      assertNull(enrollmentsCSV0.getClassId());
      assertEquals("Z-Pc/[erXw^PwZoL", enrollmentsCSV0.getCourseCode());
      assertEquals(1, enrollmentsCSV0.getExemptedCount());
      assertEquals(1, enrollmentsCSV0.getSucceededCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals((-1), enrollmentsCSV0.getCancelledCount());
      assertEquals(", suspendedCount=", enrollmentsCSV0.getCurriculumCode());
      assertEquals(", suspendedCount=", enrollmentsCSV0.getSubjectCode());
      assertEquals(1, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals(2912, enrollmentsCSV0.getSuspendedCount());
      assertEquals(",rcT~y/DiY~<1$|jC", enrollmentsCSV0.getTerm());
      assertEquals((-2504), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(1, enrollmentsCSV0.getOngoingCount());
      
      int int0 = enrollmentsCSV0.getFailedDueToGradeCount();
      assertEquals(0, int0);
      assertEquals("ZlJ+syV ", enrollmentsCSV0.getSubjectName());
      assertNull(enrollmentsCSV0.getClassId());
      assertEquals("Z-Pc/[erXw^PwZoL", enrollmentsCSV0.getCourseCode());
      assertEquals(1, enrollmentsCSV0.getExemptedCount());
      assertEquals(1, enrollmentsCSV0.getSucceededCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals((-1), enrollmentsCSV0.getCancelledCount());
      assertEquals(", suspendedCount=", enrollmentsCSV0.getCurriculumCode());
      assertEquals(", suspendedCount=", enrollmentsCSV0.getSubjectCode());
      assertEquals(1, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals(2912, enrollmentsCSV0.getSuspendedCount());
      assertEquals(",rcT~y/DiY~<1$|jC", enrollmentsCSV0.getTerm());
      assertEquals((-2504), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(1, enrollmentsCSV0.getOngoingCount());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("Gd$?`YyeHv)2?ts]v>", "", ", exemptedCount=", ", exemptedCount=", "Gd$?`YyeHv)2?ts]v>", "Gd$?`YyeHv)2?ts]v>", 593, 593, 593, 0, 0, (-62), (-1825), 3315);
      assertNotNull(enrollmentsCSV0);
      assertEquals("Gd$?`YyeHv)2?ts]v>", enrollmentsCSV0.getClassId());
      assertEquals(593, enrollmentsCSV0.getSucceededCount());
      assertEquals(", exemptedCount=", enrollmentsCSV0.getSubjectCode());
      assertEquals("", enrollmentsCSV0.getCurriculumCode());
      assertEquals(0, enrollmentsCSV0.getExemptedCount());
      assertEquals(593, enrollmentsCSV0.getCancelledCount());
      assertEquals(", exemptedCount=", enrollmentsCSV0.getSubjectName());
      assertEquals(0, enrollmentsCSV0.getOngoingCount());
      assertEquals((-1825), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals("Gd$?`YyeHv)2?ts]v>", enrollmentsCSV0.getCourseCode());
      assertEquals((-62), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(3315, enrollmentsCSV0.getSuspendedCount());
      assertEquals(593, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals("Gd$?`YyeHv)2?ts]v>", enrollmentsCSV0.getTerm());
      
      int int0 = enrollmentsCSV0.getFailedDueToGradeCount();
      assertEquals((-62), int0);
      assertEquals("Gd$?`YyeHv)2?ts]v>", enrollmentsCSV0.getClassId());
      assertEquals(593, enrollmentsCSV0.getSucceededCount());
      assertEquals(", exemptedCount=", enrollmentsCSV0.getSubjectCode());
      assertEquals("", enrollmentsCSV0.getCurriculumCode());
      assertEquals(0, enrollmentsCSV0.getExemptedCount());
      assertEquals(593, enrollmentsCSV0.getCancelledCount());
      assertEquals(", exemptedCount=", enrollmentsCSV0.getSubjectName());
      assertEquals(0, enrollmentsCSV0.getOngoingCount());
      assertEquals((-1825), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals("Gd$?`YyeHv)2?ts]v>", enrollmentsCSV0.getCourseCode());
      assertEquals((-62), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(3315, enrollmentsCSV0.getSuspendedCount());
      assertEquals(593, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals("Gd$?`YyeHv)2?ts]v>", enrollmentsCSV0.getTerm());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("wo:y]&%80+7W#/m", (String) null, "wo:y]&%80+7W#/m", "wo:y]&%80+7W#/m", ".-laL`L]97`m,g'?", "W{kXq-1", (-1020), 0, (-4289), (-4289), 0, (-1020), 0, (-1020));
      assertNotNull(enrollmentsCSV0);
      assertEquals(".-laL`L]97`m,g'?", enrollmentsCSV0.getTerm());
      assertEquals((-1020), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals((-4289), enrollmentsCSV0.getCancelledCount());
      assertEquals((-4289), enrollmentsCSV0.getExemptedCount());
      assertEquals("wo:y]&%80+7W#/m", enrollmentsCSV0.getCourseCode());
      assertEquals((-1020), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals("wo:y]&%80+7W#/m", enrollmentsCSV0.getSubjectCode());
      assertEquals("W{kXq-1", enrollmentsCSV0.getClassId());
      assertNull(enrollmentsCSV0.getCurriculumCode());
      assertEquals("wo:y]&%80+7W#/m", enrollmentsCSV0.getSubjectName());
      assertEquals(0, enrollmentsCSV0.getSucceededCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(0, enrollmentsCSV0.getOngoingCount());
      assertEquals((-1020), enrollmentsCSV0.getSuspendedCount());
      
      int int0 = enrollmentsCSV0.getFailedDueToAbsenceCount();
      assertEquals(0, int0);
      assertEquals(".-laL`L]97`m,g'?", enrollmentsCSV0.getTerm());
      assertEquals((-1020), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals((-4289), enrollmentsCSV0.getCancelledCount());
      assertEquals((-4289), enrollmentsCSV0.getExemptedCount());
      assertEquals("wo:y]&%80+7W#/m", enrollmentsCSV0.getCourseCode());
      assertEquals((-1020), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals("wo:y]&%80+7W#/m", enrollmentsCSV0.getSubjectCode());
      assertEquals("W{kXq-1", enrollmentsCSV0.getClassId());
      assertNull(enrollmentsCSV0.getCurriculumCode());
      assertEquals("wo:y]&%80+7W#/m", enrollmentsCSV0.getSubjectName());
      assertEquals(0, enrollmentsCSV0.getSucceededCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(0, enrollmentsCSV0.getOngoingCount());
      assertEquals((-1020), enrollmentsCSV0.getSuspendedCount());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV((String) null, (String) null, "", "", "", ", suspendedCount=", 0, 0, 0, 0, 21, 0, (-1297), 0);
      assertNotNull(enrollmentsCSV0);
      assertEquals((-1297), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(", suspendedCount=", enrollmentsCSV0.getClassId());
      assertNull(enrollmentsCSV0.getCurriculumCode());
      assertEquals("", enrollmentsCSV0.getSubjectName());
      assertEquals(0, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals(21, enrollmentsCSV0.getOngoingCount());
      assertEquals(0, enrollmentsCSV0.getExemptedCount());
      assertEquals(0, enrollmentsCSV0.getSucceededCount());
      assertNull(enrollmentsCSV0.getCourseCode());
      assertEquals(0, enrollmentsCSV0.getCancelledCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals("", enrollmentsCSV0.getTerm());
      assertEquals(0, enrollmentsCSV0.getSuspendedCount());
      assertEquals("", enrollmentsCSV0.getSubjectCode());
      
      int int0 = enrollmentsCSV0.getFailedDueToAbsenceCount();
      assertEquals((-1297), int0);
      assertEquals((-1297), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(", suspendedCount=", enrollmentsCSV0.getClassId());
      assertNull(enrollmentsCSV0.getCurriculumCode());
      assertEquals("", enrollmentsCSV0.getSubjectName());
      assertEquals(0, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals(21, enrollmentsCSV0.getOngoingCount());
      assertEquals(0, enrollmentsCSV0.getExemptedCount());
      assertEquals(0, enrollmentsCSV0.getSucceededCount());
      assertNull(enrollmentsCSV0.getCourseCode());
      assertEquals(0, enrollmentsCSV0.getCancelledCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals("", enrollmentsCSV0.getTerm());
      assertEquals(0, enrollmentsCSV0.getSuspendedCount());
      assertEquals("", enrollmentsCSV0.getSubjectCode());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("", "", "", "", "", "", 0, 0, 0, 0, 0, 0, 0, 0);
      assertNotNull(enrollmentsCSV0);
      assertEquals("", enrollmentsCSV0.getTerm());
      assertEquals(0, enrollmentsCSV0.getExemptedCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals("", enrollmentsCSV0.getClassId());
      assertEquals("", enrollmentsCSV0.getCurriculumCode());
      assertEquals(0, enrollmentsCSV0.getCancelledCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals("", enrollmentsCSV0.getSubjectCode());
      assertEquals(0, enrollmentsCSV0.getSucceededCount());
      assertEquals("", enrollmentsCSV0.getSubjectName());
      assertEquals(0, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals("", enrollmentsCSV0.getCourseCode());
      assertEquals(0, enrollmentsCSV0.getSuspendedCount());
      assertEquals(0, enrollmentsCSV0.getOngoingCount());
      
      int int0 = enrollmentsCSV0.getExemptedCount();
      assertEquals(0, int0);
      assertEquals("", enrollmentsCSV0.getTerm());
      assertEquals(0, enrollmentsCSV0.getExemptedCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals("", enrollmentsCSV0.getClassId());
      assertEquals("", enrollmentsCSV0.getCurriculumCode());
      assertEquals(0, enrollmentsCSV0.getCancelledCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals("", enrollmentsCSV0.getSubjectCode());
      assertEquals(0, enrollmentsCSV0.getSucceededCount());
      assertEquals("", enrollmentsCSV0.getSubjectName());
      assertEquals(0, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals("", enrollmentsCSV0.getCourseCode());
      assertEquals(0, enrollmentsCSV0.getSuspendedCount());
      assertEquals(0, enrollmentsCSV0.getOngoingCount());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("", (String) null, "i,}(HNG{", "6^", (String) null, "", (-4985), 0, (-4985), (-4985), (-187), 0, (-4985), 2307);
      assertNotNull(enrollmentsCSV0);
      assertEquals((-4985), enrollmentsCSV0.getCancelledCount());
      assertNull(enrollmentsCSV0.getCurriculumCode());
      assertEquals(2307, enrollmentsCSV0.getSuspendedCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals((-4985), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(0, enrollmentsCSV0.getSucceededCount());
      assertEquals("i,}(HNG{", enrollmentsCSV0.getSubjectCode());
      assertEquals((-4985), enrollmentsCSV0.getExemptedCount());
      assertEquals("", enrollmentsCSV0.getClassId());
      assertEquals("6^", enrollmentsCSV0.getSubjectName());
      assertNull(enrollmentsCSV0.getTerm());
      assertEquals((-4985), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals((-187), enrollmentsCSV0.getOngoingCount());
      assertEquals("", enrollmentsCSV0.getCourseCode());
      
      int int0 = enrollmentsCSV0.getExemptedCount();
      assertEquals((-4985), int0);
      assertEquals((-4985), enrollmentsCSV0.getCancelledCount());
      assertNull(enrollmentsCSV0.getCurriculumCode());
      assertEquals(2307, enrollmentsCSV0.getSuspendedCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals((-4985), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(0, enrollmentsCSV0.getSucceededCount());
      assertEquals("i,}(HNG{", enrollmentsCSV0.getSubjectCode());
      assertEquals((-4985), enrollmentsCSV0.getExemptedCount());
      assertEquals("", enrollmentsCSV0.getClassId());
      assertEquals("6^", enrollmentsCSV0.getSubjectName());
      assertNull(enrollmentsCSV0.getTerm());
      assertEquals((-4985), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals((-187), enrollmentsCSV0.getOngoingCount());
      assertEquals("", enrollmentsCSV0.getCourseCode());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("]%!", "s*", "]%!", (String) null, ", suspendedCount=", "n#NXSlVOVsY:bi\"Ui", 0, 0, 0, (-3106), (-1), (-1305), 1158, 1399);
      assertNotNull(enrollmentsCSV0);
      assertEquals("]%!", enrollmentsCSV0.getCourseCode());
      assertEquals(1158, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(0, enrollmentsCSV0.getCancelledCount());
      assertEquals(0, enrollmentsCSV0.getSucceededCount());
      assertEquals((-3106), enrollmentsCSV0.getExemptedCount());
      assertEquals("n#NXSlVOVsY:bi\"Ui", enrollmentsCSV0.getClassId());
      assertEquals(", suspendedCount=", enrollmentsCSV0.getTerm());
      assertEquals(1399, enrollmentsCSV0.getSuspendedCount());
      assertEquals("s*", enrollmentsCSV0.getCurriculumCode());
      assertEquals("]%!", enrollmentsCSV0.getSubjectCode());
      assertEquals(0, enrollmentsCSV0.getEnrollmentsCount());
      assertNull(enrollmentsCSV0.getSubjectName());
      assertEquals((-1), enrollmentsCSV0.getOngoingCount());
      assertEquals((-1305), enrollmentsCSV0.getFailedDueToGradeCount());
      
      int int0 = enrollmentsCSV0.getEnrollmentsCount();
      assertEquals(0, int0);
      assertEquals("]%!", enrollmentsCSV0.getCourseCode());
      assertEquals(1158, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(0, enrollmentsCSV0.getCancelledCount());
      assertEquals(0, enrollmentsCSV0.getSucceededCount());
      assertEquals((-3106), enrollmentsCSV0.getExemptedCount());
      assertEquals("n#NXSlVOVsY:bi\"Ui", enrollmentsCSV0.getClassId());
      assertEquals(", suspendedCount=", enrollmentsCSV0.getTerm());
      assertEquals(1399, enrollmentsCSV0.getSuspendedCount());
      assertEquals("s*", enrollmentsCSV0.getCurriculumCode());
      assertEquals("]%!", enrollmentsCSV0.getSubjectCode());
      assertEquals(0, enrollmentsCSV0.getEnrollmentsCount());
      assertNull(enrollmentsCSV0.getSubjectName());
      assertEquals((-1), enrollmentsCSV0.getOngoingCount());
      assertEquals((-1305), enrollmentsCSV0.getFailedDueToGradeCount());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("2+f~$kSD7z.HBI", "2+f~$kSD7z.HBI", "2+f~$kSD7z.HBI", (String) null, (String) null, "", (-1), (-1), (-1), (-1), 0, (-3131), (-1), (-985));
      assertNotNull(enrollmentsCSV0);
      assertEquals("2+f~$kSD7z.HBI", enrollmentsCSV0.getSubjectCode());
      assertEquals((-985), enrollmentsCSV0.getSuspendedCount());
      assertEquals("2+f~$kSD7z.HBI", enrollmentsCSV0.getCurriculumCode());
      assertEquals((-1), enrollmentsCSV0.getCancelledCount());
      assertEquals("2+f~$kSD7z.HBI", enrollmentsCSV0.getCourseCode());
      assertEquals("", enrollmentsCSV0.getClassId());
      assertEquals((-1), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertNull(enrollmentsCSV0.getTerm());
      assertEquals((-1), enrollmentsCSV0.getExemptedCount());
      assertEquals((-1), enrollmentsCSV0.getSucceededCount());
      assertEquals((-1), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals(0, enrollmentsCSV0.getOngoingCount());
      assertNull(enrollmentsCSV0.getSubjectName());
      assertEquals((-3131), enrollmentsCSV0.getFailedDueToGradeCount());
      
      int int0 = enrollmentsCSV0.getEnrollmentsCount();
      assertEquals((-1), int0);
      assertEquals("2+f~$kSD7z.HBI", enrollmentsCSV0.getSubjectCode());
      assertEquals((-985), enrollmentsCSV0.getSuspendedCount());
      assertEquals("2+f~$kSD7z.HBI", enrollmentsCSV0.getCurriculumCode());
      assertEquals((-1), enrollmentsCSV0.getCancelledCount());
      assertEquals("2+f~$kSD7z.HBI", enrollmentsCSV0.getCourseCode());
      assertEquals("", enrollmentsCSV0.getClassId());
      assertEquals((-1), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertNull(enrollmentsCSV0.getTerm());
      assertEquals((-1), enrollmentsCSV0.getExemptedCount());
      assertEquals((-1), enrollmentsCSV0.getSucceededCount());
      assertEquals((-1), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals(0, enrollmentsCSV0.getOngoingCount());
      assertNull(enrollmentsCSV0.getSubjectName());
      assertEquals((-3131), enrollmentsCSV0.getFailedDueToGradeCount());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV((String) null, (String) null, (String) null, (String) null, (String) null, (String) null, 0, 125, 125, 0, 0, 0, 125, 39);
      assertNotNull(enrollmentsCSV0);
      assertNull(enrollmentsCSV0.getClassId());
      assertEquals(0, enrollmentsCSV0.getOngoingCount());
      assertEquals(125, enrollmentsCSV0.getCancelledCount());
      assertEquals(125, enrollmentsCSV0.getSucceededCount());
      assertEquals(125, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertNull(enrollmentsCSV0.getCourseCode());
      assertNull(enrollmentsCSV0.getTerm());
      assertEquals(0, enrollmentsCSV0.getFailedDueToGradeCount());
      assertNull(enrollmentsCSV0.getSubjectCode());
      assertNull(enrollmentsCSV0.getCurriculumCode());
      assertNull(enrollmentsCSV0.getSubjectName());
      assertEquals(39, enrollmentsCSV0.getSuspendedCount());
      assertEquals(0, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals(0, enrollmentsCSV0.getExemptedCount());
      
      String string0 = enrollmentsCSV0.getCurriculumCode();
      assertNull(string0);
      assertNull(enrollmentsCSV0.getClassId());
      assertEquals(0, enrollmentsCSV0.getOngoingCount());
      assertEquals(125, enrollmentsCSV0.getCancelledCount());
      assertEquals(125, enrollmentsCSV0.getSucceededCount());
      assertEquals(125, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertNull(enrollmentsCSV0.getCourseCode());
      assertNull(enrollmentsCSV0.getTerm());
      assertEquals(0, enrollmentsCSV0.getFailedDueToGradeCount());
      assertNull(enrollmentsCSV0.getSubjectCode());
      assertNull(enrollmentsCSV0.getCurriculumCode());
      assertNull(enrollmentsCSV0.getSubjectName());
      assertEquals(39, enrollmentsCSV0.getSuspendedCount());
      assertEquals(0, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals(0, enrollmentsCSV0.getExemptedCount());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("Gd$?`YyeHv)2?ts]v>", "", ", exemptedCount=", ", exemptedCount=", "Gd$?`YyeHv)2?ts]v>", "Gd$?`YyeHv)2?ts]v>", 593, 593, 593, 0, 0, (-62), (-1825), 3315);
      assertNotNull(enrollmentsCSV0);
      assertEquals("Gd$?`YyeHv)2?ts]v>", enrollmentsCSV0.getCourseCode());
      assertEquals((-1825), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(", exemptedCount=", enrollmentsCSV0.getSubjectCode());
      assertEquals("Gd$?`YyeHv)2?ts]v>", enrollmentsCSV0.getClassId());
      assertEquals(0, enrollmentsCSV0.getExemptedCount());
      assertEquals(593, enrollmentsCSV0.getCancelledCount());
      assertEquals(593, enrollmentsCSV0.getSucceededCount());
      assertEquals(3315, enrollmentsCSV0.getSuspendedCount());
      assertEquals("", enrollmentsCSV0.getCurriculumCode());
      assertEquals("Gd$?`YyeHv)2?ts]v>", enrollmentsCSV0.getTerm());
      assertEquals(593, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals((-62), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(0, enrollmentsCSV0.getOngoingCount());
      assertEquals(", exemptedCount=", enrollmentsCSV0.getSubjectName());
      
      String string0 = enrollmentsCSV0.getCurriculumCode();
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals("Gd$?`YyeHv)2?ts]v>", enrollmentsCSV0.getCourseCode());
      assertEquals((-1825), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(", exemptedCount=", enrollmentsCSV0.getSubjectCode());
      assertEquals("Gd$?`YyeHv)2?ts]v>", enrollmentsCSV0.getClassId());
      assertEquals(0, enrollmentsCSV0.getExemptedCount());
      assertEquals(593, enrollmentsCSV0.getCancelledCount());
      assertEquals(593, enrollmentsCSV0.getSucceededCount());
      assertEquals(3315, enrollmentsCSV0.getSuspendedCount());
      assertEquals("", enrollmentsCSV0.getCurriculumCode());
      assertEquals("Gd$?`YyeHv)2?ts]v>", enrollmentsCSV0.getTerm());
      assertEquals(593, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals((-62), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(0, enrollmentsCSV0.getOngoingCount());
      assertEquals(", exemptedCount=", enrollmentsCSV0.getSubjectName());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV(", subjectName='", ", subjectName='", (String) null, ", subjectName='", "", (String) null, (-189), (-1), (-1052), (-642), (-189), (-642), (-642), (-642));
      assertNotNull(enrollmentsCSV0);
      assertEquals(", subjectName='", enrollmentsCSV0.getSubjectName());
      assertEquals((-642), enrollmentsCSV0.getExemptedCount());
      assertNull(enrollmentsCSV0.getClassId());
      assertEquals(", subjectName='", enrollmentsCSV0.getCourseCode());
      assertEquals((-189), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals((-642), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals((-642), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals((-1), enrollmentsCSV0.getSucceededCount());
      assertEquals(", subjectName='", enrollmentsCSV0.getCurriculumCode());
      assertNull(enrollmentsCSV0.getSubjectCode());
      assertEquals("", enrollmentsCSV0.getTerm());
      assertEquals((-642), enrollmentsCSV0.getSuspendedCount());
      assertEquals((-189), enrollmentsCSV0.getOngoingCount());
      assertEquals((-1052), enrollmentsCSV0.getCancelledCount());
      
      enrollmentsCSV0.setCourseCode((String) null);
      assertEquals(", subjectName='", enrollmentsCSV0.getSubjectName());
      assertEquals((-642), enrollmentsCSV0.getExemptedCount());
      assertNull(enrollmentsCSV0.getClassId());
      assertEquals((-189), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals((-642), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals((-642), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals((-1), enrollmentsCSV0.getSucceededCount());
      assertEquals(", subjectName='", enrollmentsCSV0.getCurriculumCode());
      assertNull(enrollmentsCSV0.getSubjectCode());
      assertEquals("", enrollmentsCSV0.getTerm());
      assertEquals((-642), enrollmentsCSV0.getSuspendedCount());
      assertEquals((-189), enrollmentsCSV0.getOngoingCount());
      assertNull(enrollmentsCSV0.getCourseCode());
      assertEquals((-1052), enrollmentsCSV0.getCancelledCount());
      
      String string0 = enrollmentsCSV0.getCourseCode();
      assertNull(string0);
      assertEquals(", subjectName='", enrollmentsCSV0.getSubjectName());
      assertEquals((-642), enrollmentsCSV0.getExemptedCount());
      assertNull(enrollmentsCSV0.getClassId());
      assertEquals((-189), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals((-642), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals((-642), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals((-1), enrollmentsCSV0.getSucceededCount());
      assertEquals(", subjectName='", enrollmentsCSV0.getCurriculumCode());
      assertNull(enrollmentsCSV0.getSubjectCode());
      assertEquals("", enrollmentsCSV0.getTerm());
      assertEquals((-642), enrollmentsCSV0.getSuspendedCount());
      assertEquals((-189), enrollmentsCSV0.getOngoingCount());
      assertNull(enrollmentsCSV0.getCourseCode());
      assertEquals((-1052), enrollmentsCSV0.getCancelledCount());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("", "", "q", "", "X.dCg0]_(+=oA", "", (-865), 2923, 1733, 1777, 735, (-865), 1, (-865));
      assertNotNull(enrollmentsCSV0);
      assertEquals("q", enrollmentsCSV0.getSubjectCode());
      assertEquals((-865), enrollmentsCSV0.getSuspendedCount());
      assertEquals((-865), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(1, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals("X.dCg0]_(+=oA", enrollmentsCSV0.getTerm());
      assertEquals("", enrollmentsCSV0.getCourseCode());
      assertEquals(1733, enrollmentsCSV0.getCancelledCount());
      assertEquals(1777, enrollmentsCSV0.getExemptedCount());
      assertEquals(735, enrollmentsCSV0.getOngoingCount());
      assertEquals("", enrollmentsCSV0.getCurriculumCode());
      assertEquals((-865), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals("", enrollmentsCSV0.getSubjectName());
      assertEquals(2923, enrollmentsCSV0.getSucceededCount());
      assertEquals("", enrollmentsCSV0.getClassId());
      
      String string0 = enrollmentsCSV0.getCourseCode();
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals("q", enrollmentsCSV0.getSubjectCode());
      assertEquals((-865), enrollmentsCSV0.getSuspendedCount());
      assertEquals((-865), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(1, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals("X.dCg0]_(+=oA", enrollmentsCSV0.getTerm());
      assertEquals("", enrollmentsCSV0.getCourseCode());
      assertEquals(1733, enrollmentsCSV0.getCancelledCount());
      assertEquals(1777, enrollmentsCSV0.getExemptedCount());
      assertEquals(735, enrollmentsCSV0.getOngoingCount());
      assertEquals("", enrollmentsCSV0.getCurriculumCode());
      assertEquals((-865), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals("", enrollmentsCSV0.getSubjectName());
      assertEquals(2923, enrollmentsCSV0.getSucceededCount());
      assertEquals("", enrollmentsCSV0.getClassId());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("t", "", "", "t", "", (String) null, (-1), (-1), (-1), (-1410), (-1410), (-1), 0, (-1410));
      assertNotNull(enrollmentsCSV0);
      assertEquals("", enrollmentsCSV0.getCurriculumCode());
      assertEquals("t", enrollmentsCSV0.getSubjectName());
      assertEquals((-1), enrollmentsCSV0.getCancelledCount());
      assertEquals((-1), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals((-1), enrollmentsCSV0.getSucceededCount());
      assertEquals("", enrollmentsCSV0.getSubjectCode());
      assertEquals((-1410), enrollmentsCSV0.getSuspendedCount());
      assertEquals((-1), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals((-1410), enrollmentsCSV0.getOngoingCount());
      assertEquals("", enrollmentsCSV0.getTerm());
      assertEquals((-1410), enrollmentsCSV0.getExemptedCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals("t", enrollmentsCSV0.getCourseCode());
      assertNull(enrollmentsCSV0.getClassId());
      
      String string0 = enrollmentsCSV0.getClassId();
      assertNull(string0);
      assertEquals("", enrollmentsCSV0.getCurriculumCode());
      assertEquals("t", enrollmentsCSV0.getSubjectName());
      assertEquals((-1), enrollmentsCSV0.getCancelledCount());
      assertEquals((-1), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals((-1), enrollmentsCSV0.getSucceededCount());
      assertEquals("", enrollmentsCSV0.getSubjectCode());
      assertEquals((-1410), enrollmentsCSV0.getSuspendedCount());
      assertEquals((-1), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals((-1410), enrollmentsCSV0.getOngoingCount());
      assertEquals("", enrollmentsCSV0.getTerm());
      assertEquals((-1410), enrollmentsCSV0.getExemptedCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals("t", enrollmentsCSV0.getCourseCode());
      assertNull(enrollmentsCSV0.getClassId());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("", "", "", "", "", "x@;(C\"sWL", 938, 906, 938, 1460, 906, 1, 1, 906);
      assertNotNull(enrollmentsCSV0);
      assertEquals(1, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals("", enrollmentsCSV0.getCourseCode());
      assertEquals(1460, enrollmentsCSV0.getExemptedCount());
      assertEquals(1, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(906, enrollmentsCSV0.getOngoingCount());
      assertEquals(906, enrollmentsCSV0.getSucceededCount());
      assertEquals(906, enrollmentsCSV0.getSuspendedCount());
      assertEquals(938, enrollmentsCSV0.getCancelledCount());
      assertEquals("", enrollmentsCSV0.getSubjectName());
      assertEquals("", enrollmentsCSV0.getSubjectCode());
      assertEquals("", enrollmentsCSV0.getCurriculumCode());
      assertEquals("", enrollmentsCSV0.getTerm());
      assertEquals(938, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals("x@;(C\"sWL", enrollmentsCSV0.getClassId());
      
      String string0 = enrollmentsCSV0.getClassId();
      assertNotNull(string0);
      assertEquals("x@;(C\"sWL", string0);
      assertEquals(1, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals("", enrollmentsCSV0.getCourseCode());
      assertEquals(1460, enrollmentsCSV0.getExemptedCount());
      assertEquals(1, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(906, enrollmentsCSV0.getOngoingCount());
      assertEquals(906, enrollmentsCSV0.getSucceededCount());
      assertEquals(906, enrollmentsCSV0.getSuspendedCount());
      assertEquals(938, enrollmentsCSV0.getCancelledCount());
      assertEquals("", enrollmentsCSV0.getSubjectName());
      assertEquals("", enrollmentsCSV0.getSubjectCode());
      assertEquals("", enrollmentsCSV0.getCurriculumCode());
      assertEquals("", enrollmentsCSV0.getTerm());
      assertEquals(938, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals("x@;(C\"sWL", enrollmentsCSV0.getClassId());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("", "", "", "", ">X1?u1/Ujc_5+", ";i_6UI|'", 0, (-86), 0, (-86), 0, 379, 379, 379);
      assertNotNull(enrollmentsCSV0);
      assertEquals("", enrollmentsCSV0.getSubjectName());
      assertEquals((-86), enrollmentsCSV0.getSucceededCount());
      assertEquals(0, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals(379, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals("", enrollmentsCSV0.getCurriculumCode());
      assertEquals("", enrollmentsCSV0.getSubjectCode());
      assertEquals(0, enrollmentsCSV0.getCancelledCount());
      assertEquals(0, enrollmentsCSV0.getOngoingCount());
      assertEquals((-86), enrollmentsCSV0.getExemptedCount());
      assertEquals(379, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(379, enrollmentsCSV0.getSuspendedCount());
      assertEquals("", enrollmentsCSV0.getCourseCode());
      assertEquals(";i_6UI|'", enrollmentsCSV0.getClassId());
      assertEquals(">X1?u1/Ujc_5+", enrollmentsCSV0.getTerm());
      
      int int0 = enrollmentsCSV0.getCancelledCount();
      assertEquals(0, int0);
      assertEquals("", enrollmentsCSV0.getSubjectName());
      assertEquals((-86), enrollmentsCSV0.getSucceededCount());
      assertEquals(0, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals(379, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals("", enrollmentsCSV0.getCurriculumCode());
      assertEquals("", enrollmentsCSV0.getSubjectCode());
      assertEquals(0, enrollmentsCSV0.getCancelledCount());
      assertEquals(0, enrollmentsCSV0.getOngoingCount());
      assertEquals((-86), enrollmentsCSV0.getExemptedCount());
      assertEquals(379, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(379, enrollmentsCSV0.getSuspendedCount());
      assertEquals("", enrollmentsCSV0.getCourseCode());
      assertEquals(";i_6UI|'", enrollmentsCSV0.getClassId());
      assertEquals(">X1?u1/Ujc_5+", enrollmentsCSV0.getTerm());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV(", subjectCode='", "", ", subjectCode='", "", "", ", ongoingCount=", 2868, 2868, 2868, 2666, (-1216), (-251), 0, (-4388));
      assertNotNull(enrollmentsCSV0);
      assertEquals("", enrollmentsCSV0.getSubjectName());
      assertEquals("", enrollmentsCSV0.getTerm());
      assertEquals("", enrollmentsCSV0.getCurriculumCode());
      assertEquals((-251), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(", ongoingCount=", enrollmentsCSV0.getClassId());
      assertEquals((-1216), enrollmentsCSV0.getOngoingCount());
      assertEquals(", subjectCode='", enrollmentsCSV0.getSubjectCode());
      assertEquals(0, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(2666, enrollmentsCSV0.getExemptedCount());
      assertEquals((-4388), enrollmentsCSV0.getSuspendedCount());
      assertEquals(", subjectCode='", enrollmentsCSV0.getCourseCode());
      assertEquals(2868, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals(2868, enrollmentsCSV0.getCancelledCount());
      assertEquals(2868, enrollmentsCSV0.getSucceededCount());
      
      int int0 = enrollmentsCSV0.getCancelledCount();
      assertEquals(2868, int0);
      assertEquals("", enrollmentsCSV0.getSubjectName());
      assertEquals("", enrollmentsCSV0.getTerm());
      assertEquals("", enrollmentsCSV0.getCurriculumCode());
      assertEquals((-251), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(", ongoingCount=", enrollmentsCSV0.getClassId());
      assertEquals((-1216), enrollmentsCSV0.getOngoingCount());
      assertEquals(", subjectCode='", enrollmentsCSV0.getSubjectCode());
      assertEquals(0, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(2666, enrollmentsCSV0.getExemptedCount());
      assertEquals((-4388), enrollmentsCSV0.getSuspendedCount());
      assertEquals(", subjectCode='", enrollmentsCSV0.getCourseCode());
      assertEquals(2868, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals(2868, enrollmentsCSV0.getCancelledCount());
      assertEquals(2868, enrollmentsCSV0.getSucceededCount());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV(", term='", ", term='", ", term='", ", term='", "l15\"p{l|J'5@", ", subjectCode='", 0, 0, 0, 0, 0, 0, 0, 0);
      assertNotNull(enrollmentsCSV0);
      assertEquals("l15\"p{l|J'5@", enrollmentsCSV0.getTerm());
      assertEquals(", term='", enrollmentsCSV0.getSubjectName());
      assertEquals(0, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(0, enrollmentsCSV0.getExemptedCount());
      assertEquals(", term='", enrollmentsCSV0.getCourseCode());
      assertEquals(0, enrollmentsCSV0.getOngoingCount());
      assertEquals(", subjectCode='", enrollmentsCSV0.getClassId());
      assertEquals(0, enrollmentsCSV0.getCancelledCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(0, enrollmentsCSV0.getSuspendedCount());
      assertEquals(", term='", enrollmentsCSV0.getCurriculumCode());
      assertEquals(", term='", enrollmentsCSV0.getSubjectCode());
      assertEquals(0, enrollmentsCSV0.getSucceededCount());
      
      EnrollmentsCSV enrollmentsCSV1 = new EnrollmentsCSV(", subjectCode='", "l15\"p{l|J'5@", ", curriculumCode='", "", "", "", 0, 0, 125, 125, (-1), 0, 0, 0);
      assertFalse(enrollmentsCSV1.equals((Object)enrollmentsCSV0));
      assertNotNull(enrollmentsCSV1);
      assertEquals(125, enrollmentsCSV1.getCancelledCount());
      assertEquals(0, enrollmentsCSV1.getSucceededCount());
      assertEquals(0, enrollmentsCSV1.getFailedDueToAbsenceCount());
      assertEquals((-1), enrollmentsCSV1.getOngoingCount());
      assertEquals(0, enrollmentsCSV1.getFailedDueToGradeCount());
      assertEquals(", curriculumCode='", enrollmentsCSV1.getSubjectCode());
      assertEquals("", enrollmentsCSV1.getClassId());
      assertEquals(", subjectCode='", enrollmentsCSV1.getCourseCode());
      assertEquals("l15\"p{l|J'5@", enrollmentsCSV1.getCurriculumCode());
      assertEquals(125, enrollmentsCSV1.getExemptedCount());
      assertEquals("", enrollmentsCSV1.getSubjectName());
      assertEquals(0, enrollmentsCSV1.getEnrollmentsCount());
      assertEquals("", enrollmentsCSV1.getTerm());
      assertEquals(0, enrollmentsCSV1.getSuspendedCount());
      
      int int0 = enrollmentsCSV0.compareTo(enrollmentsCSV1);
      assertNotSame(enrollmentsCSV0, enrollmentsCSV1);
      assertNotSame(enrollmentsCSV1, enrollmentsCSV0);
      assertFalse(enrollmentsCSV0.equals((Object)enrollmentsCSV1));
      assertFalse(enrollmentsCSV1.equals((Object)enrollmentsCSV0));
      assertEquals(1, int0);
      assertEquals("l15\"p{l|J'5@", enrollmentsCSV0.getTerm());
      assertEquals(", term='", enrollmentsCSV0.getSubjectName());
      assertEquals(0, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(0, enrollmentsCSV0.getExemptedCount());
      assertEquals(", term='", enrollmentsCSV0.getCourseCode());
      assertEquals(0, enrollmentsCSV0.getOngoingCount());
      assertEquals(", subjectCode='", enrollmentsCSV0.getClassId());
      assertEquals(0, enrollmentsCSV0.getCancelledCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(0, enrollmentsCSV0.getSuspendedCount());
      assertEquals(", term='", enrollmentsCSV0.getCurriculumCode());
      assertEquals(", term='", enrollmentsCSV0.getSubjectCode());
      assertEquals(0, enrollmentsCSV0.getSucceededCount());
      assertEquals(125, enrollmentsCSV1.getCancelledCount());
      assertEquals(0, enrollmentsCSV1.getSucceededCount());
      assertEquals(0, enrollmentsCSV1.getFailedDueToAbsenceCount());
      assertEquals((-1), enrollmentsCSV1.getOngoingCount());
      assertEquals(0, enrollmentsCSV1.getFailedDueToGradeCount());
      assertEquals(", curriculumCode='", enrollmentsCSV1.getSubjectCode());
      assertEquals("", enrollmentsCSV1.getClassId());
      assertEquals(", subjectCode='", enrollmentsCSV1.getCourseCode());
      assertEquals("l15\"p{l|J'5@", enrollmentsCSV1.getCurriculumCode());
      assertEquals(125, enrollmentsCSV1.getExemptedCount());
      assertEquals("", enrollmentsCSV1.getSubjectName());
      assertEquals(0, enrollmentsCSV1.getEnrollmentsCount());
      assertEquals("", enrollmentsCSV1.getTerm());
      assertEquals(0, enrollmentsCSV1.getSuspendedCount());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("/#Jv=e@^>6{^i8+nQ", "/#Jv=e@^>6{^i8+nQ", "/#Jv=e@^>6{^i8+nQ", "/#Jv=e@^>6{^i8+nQ", "/#Jv=e@^>6{^i8+nQ", "Uo0`f6i", (-1), (-1), (-1), (-1), (-1), (-1), 0, (-1));
      assertNotNull(enrollmentsCSV0);
      assertEquals("/#Jv=e@^>6{^i8+nQ", enrollmentsCSV0.getCurriculumCode());
      assertEquals((-1), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals("/#Jv=e@^>6{^i8+nQ", enrollmentsCSV0.getSubjectCode());
      assertEquals("/#Jv=e@^>6{^i8+nQ", enrollmentsCSV0.getTerm());
      assertEquals("/#Jv=e@^>6{^i8+nQ", enrollmentsCSV0.getCourseCode());
      assertEquals("/#Jv=e@^>6{^i8+nQ", enrollmentsCSV0.getSubjectName());
      assertEquals((-1), enrollmentsCSV0.getSucceededCount());
      assertEquals((-1), enrollmentsCSV0.getCancelledCount());
      assertEquals((-1), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals((-1), enrollmentsCSV0.getSuspendedCount());
      assertEquals((-1), enrollmentsCSV0.getOngoingCount());
      assertEquals((-1), enrollmentsCSV0.getExemptedCount());
      assertEquals("Uo0`f6i", enrollmentsCSV0.getClassId());
      
      EnrollmentsCSV enrollmentsCSV1 = new EnrollmentsCSV("Uo0`f6i", "Uo0`f6i", "", "#7", "", "/#Jv=e@^>6{^i8+nQ", 0, (-1), (-1), (-1), (-1), (-1), (-745), (-1));
      assertFalse(enrollmentsCSV1.equals((Object)enrollmentsCSV0));
      assertNotNull(enrollmentsCSV1);
      assertEquals((-1), enrollmentsCSV1.getExemptedCount());
      assertEquals(0, enrollmentsCSV1.getEnrollmentsCount());
      assertEquals("", enrollmentsCSV1.getTerm());
      assertEquals("Uo0`f6i", enrollmentsCSV1.getCurriculumCode());
      assertEquals((-745), enrollmentsCSV1.getFailedDueToAbsenceCount());
      assertEquals("", enrollmentsCSV1.getSubjectCode());
      assertEquals("Uo0`f6i", enrollmentsCSV1.getCourseCode());
      assertEquals("#7", enrollmentsCSV1.getSubjectName());
      assertEquals((-1), enrollmentsCSV1.getCancelledCount());
      assertEquals((-1), enrollmentsCSV1.getFailedDueToGradeCount());
      assertEquals((-1), enrollmentsCSV1.getSuspendedCount());
      assertEquals((-1), enrollmentsCSV1.getSucceededCount());
      assertEquals((-1), enrollmentsCSV1.getOngoingCount());
      assertEquals("/#Jv=e@^>6{^i8+nQ", enrollmentsCSV1.getClassId());
      
      int int0 = enrollmentsCSV0.compareTo(enrollmentsCSV1);
      assertNotSame(enrollmentsCSV0, enrollmentsCSV1);
      assertNotSame(enrollmentsCSV1, enrollmentsCSV0);
      assertFalse(enrollmentsCSV0.equals((Object)enrollmentsCSV1));
      assertFalse(enrollmentsCSV1.equals((Object)enrollmentsCSV0));
      assertEquals((-38), int0);
      assertEquals("/#Jv=e@^>6{^i8+nQ", enrollmentsCSV0.getCurriculumCode());
      assertEquals((-1), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals("/#Jv=e@^>6{^i8+nQ", enrollmentsCSV0.getSubjectCode());
      assertEquals("/#Jv=e@^>6{^i8+nQ", enrollmentsCSV0.getTerm());
      assertEquals("/#Jv=e@^>6{^i8+nQ", enrollmentsCSV0.getCourseCode());
      assertEquals("/#Jv=e@^>6{^i8+nQ", enrollmentsCSV0.getSubjectName());
      assertEquals((-1), enrollmentsCSV0.getSucceededCount());
      assertEquals((-1), enrollmentsCSV0.getCancelledCount());
      assertEquals((-1), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals((-1), enrollmentsCSV0.getSuspendedCount());
      assertEquals((-1), enrollmentsCSV0.getOngoingCount());
      assertEquals((-1), enrollmentsCSV0.getExemptedCount());
      assertEquals("Uo0`f6i", enrollmentsCSV0.getClassId());
      assertEquals((-1), enrollmentsCSV1.getExemptedCount());
      assertEquals(0, enrollmentsCSV1.getEnrollmentsCount());
      assertEquals("", enrollmentsCSV1.getTerm());
      assertEquals("Uo0`f6i", enrollmentsCSV1.getCurriculumCode());
      assertEquals((-745), enrollmentsCSV1.getFailedDueToAbsenceCount());
      assertEquals("", enrollmentsCSV1.getSubjectCode());
      assertEquals("Uo0`f6i", enrollmentsCSV1.getCourseCode());
      assertEquals("#7", enrollmentsCSV1.getSubjectName());
      assertEquals((-1), enrollmentsCSV1.getCancelledCount());
      assertEquals((-1), enrollmentsCSV1.getFailedDueToGradeCount());
      assertEquals((-1), enrollmentsCSV1.getSuspendedCount());
      assertEquals((-1), enrollmentsCSV1.getSucceededCount());
      assertEquals((-1), enrollmentsCSV1.getOngoingCount());
      assertEquals("/#Jv=e@^>6{^i8+nQ", enrollmentsCSV1.getClassId());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("", "", "", "", (String) null, "OR+'f5LciVC|'k7YqbF", 3127, 3127, 3127, 3127, 3127, 0, (-1), 1);
      assertNotNull(enrollmentsCSV0);
      assertEquals(3127, enrollmentsCSV0.getOngoingCount());
      assertEquals(3127, enrollmentsCSV0.getCancelledCount());
      assertEquals(3127, enrollmentsCSV0.getSucceededCount());
      assertNull(enrollmentsCSV0.getTerm());
      assertEquals("", enrollmentsCSV0.getSubjectCode());
      assertEquals("OR+'f5LciVC|'k7YqbF", enrollmentsCSV0.getClassId());
      assertEquals(0, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(3127, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals(3127, enrollmentsCSV0.getExemptedCount());
      assertEquals("", enrollmentsCSV0.getCurriculumCode());
      assertEquals(1, enrollmentsCSV0.getSuspendedCount());
      assertEquals("", enrollmentsCSV0.getSubjectName());
      assertEquals((-1), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals("", enrollmentsCSV0.getCourseCode());
      
      // Undeclared exception!
      try { 
        enrollmentsCSV0.compareTo((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.api.http.response.enrollment.EnrollmentsCSV", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("", "(`]k$J,2wRbF]~uc{8,", "", "aw1C~2{EUO6,pVTV==4", "", "(`]k$J,2wRbF]~uc{8,", (-1193), (-1193), (-1193), (-1193), (-1193), (-2092), (-2092), (-2092));
      assertNotNull(enrollmentsCSV0);
      assertEquals((-1193), enrollmentsCSV0.getCancelledCount());
      assertEquals((-1193), enrollmentsCSV0.getSucceededCount());
      assertEquals("(`]k$J,2wRbF]~uc{8,", enrollmentsCSV0.getClassId());
      assertEquals((-2092), enrollmentsCSV0.getSuspendedCount());
      assertEquals((-2092), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals("", enrollmentsCSV0.getSubjectCode());
      assertEquals((-1193), enrollmentsCSV0.getOngoingCount());
      assertEquals("", enrollmentsCSV0.getTerm());
      assertEquals((-1193), enrollmentsCSV0.getExemptedCount());
      assertEquals((-1193), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals("(`]k$J,2wRbF]~uc{8,", enrollmentsCSV0.getCurriculumCode());
      assertEquals("aw1C~2{EUO6,pVTV==4", enrollmentsCSV0.getSubjectName());
      assertEquals("", enrollmentsCSV0.getCourseCode());
      assertEquals((-2092), enrollmentsCSV0.getFailedDueToGradeCount());
      
      // Undeclared exception!
      try { 
        enrollmentsCSV0.compareTo("+ah-9vAdM<D.Mj=?P");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to br.edu.ufcg.computacao.eureca.backend.api.http.response.enrollment.EnrollmentsCSV
         //
         verifyException("br.edu.ufcg.computacao.eureca.backend.api.http.response.enrollment.EnrollmentsCSV", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("!!xrda`3Sw", "R\",x_l9T:HGEl", "!!xrda`3Sw", "!!xrda`3Sw", "", "", 39, 3881, 3881, 3881, 39, 338, 0, 0);
      assertNotNull(enrollmentsCSV0);
      assertEquals(3881, enrollmentsCSV0.getCancelledCount());
      assertEquals(3881, enrollmentsCSV0.getSucceededCount());
      assertEquals(39, enrollmentsCSV0.getOngoingCount());
      assertEquals(338, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals("R\",x_l9T:HGEl", enrollmentsCSV0.getCurriculumCode());
      assertEquals("!!xrda`3Sw", enrollmentsCSV0.getCourseCode());
      assertEquals("!!xrda`3Sw", enrollmentsCSV0.getSubjectCode());
      assertEquals("!!xrda`3Sw", enrollmentsCSV0.getSubjectName());
      assertEquals(39, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals(3881, enrollmentsCSV0.getExemptedCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals("", enrollmentsCSV0.getClassId());
      assertEquals(0, enrollmentsCSV0.getSuspendedCount());
      assertEquals("", enrollmentsCSV0.getTerm());
      
      String string0 = enrollmentsCSV0.getCurriculumCode();
      assertNotNull(string0);
      assertEquals("R\",x_l9T:HGEl", string0);
      assertEquals(3881, enrollmentsCSV0.getCancelledCount());
      assertEquals(3881, enrollmentsCSV0.getSucceededCount());
      assertEquals(39, enrollmentsCSV0.getOngoingCount());
      assertEquals(338, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals("R\",x_l9T:HGEl", enrollmentsCSV0.getCurriculumCode());
      assertEquals("!!xrda`3Sw", enrollmentsCSV0.getCourseCode());
      assertEquals("!!xrda`3Sw", enrollmentsCSV0.getSubjectCode());
      assertEquals("!!xrda`3Sw", enrollmentsCSV0.getSubjectName());
      assertEquals(39, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals(3881, enrollmentsCSV0.getExemptedCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals("", enrollmentsCSV0.getClassId());
      assertEquals(0, enrollmentsCSV0.getSuspendedCount());
      assertEquals("", enrollmentsCSV0.getTerm());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("2+f~$kSD7z.HBI", "2+f~$kSD7z.HBI", "2+f~$kSD7z.HBI", (String) null, (String) null, "", (-1), (-1), (-1), (-1), 0, (-3131), (-1), (-985));
      assertNotNull(enrollmentsCSV0);
      assertEquals((-1), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals("", enrollmentsCSV0.getClassId());
      assertEquals("2+f~$kSD7z.HBI", enrollmentsCSV0.getCourseCode());
      assertEquals(0, enrollmentsCSV0.getOngoingCount());
      assertEquals((-3131), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals((-1), enrollmentsCSV0.getCancelledCount());
      assertEquals((-1), enrollmentsCSV0.getSucceededCount());
      assertNull(enrollmentsCSV0.getTerm());
      assertNull(enrollmentsCSV0.getSubjectName());
      assertEquals((-1), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals((-985), enrollmentsCSV0.getSuspendedCount());
      assertEquals("2+f~$kSD7z.HBI", enrollmentsCSV0.getCurriculumCode());
      assertEquals((-1), enrollmentsCSV0.getExemptedCount());
      assertEquals("2+f~$kSD7z.HBI", enrollmentsCSV0.getSubjectCode());
      
      String string0 = enrollmentsCSV0.getClassId();
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals((-1), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals("", enrollmentsCSV0.getClassId());
      assertEquals("2+f~$kSD7z.HBI", enrollmentsCSV0.getCourseCode());
      assertEquals(0, enrollmentsCSV0.getOngoingCount());
      assertEquals((-3131), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals((-1), enrollmentsCSV0.getCancelledCount());
      assertEquals((-1), enrollmentsCSV0.getSucceededCount());
      assertNull(enrollmentsCSV0.getTerm());
      assertNull(enrollmentsCSV0.getSubjectName());
      assertEquals((-1), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals((-985), enrollmentsCSV0.getSuspendedCount());
      assertEquals("2+f~$kSD7z.HBI", enrollmentsCSV0.getCurriculumCode());
      assertEquals((-1), enrollmentsCSV0.getExemptedCount());
      assertEquals("2+f~$kSD7z.HBI", enrollmentsCSV0.getSubjectCode());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV(", subjectName='", ", subjectName='", (String) null, ", subjectName='", "", (String) null, (-189), (-1), (-1052), (-642), (-189), (-642), (-642), (-642));
      assertNotNull(enrollmentsCSV0);
      assertEquals(", subjectName='", enrollmentsCSV0.getCurriculumCode());
      assertEquals((-1052), enrollmentsCSV0.getCancelledCount());
      assertEquals((-642), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals((-642), enrollmentsCSV0.getSuspendedCount());
      assertEquals((-1), enrollmentsCSV0.getSucceededCount());
      assertEquals((-189), enrollmentsCSV0.getEnrollmentsCount());
      assertNull(enrollmentsCSV0.getClassId());
      assertEquals(", subjectName='", enrollmentsCSV0.getCourseCode());
      assertEquals("", enrollmentsCSV0.getTerm());
      assertNull(enrollmentsCSV0.getSubjectCode());
      assertEquals((-642), enrollmentsCSV0.getExemptedCount());
      assertEquals((-642), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(", subjectName='", enrollmentsCSV0.getSubjectName());
      assertEquals((-189), enrollmentsCSV0.getOngoingCount());
      
      String string0 = enrollmentsCSV0.getCourseCode();
      assertNotNull(string0);
      assertEquals(", subjectName='", string0);
      assertEquals(", subjectName='", enrollmentsCSV0.getCurriculumCode());
      assertEquals((-1052), enrollmentsCSV0.getCancelledCount());
      assertEquals((-642), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals((-642), enrollmentsCSV0.getSuspendedCount());
      assertEquals((-1), enrollmentsCSV0.getSucceededCount());
      assertEquals((-189), enrollmentsCSV0.getEnrollmentsCount());
      assertNull(enrollmentsCSV0.getClassId());
      assertEquals(", subjectName='", enrollmentsCSV0.getCourseCode());
      assertEquals("", enrollmentsCSV0.getTerm());
      assertNull(enrollmentsCSV0.getSubjectCode());
      assertEquals((-642), enrollmentsCSV0.getExemptedCount());
      assertEquals((-642), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(", subjectName='", enrollmentsCSV0.getSubjectName());
      assertEquals((-189), enrollmentsCSV0.getOngoingCount());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("", "", "", "uRMcr5", "", "uRMcr5", 0, 0, 0, 0, (-636), 0, 0, 12);
      assertNotNull(enrollmentsCSV0);
      assertEquals("", enrollmentsCSV0.getCourseCode());
      assertEquals("uRMcr5", enrollmentsCSV0.getClassId());
      assertEquals((-636), enrollmentsCSV0.getOngoingCount());
      assertEquals("uRMcr5", enrollmentsCSV0.getSubjectName());
      assertEquals(0, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(12, enrollmentsCSV0.getSuspendedCount());
      assertEquals(0, enrollmentsCSV0.getExemptedCount());
      assertEquals(0, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals("", enrollmentsCSV0.getTerm());
      assertEquals("", enrollmentsCSV0.getSubjectCode());
      assertEquals("", enrollmentsCSV0.getCurriculumCode());
      assertEquals(0, enrollmentsCSV0.getSucceededCount());
      assertEquals(0, enrollmentsCSV0.getCancelledCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToGradeCount());
      
      String string0 = enrollmentsCSV0.getSubjectCode();
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals("", enrollmentsCSV0.getCourseCode());
      assertEquals("uRMcr5", enrollmentsCSV0.getClassId());
      assertEquals((-636), enrollmentsCSV0.getOngoingCount());
      assertEquals("uRMcr5", enrollmentsCSV0.getSubjectName());
      assertEquals(0, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(12, enrollmentsCSV0.getSuspendedCount());
      assertEquals(0, enrollmentsCSV0.getExemptedCount());
      assertEquals(0, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals("", enrollmentsCSV0.getTerm());
      assertEquals("", enrollmentsCSV0.getSubjectCode());
      assertEquals("", enrollmentsCSV0.getCurriculumCode());
      assertEquals(0, enrollmentsCSV0.getSucceededCount());
      assertEquals(0, enrollmentsCSV0.getCancelledCount());
      assertEquals(0, enrollmentsCSV0.getFailedDueToGradeCount());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("2+f~$kSD7z.HBI", "2+f~$kSD7z.HBI", "2+f~$kSD7z.HBI", (String) null, (String) null, "", (-1), (-1), (-1), (-1), 0, (-3131), (-1), (-985));
      assertNotNull(enrollmentsCSV0);
      assertEquals((-1), enrollmentsCSV0.getSucceededCount());
      assertEquals(0, enrollmentsCSV0.getOngoingCount());
      assertEquals("2+f~$kSD7z.HBI", enrollmentsCSV0.getCourseCode());
      assertEquals("", enrollmentsCSV0.getClassId());
      assertEquals((-3131), enrollmentsCSV0.getFailedDueToGradeCount());
      assertNull(enrollmentsCSV0.getTerm());
      assertEquals((-1), enrollmentsCSV0.getCancelledCount());
      assertEquals((-1), enrollmentsCSV0.getEnrollmentsCount());
      assertNull(enrollmentsCSV0.getSubjectName());
      assertEquals("2+f~$kSD7z.HBI", enrollmentsCSV0.getCurriculumCode());
      assertEquals("2+f~$kSD7z.HBI", enrollmentsCSV0.getSubjectCode());
      assertEquals((-985), enrollmentsCSV0.getSuspendedCount());
      assertEquals((-1), enrollmentsCSV0.getExemptedCount());
      assertEquals((-1), enrollmentsCSV0.getFailedDueToAbsenceCount());
      
      String string0 = enrollmentsCSV0.getTerm();
      assertNull(string0);
      assertEquals((-1), enrollmentsCSV0.getSucceededCount());
      assertEquals(0, enrollmentsCSV0.getOngoingCount());
      assertEquals("2+f~$kSD7z.HBI", enrollmentsCSV0.getCourseCode());
      assertEquals("", enrollmentsCSV0.getClassId());
      assertEquals((-3131), enrollmentsCSV0.getFailedDueToGradeCount());
      assertNull(enrollmentsCSV0.getTerm());
      assertEquals((-1), enrollmentsCSV0.getCancelledCount());
      assertEquals((-1), enrollmentsCSV0.getEnrollmentsCount());
      assertNull(enrollmentsCSV0.getSubjectName());
      assertEquals("2+f~$kSD7z.HBI", enrollmentsCSV0.getCurriculumCode());
      assertEquals("2+f~$kSD7z.HBI", enrollmentsCSV0.getSubjectCode());
      assertEquals((-985), enrollmentsCSV0.getSuspendedCount());
      assertEquals((-1), enrollmentsCSV0.getExemptedCount());
      assertEquals((-1), enrollmentsCSV0.getFailedDueToAbsenceCount());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("K1", "K1", "K1", "K1", "K1", "K1", (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1));
      assertNotNull(enrollmentsCSV0);
      assertEquals((-1), enrollmentsCSV0.getSuspendedCount());
      assertEquals("K1", enrollmentsCSV0.getClassId());
      assertEquals((-1), enrollmentsCSV0.getSucceededCount());
      assertEquals((-1), enrollmentsCSV0.getCancelledCount());
      assertEquals((-1), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals((-1), enrollmentsCSV0.getExemptedCount());
      assertEquals("K1", enrollmentsCSV0.getCurriculumCode());
      assertEquals((-1), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals("K1", enrollmentsCSV0.getSubjectCode());
      assertEquals((-1), enrollmentsCSV0.getOngoingCount());
      assertEquals("K1", enrollmentsCSV0.getTerm());
      assertEquals("K1", enrollmentsCSV0.getCourseCode());
      assertEquals("K1", enrollmentsCSV0.getSubjectName());
      assertEquals((-1), enrollmentsCSV0.getFailedDueToAbsenceCount());
      
      enrollmentsCSV0.setEnrollmentsCount((-1));
      assertEquals((-1), enrollmentsCSV0.getSuspendedCount());
      assertEquals("K1", enrollmentsCSV0.getClassId());
      assertEquals((-1), enrollmentsCSV0.getSucceededCount());
      assertEquals((-1), enrollmentsCSV0.getCancelledCount());
      assertEquals((-1), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals((-1), enrollmentsCSV0.getExemptedCount());
      assertEquals("K1", enrollmentsCSV0.getCurriculumCode());
      assertEquals((-1), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals("K1", enrollmentsCSV0.getSubjectCode());
      assertEquals((-1), enrollmentsCSV0.getOngoingCount());
      assertEquals("K1", enrollmentsCSV0.getTerm());
      assertEquals("K1", enrollmentsCSV0.getCourseCode());
      assertEquals("K1", enrollmentsCSV0.getSubjectName());
      assertEquals((-1), enrollmentsCSV0.getFailedDueToAbsenceCount());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", 22, 22, 22, 22, 22, 22, 22, 22);
      assertNotNull(enrollmentsCSV0);
      assertEquals("pUgL#?:%IsTh!0L/;", enrollmentsCSV0.getClassId());
      assertEquals(22, enrollmentsCSV0.getExemptedCount());
      assertEquals("pUgL#?:%IsTh!0L/;", enrollmentsCSV0.getSubjectCode());
      assertEquals(22, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals(22, enrollmentsCSV0.getSuspendedCount());
      assertEquals("pUgL#?:%IsTh!0L/;", enrollmentsCSV0.getTerm());
      assertEquals(22, enrollmentsCSV0.getOngoingCount());
      assertEquals("pUgL#?:%IsTh!0L/;", enrollmentsCSV0.getCurriculumCode());
      assertEquals(22, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(22, enrollmentsCSV0.getCancelledCount());
      assertEquals(22, enrollmentsCSV0.getSucceededCount());
      assertEquals(22, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals("pUgL#?:%IsTh!0L/;", enrollmentsCSV0.getCourseCode());
      assertEquals("pUgL#?:%IsTh!0L/;", enrollmentsCSV0.getSubjectName());
      
      enrollmentsCSV0.setOngoingCount(22);
      assertEquals("pUgL#?:%IsTh!0L/;", enrollmentsCSV0.getClassId());
      assertEquals(22, enrollmentsCSV0.getExemptedCount());
      assertEquals("pUgL#?:%IsTh!0L/;", enrollmentsCSV0.getSubjectCode());
      assertEquals(22, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals(22, enrollmentsCSV0.getSuspendedCount());
      assertEquals("pUgL#?:%IsTh!0L/;", enrollmentsCSV0.getTerm());
      assertEquals(22, enrollmentsCSV0.getOngoingCount());
      assertEquals("pUgL#?:%IsTh!0L/;", enrollmentsCSV0.getCurriculumCode());
      assertEquals(22, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(22, enrollmentsCSV0.getCancelledCount());
      assertEquals(22, enrollmentsCSV0.getSucceededCount());
      assertEquals(22, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals("pUgL#?:%IsTh!0L/;", enrollmentsCSV0.getCourseCode());
      assertEquals("pUgL#?:%IsTh!0L/;", enrollmentsCSV0.getSubjectName());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", 22, 22, 22, 22, 22, 22, 22, 22);
      assertNotNull(enrollmentsCSV0);
      assertEquals(22, enrollmentsCSV0.getExemptedCount());
      assertEquals("pUgL#?:%IsTh!0L/;", enrollmentsCSV0.getClassId());
      assertEquals("pUgL#?:%IsTh!0L/;", enrollmentsCSV0.getCourseCode());
      assertEquals(22, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals("pUgL#?:%IsTh!0L/;", enrollmentsCSV0.getCurriculumCode());
      assertEquals(22, enrollmentsCSV0.getOngoingCount());
      assertEquals("pUgL#?:%IsTh!0L/;", enrollmentsCSV0.getSubjectCode());
      assertEquals(22, enrollmentsCSV0.getCancelledCount());
      assertEquals(22, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(22, enrollmentsCSV0.getSuspendedCount());
      assertEquals("pUgL#?:%IsTh!0L/;", enrollmentsCSV0.getSubjectName());
      assertEquals(22, enrollmentsCSV0.getSucceededCount());
      assertEquals("pUgL#?:%IsTh!0L/;", enrollmentsCSV0.getTerm());
      assertEquals(22, enrollmentsCSV0.getEnrollmentsCount());
      
      enrollmentsCSV0.setCancelledCount(22);
      assertEquals(22, enrollmentsCSV0.getExemptedCount());
      assertEquals("pUgL#?:%IsTh!0L/;", enrollmentsCSV0.getClassId());
      assertEquals("pUgL#?:%IsTh!0L/;", enrollmentsCSV0.getCourseCode());
      assertEquals(22, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals("pUgL#?:%IsTh!0L/;", enrollmentsCSV0.getCurriculumCode());
      assertEquals(22, enrollmentsCSV0.getOngoingCount());
      assertEquals("pUgL#?:%IsTh!0L/;", enrollmentsCSV0.getSubjectCode());
      assertEquals(22, enrollmentsCSV0.getCancelledCount());
      assertEquals(22, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(22, enrollmentsCSV0.getSuspendedCount());
      assertEquals("pUgL#?:%IsTh!0L/;", enrollmentsCSV0.getSubjectName());
      assertEquals(22, enrollmentsCSV0.getSucceededCount());
      assertEquals("pUgL#?:%IsTh!0L/;", enrollmentsCSV0.getTerm());
      assertEquals(22, enrollmentsCSV0.getEnrollmentsCount());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("v", "v", "v", "v", "v", "v", 29, 29, 29, 29, 29, 29, 29, 29);
      assertNotNull(enrollmentsCSV0);
      assertEquals(29, enrollmentsCSV0.getOngoingCount());
      assertEquals(29, enrollmentsCSV0.getSucceededCount());
      assertEquals(29, enrollmentsCSV0.getCancelledCount());
      assertEquals(29, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(29, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals("v", enrollmentsCSV0.getCurriculumCode());
      assertEquals(29, enrollmentsCSV0.getExemptedCount());
      assertEquals("v", enrollmentsCSV0.getTerm());
      assertEquals(29, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals("v", enrollmentsCSV0.getClassId());
      assertEquals("v", enrollmentsCSV0.getSubjectCode());
      assertEquals("v", enrollmentsCSV0.getSubjectName());
      assertEquals(29, enrollmentsCSV0.getSuspendedCount());
      assertEquals("v", enrollmentsCSV0.getCourseCode());
      
      int int0 = enrollmentsCSV0.getFailedDueToGradeCount();
      assertEquals(29, int0);
      assertEquals(29, enrollmentsCSV0.getOngoingCount());
      assertEquals(29, enrollmentsCSV0.getSucceededCount());
      assertEquals(29, enrollmentsCSV0.getCancelledCount());
      assertEquals(29, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(29, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals("v", enrollmentsCSV0.getCurriculumCode());
      assertEquals(29, enrollmentsCSV0.getExemptedCount());
      assertEquals("v", enrollmentsCSV0.getTerm());
      assertEquals(29, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals("v", enrollmentsCSV0.getClassId());
      assertEquals("v", enrollmentsCSV0.getSubjectCode());
      assertEquals("v", enrollmentsCSV0.getSubjectName());
      assertEquals(29, enrollmentsCSV0.getSuspendedCount());
      assertEquals("v", enrollmentsCSV0.getCourseCode());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("K1", "K1", "K1", "K1", "K1", "K1", (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1));
      enrollmentsCSV0.setClassId("EnrollmentsCSV{courseCode='K1', curriculumCode='K1', subjectCode='K1', subjectName='K1', term='K1', classId='K1', enrollmentsCount=-1, succeededCount=-1, cancelledCount=-1, exemptedCount=-1, ongoingCount=-1, failedDueToGradeCount=-1, failedDueToAbsenceCount=-1, suspendedCount=-1}");
      assertEquals((-1), enrollmentsCSV0.getSuspendedCount());
      assertEquals((-1), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals((-1), enrollmentsCSV0.getSucceededCount());
      assertEquals((-1), enrollmentsCSV0.getOngoingCount());
      assertEquals((-1), enrollmentsCSV0.getExemptedCount());
      assertEquals((-1), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals((-1), enrollmentsCSV0.getCancelledCount());
      assertEquals((-1), enrollmentsCSV0.getFailedDueToGradeCount());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("K1", "K1", "K1", "K1", "K1", "K1", (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1));
      enrollmentsCSV0.setFailedDueToGradeCount((-1));
      assertEquals((-1), enrollmentsCSV0.getExemptedCount());
      assertEquals((-1), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals((-1), enrollmentsCSV0.getSuspendedCount());
      assertEquals((-1), enrollmentsCSV0.getSucceededCount());
      assertEquals((-1), enrollmentsCSV0.getCancelledCount());
      assertEquals((-1), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals((-1), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals((-1), enrollmentsCSV0.getOngoingCount());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", 22, 22, 22, 22, 22, 22, 22, 22);
      int int0 = enrollmentsCSV0.getExemptedCount();
      assertEquals(22, int0);
      assertEquals(22, enrollmentsCSV0.getSuspendedCount());
      assertEquals(22, enrollmentsCSV0.getSucceededCount());
      assertEquals(22, enrollmentsCSV0.getCancelledCount());
      assertEquals(22, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(22, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(22, enrollmentsCSV0.getOngoingCount());
      assertEquals(22, enrollmentsCSV0.getEnrollmentsCount());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("K1", "K1", "K1", "K1", "K1", "K1", (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1));
      enrollmentsCSV0.setSubjectCode("K1");
      assertEquals((-1), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals((-1), enrollmentsCSV0.getExemptedCount());
      assertEquals((-1), enrollmentsCSV0.getCancelledCount());
      assertEquals((-1), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals((-1), enrollmentsCSV0.getSuspendedCount());
      assertEquals((-1), enrollmentsCSV0.getSucceededCount());
      assertEquals((-1), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals((-1), enrollmentsCSV0.getOngoingCount());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("", "", "", "", "", "", (-485), (-485), (-485), (-485), (-485), (-485), (-485), (-485));
      enrollmentsCSV0.setTerm("");
      assertEquals((-485), enrollmentsCSV0.getExemptedCount());
      assertEquals((-485), enrollmentsCSV0.getSuspendedCount());
      assertEquals((-485), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals((-485), enrollmentsCSV0.getSucceededCount());
      assertEquals((-485), enrollmentsCSV0.getOngoingCount());
      assertEquals((-485), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals((-485), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals((-485), enrollmentsCSV0.getCancelledCount());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", 22, 22, 22, 22, 22, 22, 22, 22);
      int int0 = enrollmentsCSV0.getEnrollmentsCount();
      assertEquals(22, enrollmentsCSV0.getCancelledCount());
      assertEquals(22, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(22, enrollmentsCSV0.getOngoingCount());
      assertEquals(22, int0);
      assertEquals(22, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(22, enrollmentsCSV0.getExemptedCount());
      assertEquals(22, enrollmentsCSV0.getSucceededCount());
      assertEquals(22, enrollmentsCSV0.getSuspendedCount());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("K1", "K1", "K1", "K1", "K1", "K1", (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1));
      String string0 = enrollmentsCSV0.toString();
      assertEquals("EnrollmentsCSV{courseCode='K1', curriculumCode='K1', subjectCode='K1', subjectName='K1', term='K1', classId='K1', enrollmentsCount=-1, succeededCount=-1, cancelledCount=-1, exemptedCount=-1, ongoingCount=-1, failedDueToGradeCount=-1, failedDueToAbsenceCount=-1, suspendedCount=-1}", string0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("K1", "K1", "K1", "K1", "K1", "K1", (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1));
      int int0 = enrollmentsCSV0.getOngoingCount();
      assertEquals((-1), int0);
      assertEquals((-1), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals((-1), enrollmentsCSV0.getSucceededCount());
      assertEquals((-1), enrollmentsCSV0.getCancelledCount());
      assertEquals((-1), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals((-1), enrollmentsCSV0.getExemptedCount());
      assertEquals((-1), enrollmentsCSV0.getSuspendedCount());
      assertEquals((-1), enrollmentsCSV0.getEnrollmentsCount());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("K1", "K1", "K1", "K1", "K1", "K1", (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1));
      int int0 = enrollmentsCSV0.getCancelledCount();
      assertEquals((-1), enrollmentsCSV0.getOngoingCount());
      assertEquals((-1), enrollmentsCSV0.getSucceededCount());
      assertEquals((-1), enrollmentsCSV0.getSuspendedCount());
      assertEquals((-1), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals((-1), int0);
      assertEquals((-1), enrollmentsCSV0.getExemptedCount());
      assertEquals((-1), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals((-1), enrollmentsCSV0.getFailedDueToGradeCount());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("", "", "", "", "", "", (-485), (-485), (-485), (-485), (-485), (-485), (-485), (-485));
      enrollmentsCSV0.setSubjectName("");
      assertEquals((-485), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals((-485), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals((-485), enrollmentsCSV0.getCancelledCount());
      assertEquals((-485), enrollmentsCSV0.getExemptedCount());
      assertEquals((-485), enrollmentsCSV0.getSucceededCount());
      assertEquals((-485), enrollmentsCSV0.getOngoingCount());
      assertEquals((-485), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals((-485), enrollmentsCSV0.getSuspendedCount());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("", "", "", "", "", "", (-485), (-485), (-485), (-485), (-485), (-485), (-485), (-485));
      int int0 = enrollmentsCSV0.getSucceededCount();
      assertEquals((-485), int0);
      assertEquals((-485), enrollmentsCSV0.getOngoingCount());
      assertEquals((-485), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals((-485), enrollmentsCSV0.getSuspendedCount());
      assertEquals((-485), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals((-485), enrollmentsCSV0.getCancelledCount());
      assertEquals((-485), enrollmentsCSV0.getExemptedCount());
      assertEquals((-485), enrollmentsCSV0.getEnrollmentsCount());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", 22, 22, 22, 22, 22, 22, 22, 22);
      enrollmentsCSV0.setSuspendedCount(22);
      assertEquals(22, enrollmentsCSV0.getOngoingCount());
      assertEquals(22, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(22, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals(22, enrollmentsCSV0.getSucceededCount());
      assertEquals(22, enrollmentsCSV0.getSuspendedCount());
      assertEquals(22, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(22, enrollmentsCSV0.getCancelledCount());
      assertEquals(22, enrollmentsCSV0.getExemptedCount());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", 22, 22, 22, 22, 22, 22, 22, 22);
      int int0 = enrollmentsCSV0.getFailedDueToAbsenceCount();
      assertEquals(22, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(22, enrollmentsCSV0.getCancelledCount());
      assertEquals(22, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals(22, enrollmentsCSV0.getOngoingCount());
      assertEquals(22, int0);
      assertEquals(22, enrollmentsCSV0.getSucceededCount());
      assertEquals(22, enrollmentsCSV0.getSuspendedCount());
      assertEquals(22, enrollmentsCSV0.getExemptedCount());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("K1", "K1", "K1", "K1", "K1", "K1", (-1), (-1), (-1), (-1), (-1), (-1), (-1), (-1));
      enrollmentsCSV0.compareTo(enrollmentsCSV0);
      assertEquals((-1), enrollmentsCSV0.getExemptedCount());
      assertEquals((-1), enrollmentsCSV0.getCancelledCount());
      assertEquals((-1), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals((-1), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals((-1), enrollmentsCSV0.getSucceededCount());
      assertEquals((-1), enrollmentsCSV0.getOngoingCount());
      assertEquals((-1), enrollmentsCSV0.getSuspendedCount());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("r", "r", "r", "r", "r", "r", 65, 65, 65, 65, 65, 65, 65, 65);
      int int0 = enrollmentsCSV0.getSuspendedCount();
      assertEquals(65, enrollmentsCSV0.getExemptedCount());
      assertEquals(65, int0);
      assertEquals(65, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals(65, enrollmentsCSV0.getOngoingCount());
      assertEquals(65, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(65, enrollmentsCSV0.getSucceededCount());
      assertEquals(65, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(65, enrollmentsCSV0.getCancelledCount());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("", "", "", "", "", "", (-485), (-485), (-485), (-485), (-485), (-485), (-485), (-485));
      enrollmentsCSV0.setFailedDueToAbsenceCount((-485));
      assertEquals((-485), enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals((-485), enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals((-485), enrollmentsCSV0.getCancelledCount());
      assertEquals((-485), enrollmentsCSV0.getSucceededCount());
      assertEquals((-485), enrollmentsCSV0.getExemptedCount());
      assertEquals((-485), enrollmentsCSV0.getSuspendedCount());
      assertEquals((-485), enrollmentsCSV0.getEnrollmentsCount());
      assertEquals((-485), enrollmentsCSV0.getOngoingCount());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", 22, 22, 22, 22, 22, 22, 22, 22);
      enrollmentsCSV0.getSubjectName();
      assertEquals(22, enrollmentsCSV0.getSucceededCount());
      assertEquals(22, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals(22, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(22, enrollmentsCSV0.getCancelledCount());
      assertEquals(22, enrollmentsCSV0.getSuspendedCount());
      assertEquals(22, enrollmentsCSV0.getOngoingCount());
      assertEquals(22, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(22, enrollmentsCSV0.getExemptedCount());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("v", "v", "v", "v", "v", "v", 29, 29, 29, 29, 29, 29, 29, 29);
      enrollmentsCSV0.setCurriculumCode("v");
      assertEquals(29, enrollmentsCSV0.getSuspendedCount());
      assertEquals(29, enrollmentsCSV0.getOngoingCount());
      assertEquals(29, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(29, enrollmentsCSV0.getCancelledCount());
      assertEquals(29, enrollmentsCSV0.getEnrollmentsCount());
      assertEquals(29, enrollmentsCSV0.getSucceededCount());
      assertEquals(29, enrollmentsCSV0.getExemptedCount());
      assertEquals(29, enrollmentsCSV0.getFailedDueToAbsenceCount());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      EnrollmentsCSV enrollmentsCSV0 = new EnrollmentsCSV("pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", "pUgL#?:%IsTh!0L/;", 22, 22, 22, 22, 22, 22, 22, 22);
      enrollmentsCSV0.setExemptedCount(22);
      assertEquals(22, enrollmentsCSV0.getExemptedCount());
      assertEquals(22, enrollmentsCSV0.getCancelledCount());
      assertEquals(22, enrollmentsCSV0.getFailedDueToGradeCount());
      assertEquals(22, enrollmentsCSV0.getSucceededCount());
      assertEquals(22, enrollmentsCSV0.getSuspendedCount());
      assertEquals(22, enrollmentsCSV0.getOngoingCount());
      assertEquals(22, enrollmentsCSV0.getFailedDueToAbsenceCount());
      assertEquals(22, enrollmentsCSV0.getEnrollmentsCount());
  }
}
