/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 05 22:59:19 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.api.http.response.enrollment;

import org.junit.Test;
import static org.junit.Assert.*;
import br.edu.ufcg.computacao.eureca.backend.api.http.response.enrollment.EnrollmentsStatisticsSummary;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EnrollmentsStatisticsSummary_ESTest extends EnrollmentsStatisticsSummary_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EnrollmentsStatisticsSummary enrollmentsStatisticsSummary0 = new EnrollmentsStatisticsSummary(0.0, 0.0, 0.0, 0.0, (-301.233927867188));
      double double0 = enrollmentsStatisticsSummary0.getAverageSubjectsCount();
      assertEquals(0.0, enrollmentsStatisticsSummary0.getAverageClassesPerSubject(), 0.01);
      assertEquals(0.0, enrollmentsStatisticsSummary0.getAverageEnrollmentsPerSubject(), 0.01);
      assertEquals(0.0, enrollmentsStatisticsSummary0.getAverageClassesPerTerm(), 0.01);
      assertEquals((-301.233927867188), enrollmentsStatisticsSummary0.getAverageEnrollmentsPerTerm(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EnrollmentsStatisticsSummary enrollmentsStatisticsSummary0 = new EnrollmentsStatisticsSummary(1.0, 2540.165017365417, 1.0, 2540.165017365417, (-2011.106997035));
      double double0 = enrollmentsStatisticsSummary0.getAverageSubjectsCount();
      assertEquals(1.0, double0, 0.01);
      assertEquals(2540.165017365417, enrollmentsStatisticsSummary0.getAverageEnrollmentsPerSubject(), 0.01);
      assertEquals(1.0, enrollmentsStatisticsSummary0.getAverageClassesPerTerm(), 0.01);
      assertEquals((-2011.106997035), enrollmentsStatisticsSummary0.getAverageEnrollmentsPerTerm(), 0.01);
      assertEquals(2540.165017365417, enrollmentsStatisticsSummary0.getAverageClassesPerSubject(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EnrollmentsStatisticsSummary enrollmentsStatisticsSummary0 = new EnrollmentsStatisticsSummary((-2164.6231549706504), (-901.53), (-901.53), 226.506296, 0.0);
      double double0 = enrollmentsStatisticsSummary0.getAverageEnrollmentsPerTerm();
      assertEquals((-901.53), enrollmentsStatisticsSummary0.getAverageClassesPerTerm(), 0.01);
      assertEquals(226.506296, enrollmentsStatisticsSummary0.getAverageEnrollmentsPerSubject(), 0.01);
      assertEquals((-2164.6231549706504), enrollmentsStatisticsSummary0.getAverageSubjectsCount(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals((-901.53), enrollmentsStatisticsSummary0.getAverageClassesPerSubject(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EnrollmentsStatisticsSummary enrollmentsStatisticsSummary0 = new EnrollmentsStatisticsSummary(0.0, 1.0, 0.0, 1.0, 1.0);
      double double0 = enrollmentsStatisticsSummary0.getAverageEnrollmentsPerTerm();
      assertEquals(0.0, enrollmentsStatisticsSummary0.getAverageSubjectsCount(), 0.01);
      assertEquals(0.0, enrollmentsStatisticsSummary0.getAverageClassesPerTerm(), 0.01);
      assertEquals(1.0, enrollmentsStatisticsSummary0.getAverageEnrollmentsPerSubject(), 0.01);
      assertEquals(1.0, double0, 0.01);
      assertEquals(1.0, enrollmentsStatisticsSummary0.getAverageClassesPerSubject(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EnrollmentsStatisticsSummary enrollmentsStatisticsSummary0 = new EnrollmentsStatisticsSummary(0.0, 0.0, 0.0, 0.0, 0.0);
      double double0 = enrollmentsStatisticsSummary0.getAverageEnrollmentsPerSubject();
      assertEquals(0.0, enrollmentsStatisticsSummary0.getAverageClassesPerSubject(), 0.01);
      assertEquals(0.0, enrollmentsStatisticsSummary0.getAverageEnrollmentsPerTerm(), 0.01);
      assertEquals(0.0, enrollmentsStatisticsSummary0.getAverageSubjectsCount(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, enrollmentsStatisticsSummary0.getAverageClassesPerTerm(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EnrollmentsStatisticsSummary enrollmentsStatisticsSummary0 = new EnrollmentsStatisticsSummary(1739.32556357, 1739.32556357, 0.0, 1739.32556357, 0.0);
      double double0 = enrollmentsStatisticsSummary0.getAverageEnrollmentsPerSubject();
      assertEquals(1739.32556357, enrollmentsStatisticsSummary0.getAverageClassesPerSubject(), 0.01);
      assertEquals(0.0, enrollmentsStatisticsSummary0.getAverageClassesPerTerm(), 0.01);
      assertEquals(0.0, enrollmentsStatisticsSummary0.getAverageEnrollmentsPerTerm(), 0.01);
      assertEquals(1739.32556357, double0, 0.01);
      assertEquals(1739.32556357, enrollmentsStatisticsSummary0.getAverageSubjectsCount(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EnrollmentsStatisticsSummary enrollmentsStatisticsSummary0 = new EnrollmentsStatisticsSummary(2532.2320366602776, 0.0, 0.0, (-4510.224024586885), 2532.2320366602776);
      double double0 = enrollmentsStatisticsSummary0.getAverageClassesPerTerm();
      assertEquals(0.0, enrollmentsStatisticsSummary0.getAverageClassesPerSubject(), 0.01);
      assertEquals(2532.2320366602776, enrollmentsStatisticsSummary0.getAverageSubjectsCount(), 0.01);
      assertEquals((-4510.224024586885), enrollmentsStatisticsSummary0.getAverageEnrollmentsPerSubject(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(2532.2320366602776, enrollmentsStatisticsSummary0.getAverageEnrollmentsPerTerm(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EnrollmentsStatisticsSummary enrollmentsStatisticsSummary0 = new EnrollmentsStatisticsSummary(142.6143317575, 142.6143317575, 142.6143317575, 142.6143317575, 142.6143317575);
      double double0 = enrollmentsStatisticsSummary0.getAverageClassesPerTerm();
      assertEquals(142.6143317575, enrollmentsStatisticsSummary0.getAverageEnrollmentsPerSubject(), 0.01);
      assertEquals(142.6143317575, double0, 0.01);
      assertEquals(142.6143317575, enrollmentsStatisticsSummary0.getAverageEnrollmentsPerTerm(), 0.01);
      assertEquals(142.6143317575, enrollmentsStatisticsSummary0.getAverageClassesPerSubject(), 0.01);
      assertEquals(142.6143317575, enrollmentsStatisticsSummary0.getAverageSubjectsCount(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EnrollmentsStatisticsSummary enrollmentsStatisticsSummary0 = new EnrollmentsStatisticsSummary(0.0, 0.0, 0.0, 1905.0, 0.0);
      double double0 = enrollmentsStatisticsSummary0.getAverageClassesPerSubject();
      assertEquals(1905.0, enrollmentsStatisticsSummary0.getAverageEnrollmentsPerSubject(), 0.01);
      assertEquals(0.0, enrollmentsStatisticsSummary0.getAverageClassesPerTerm(), 0.01);
      assertEquals(0.0, enrollmentsStatisticsSummary0.getAverageSubjectsCount(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, enrollmentsStatisticsSummary0.getAverageEnrollmentsPerTerm(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EnrollmentsStatisticsSummary enrollmentsStatisticsSummary0 = new EnrollmentsStatisticsSummary(4102.8938, 4102.8938, 4102.8938, 0.0, 4102.8938);
      double double0 = enrollmentsStatisticsSummary0.getAverageClassesPerSubject();
      assertEquals(0.0, enrollmentsStatisticsSummary0.getAverageEnrollmentsPerSubject(), 0.01);
      assertEquals(4102.8938, enrollmentsStatisticsSummary0.getAverageSubjectsCount(), 0.01);
      assertEquals(4102.8938, enrollmentsStatisticsSummary0.getAverageClassesPerTerm(), 0.01);
      assertEquals(4102.8938, enrollmentsStatisticsSummary0.getAverageEnrollmentsPerTerm(), 0.01);
      assertEquals(4102.8938, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EnrollmentsStatisticsSummary enrollmentsStatisticsSummary0 = new EnrollmentsStatisticsSummary((-1588.9817458461835), (-1588.9817458461835), (-1588.9817458461835), (-1588.9817458461835), (-1588.9817458461835));
      double double0 = enrollmentsStatisticsSummary0.getAverageEnrollmentsPerSubject();
      assertEquals((-1588.9817458461835), enrollmentsStatisticsSummary0.getAverageEnrollmentsPerTerm(), 0.01);
      assertEquals((-1588.9817458461835), double0, 0.01);
      assertEquals((-1588.9817458461835), enrollmentsStatisticsSummary0.getAverageClassesPerSubject(), 0.01);
      assertEquals((-1588.9817458461835), enrollmentsStatisticsSummary0.getAverageSubjectsCount(), 0.01);
      assertEquals((-1588.9817458461835), enrollmentsStatisticsSummary0.getAverageClassesPerTerm(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EnrollmentsStatisticsSummary enrollmentsStatisticsSummary0 = new EnrollmentsStatisticsSummary((-740.1760276977991), (-740.1760276977991), (-740.1760276977991), (-740.1760276977991), (-740.1760276977991));
      double double0 = enrollmentsStatisticsSummary0.getAverageSubjectsCount();
      assertEquals((-740.1760276977991), enrollmentsStatisticsSummary0.getAverageEnrollmentsPerSubject(), 0.01);
      assertEquals((-740.1760276977991), enrollmentsStatisticsSummary0.getAverageClassesPerTerm(), 0.01);
      assertEquals((-740.1760276977991), enrollmentsStatisticsSummary0.getAverageEnrollmentsPerTerm(), 0.01);
      assertEquals((-740.1760276977991), enrollmentsStatisticsSummary0.getAverageClassesPerSubject(), 0.01);
      assertEquals((-740.1760276977991), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EnrollmentsStatisticsSummary enrollmentsStatisticsSummary0 = new EnrollmentsStatisticsSummary((-1588.9817458461835), (-1588.9817458461835), (-1588.9817458461835), (-1588.9817458461835), (-1588.9817458461835));
      double double0 = enrollmentsStatisticsSummary0.getAverageEnrollmentsPerTerm();
      assertEquals((-1588.9817458461835), enrollmentsStatisticsSummary0.getAverageEnrollmentsPerSubject(), 0.01);
      assertEquals((-1588.9817458461835), double0, 0.01);
      assertEquals((-1588.9817458461835), enrollmentsStatisticsSummary0.getAverageClassesPerTerm(), 0.01);
      assertEquals((-1588.9817458461835), enrollmentsStatisticsSummary0.getAverageClassesPerSubject(), 0.01);
      assertEquals((-1588.9817458461835), enrollmentsStatisticsSummary0.getAverageSubjectsCount(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EnrollmentsStatisticsSummary enrollmentsStatisticsSummary0 = new EnrollmentsStatisticsSummary((-740.1760276977991), (-740.1760276977991), (-740.1760276977991), (-740.1760276977991), (-740.1760276977991));
      double double0 = enrollmentsStatisticsSummary0.getAverageClassesPerTerm();
      assertEquals((-740.1760276977991), enrollmentsStatisticsSummary0.getAverageSubjectsCount(), 0.01);
      assertEquals((-740.1760276977991), enrollmentsStatisticsSummary0.getAverageEnrollmentsPerSubject(), 0.01);
      assertEquals((-740.1760276977991), enrollmentsStatisticsSummary0.getAverageEnrollmentsPerTerm(), 0.01);
      assertEquals((-740.1760276977991), enrollmentsStatisticsSummary0.getAverageClassesPerSubject(), 0.01);
      assertEquals((-740.1760276977991), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EnrollmentsStatisticsSummary enrollmentsStatisticsSummary0 = new EnrollmentsStatisticsSummary((-1588.9817458461835), (-1588.9817458461835), (-1588.9817458461835), (-1588.9817458461835), (-1588.9817458461835));
      String string0 = enrollmentsStatisticsSummary0.toString();
      assertEquals("EnrollmentsStatisticsSummaryResponse{, subjectsCount=-1588.9817458461835, averageClassesPerDiscipline=-1588.9817458461835, averageClassesPerPeriod=-1588.9817458461835, averageEnrollmentsPerSubject=-1588.9817458461835, averageEnrollmentsPerPeriod=-1588.9817458461835}", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EnrollmentsStatisticsSummary enrollmentsStatisticsSummary0 = new EnrollmentsStatisticsSummary((-1588.9817458461835), (-1588.9817458461835), (-1588.9817458461835), (-1588.9817458461835), (-1588.9817458461835));
      double double0 = enrollmentsStatisticsSummary0.getAverageClassesPerSubject();
      assertEquals((-1588.9817458461835), enrollmentsStatisticsSummary0.getAverageEnrollmentsPerTerm(), 0.01);
      assertEquals((-1588.9817458461835), enrollmentsStatisticsSummary0.getAverageSubjectsCount(), 0.01);
      assertEquals((-1588.9817458461835), enrollmentsStatisticsSummary0.getAverageEnrollmentsPerSubject(), 0.01);
      assertEquals((-1588.9817458461835), double0, 0.01);
      assertEquals((-1588.9817458461835), enrollmentsStatisticsSummary0.getAverageClassesPerTerm(), 0.01);
  }
}
