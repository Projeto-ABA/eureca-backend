/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 05 22:37:26 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CurriculumKey_ESTest extends CurriculumKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CurriculumKey curriculumKey0 = new CurriculumKey();
      String string0 = curriculumKey0.getCurriculumCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CurriculumKey curriculumKey0 = new CurriculumKey("ty.uZG|Z:&TdrL_a=", "0/1H_3z}6h%S");
      String string0 = curriculumKey0.getCurriculumCode();
      assertEquals("ty.uZG|Z:&TdrL_a=", curriculumKey0.getCourseCode());
      assertEquals("0/1H_3z}6h%S", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CurriculumKey curriculumKey0 = new CurriculumKey();
      String string0 = curriculumKey0.getCourseCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CurriculumKey curriculumKey0 = new CurriculumKey("", "br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumKey");
      assertEquals("", curriculumKey0.getCourseCode());
      
      curriculumKey0.setCourseCode(",z[In0");
      curriculumKey0.getCourseCode();
      assertEquals("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumKey", curriculumKey0.getCurriculumCode());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CurriculumKey curriculumKey0 = new CurriculumKey();
      CurriculumKey curriculumKey1 = new CurriculumKey("", "b:");
      // Undeclared exception!
      try { 
        curriculumKey0.equals(curriculumKey1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CurriculumKey curriculumKey0 = new CurriculumKey("", "");
      String string0 = curriculumKey0.getCurriculumCode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CurriculumKey curriculumKey0 = new CurriculumKey("", "br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumKey");
      String string0 = curriculumKey0.getCourseCode();
      assertEquals("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.CurriculumKey", curriculumKey0.getCurriculumCode());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CurriculumKey curriculumKey0 = new CurriculumKey("", "");
      CurriculumKey curriculumKey1 = new CurriculumKey("", "");
      boolean boolean0 = curriculumKey0.equals(curriculumKey1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CurriculumKey curriculumKey0 = new CurriculumKey((String) null, (String) null);
      curriculumKey0.setCourseCode("^");
      CurriculumKey curriculumKey1 = new CurriculumKey("_", (String) null);
      boolean boolean0 = curriculumKey0.equals(curriculumKey1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CurriculumKey curriculumKey0 = new CurriculumKey();
      boolean boolean0 = curriculumKey0.equals("Xo");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CurriculumKey curriculumKey0 = new CurriculumKey((String) null, "o*\"rW");
      boolean boolean0 = curriculumKey0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CurriculumKey curriculumKey0 = new CurriculumKey();
      boolean boolean0 = curriculumKey0.equals(curriculumKey0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CurriculumKey curriculumKey0 = new CurriculumKey();
      String string0 = curriculumKey0.toString();
      assertEquals("null:null", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CurriculumKey curriculumKey0 = new CurriculumKey();
      curriculumKey0.setCourseCode("null:null");
      CurriculumKey curriculumKey1 = new CurriculumKey("null:null", "_");
      curriculumKey0.setCurriculumCode("^");
      boolean boolean0 = curriculumKey0.equals(curriculumKey1);
      assertFalse(boolean0);
      assertEquals("null:null", curriculumKey1.getCourseCode());
      assertEquals("_", curriculumKey1.getCurriculumCode());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CurriculumKey curriculumKey0 = new CurriculumKey();
      curriculumKey0.hashCode();
  }
}
