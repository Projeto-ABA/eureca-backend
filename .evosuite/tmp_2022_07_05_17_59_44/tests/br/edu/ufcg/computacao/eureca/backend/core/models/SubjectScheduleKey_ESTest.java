/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 05 22:12:34 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.core.models;

import org.junit.Test;
import static org.junit.Assert.*;
import br.edu.ufcg.computacao.eureca.backend.core.models.SubjectScheduleKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class SubjectScheduleKey_ESTest extends SubjectScheduleKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      SubjectScheduleKey subjectScheduleKey0 = new SubjectScheduleKey("", "", "", (String) null);
      String string0 = subjectScheduleKey0.getTerm();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      SubjectScheduleKey subjectScheduleKey0 = new SubjectScheduleKey("[GS:=V^-{", "[GS:=V^-{", "[GS:=V^-{", ":O{Y8+6");
      String string0 = subjectScheduleKey0.getTerm();
      assertEquals("[GS:=V^-{", subjectScheduleKey0.getCurriculumCode());
      assertEquals("[GS:=V^-{", subjectScheduleKey0.getSubjectCode());
      assertEquals("[GS:=V^-{", subjectScheduleKey0.getCourseCode());
      assertEquals(":O{Y8+6", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      SubjectScheduleKey subjectScheduleKey0 = new SubjectScheduleKey("", "", "", "");
      subjectScheduleKey0.setSubjectCode((String) null);
      String string0 = subjectScheduleKey0.getSubjectCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SubjectScheduleKey subjectScheduleKey0 = new SubjectScheduleKey("", "", "", "");
      String string0 = subjectScheduleKey0.getSubjectCode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      SubjectScheduleKey subjectScheduleKey0 = new SubjectScheduleKey((String) null, (String) null, "", (String) null);
      String string0 = subjectScheduleKey0.getCurriculumCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      SubjectScheduleKey subjectScheduleKey0 = new SubjectScheduleKey("", "?OdL", "?OdL", "?OdL");
      String string0 = subjectScheduleKey0.getCurriculumCode();
      assertEquals("?OdL", subjectScheduleKey0.getTerm());
      assertEquals("", subjectScheduleKey0.getCourseCode());
      assertEquals("?OdL", string0);
      assertEquals("?OdL", subjectScheduleKey0.getSubjectCode());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      SubjectScheduleKey subjectScheduleKey0 = new SubjectScheduleKey("", "", "", "");
      subjectScheduleKey0.setCourseCode((String) null);
      String string0 = subjectScheduleKey0.getCourseCode();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      SubjectScheduleKey subjectScheduleKey0 = new SubjectScheduleKey("", "", "", "");
      SubjectScheduleKey subjectScheduleKey1 = new SubjectScheduleKey("", "", "", "");
      boolean boolean0 = subjectScheduleKey0.equals(subjectScheduleKey1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SubjectScheduleKey subjectScheduleKey0 = new SubjectScheduleKey("", "", "", "");
      SubjectScheduleKey subjectScheduleKey1 = new SubjectScheduleKey("", "", "", (String) null);
      boolean boolean0 = subjectScheduleKey0.equals(subjectScheduleKey1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SubjectScheduleKey subjectScheduleKey0 = new SubjectScheduleKey("", "?OdL", "?OdL", "?OdL");
      subjectScheduleKey0.setCourseCode("?OdL");
      assertEquals("?OdL", subjectScheduleKey0.getCurriculumCode());
      
      subjectScheduleKey0.setCurriculumCode("");
      SubjectScheduleKey subjectScheduleKey1 = new SubjectScheduleKey("?OdL", "?OdL", "br.edu.ufcg.computacao.eureca.backend.core.models.SubjectScheduleKey", "?OdL");
      boolean boolean0 = subjectScheduleKey0.equals(subjectScheduleKey1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SubjectScheduleKey subjectScheduleKey0 = new SubjectScheduleKey("", "", "", "");
      SubjectScheduleKey subjectScheduleKey1 = new SubjectScheduleKey("u~)]X}Ac", "u~)]X}Ac", "", "");
      boolean boolean0 = subjectScheduleKey0.equals(subjectScheduleKey1);
      assertEquals("u~)]X}Ac", subjectScheduleKey1.getCurriculumCode());
      assertEquals("u~)]X}Ac", subjectScheduleKey1.getCourseCode());
      assertEquals("", subjectScheduleKey1.getSubjectCode());
      assertFalse(boolean0);
      assertEquals("", subjectScheduleKey1.getTerm());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SubjectScheduleKey subjectScheduleKey0 = new SubjectScheduleKey("", "?OdL", "?OdL", "?OdL");
      boolean boolean0 = subjectScheduleKey0.equals("");
      assertFalse(boolean0);
      assertEquals("", subjectScheduleKey0.getCourseCode());
      assertEquals("?OdL", subjectScheduleKey0.getSubjectCode());
      assertEquals("?OdL", subjectScheduleKey0.getTerm());
      assertEquals("?OdL", subjectScheduleKey0.getCurriculumCode());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      SubjectScheduleKey subjectScheduleKey0 = new SubjectScheduleKey("", "", "", "");
      boolean boolean0 = subjectScheduleKey0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      SubjectScheduleKey subjectScheduleKey0 = new SubjectScheduleKey("br.edu.ufcg.computacao.eureca.backend.core.models.SubjectScheduleKey", "br.edu.ufcg.computacao.eureca.backend.core.models.SubjectScheduleKey", "", "sL]jy_2Hk");
      boolean boolean0 = subjectScheduleKey0.equals(subjectScheduleKey0);
      assertEquals("", subjectScheduleKey0.getSubjectCode());
      assertEquals("br.edu.ufcg.computacao.eureca.backend.core.models.SubjectScheduleKey", subjectScheduleKey0.getCourseCode());
      assertEquals("sL]jy_2Hk", subjectScheduleKey0.getTerm());
      assertTrue(boolean0);
      assertEquals("br.edu.ufcg.computacao.eureca.backend.core.models.SubjectScheduleKey", subjectScheduleKey0.getCurriculumCode());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      SubjectScheduleKey subjectScheduleKey0 = new SubjectScheduleKey("", "", "", "");
      SubjectScheduleKey subjectScheduleKey1 = new SubjectScheduleKey("", "", "UxUG*6#x3OTQP)c1j@", "");
      boolean boolean0 = subjectScheduleKey0.equals(subjectScheduleKey1);
      assertFalse(boolean0);
      assertEquals("", subjectScheduleKey1.getTerm());
      assertEquals("", subjectScheduleKey1.getCurriculumCode());
      assertEquals("", subjectScheduleKey1.getCourseCode());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      SubjectScheduleKey subjectScheduleKey0 = new SubjectScheduleKey("", "", "", "");
      String string0 = subjectScheduleKey0.getTerm();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      SubjectScheduleKey subjectScheduleKey0 = new SubjectScheduleKey("", "?OdL", "?OdL", "?OdL");
      String string0 = subjectScheduleKey0.getSubjectCode();
      assertEquals("", subjectScheduleKey0.getCourseCode());
      assertEquals("?OdL", subjectScheduleKey0.getTerm());
      assertEquals("?OdL", subjectScheduleKey0.getCurriculumCode());
      assertEquals("?OdL", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      SubjectScheduleKey subjectScheduleKey0 = new SubjectScheduleKey("", "", "", "");
      subjectScheduleKey0.hashCode();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      SubjectScheduleKey subjectScheduleKey0 = new SubjectScheduleKey("", "", "", "");
      subjectScheduleKey0.setTerm("");
      assertEquals("", subjectScheduleKey0.getCurriculumCode());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      SubjectScheduleKey subjectScheduleKey0 = new SubjectScheduleKey("", "", "", "");
      subjectScheduleKey0.setCourseCode("pzMbU'");
      String string0 = subjectScheduleKey0.getCourseCode();
      assertEquals("pzMbU'", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      SubjectScheduleKey subjectScheduleKey0 = new SubjectScheduleKey("", "", "", "");
      String string0 = subjectScheduleKey0.getCourseCode();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      SubjectScheduleKey subjectScheduleKey0 = new SubjectScheduleKey("", "", "", "");
      String string0 = subjectScheduleKey0.getCurriculumCode();
      assertEquals("", string0);
  }
}
