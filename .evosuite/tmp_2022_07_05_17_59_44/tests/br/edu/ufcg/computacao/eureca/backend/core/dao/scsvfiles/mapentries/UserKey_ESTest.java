/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 05 22:44:20 GMT 2022
 */

package br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.UserKey;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UserKey_ESTest extends UserKey_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UserKey userKey0 = new UserKey();
      userKey0.setUserId("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.UserKey");
      String string0 = userKey0.getUserId();
      assertEquals("br.edu.ufcg.computacao.eureca.backend.core.dao.scsvfiles.mapentries.UserKey", string0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UserKey userKey0 = new UserKey();
      userKey0.setUserId("");
      String string0 = userKey0.getUserId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      UserKey userKey0 = new UserKey();
      String string0 = userKey0.getUserId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      UserKey userKey0 = new UserKey();
      UserKey userKey1 = new UserKey("[7=Q)h?nU]~j%PNo#");
      // Undeclared exception!
      try { 
        userKey0.equals(userKey1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      UserKey userKey0 = new UserKey("W%O1-u7\"A-%&}");
      boolean boolean0 = userKey0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      UserKey userKey0 = new UserKey();
      boolean boolean0 = userKey0.equals(userKey0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      UserKey userKey0 = new UserKey();
      boolean boolean0 = userKey0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      UserKey userKey0 = new UserKey("W%O1-u7\"A-%&}");
      userKey0.hashCode();
  }
}
